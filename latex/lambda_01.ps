%!PS-Adobe-2.0
%%Creator: dvips(k) 5.998 Copyright 2018 Radical Eye Software
%%Title: lambda_01.dvi
%%CreationDate: Sun Apr 10 19:35:27 2022
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR12 CMBX12 CMMI12 CMSY10 CMR8 CMSY8 CMMI8 CMR17 CMSY6
%%+ CMEX10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -o lambda_01.ps lambda_01.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2022.04.10:1635
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: cmsy10.pfb 0 0
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
 /FullName (CMSY10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 4 /divide put
dup 5 /diamondmath put
dup 6 /plusminus put
dup 7 /minusplus put
dup 8 /circleplus put
dup 9 /circleminus put
dup 10 /circlemultiply put
dup 11 /circledivide put
dup 12 /circledot put
dup 13 /circlecopyrt put
dup 14 /openbullet put
dup 15 /bullet put
dup 16 /equivasymptotic put
dup 17 /equivalence put
dup 18 /reflexsubset put
dup 19 /reflexsuperset put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 22 /precedesequal put
dup 23 /followsequal put
dup 24 /similar put
dup 25 /approxequal put
dup 26 /propersubset put
dup 27 /propersuperset put
dup 28 /lessmuch put
dup 29 /greatermuch put
dup 30 /precedes put
dup 31 /follows put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 34 /arrowup put
dup 35 /arrowdown put
dup 36 /arrowboth put
dup 37 /arrownortheast put
dup 38 /arrowsoutheast put
dup 39 /similarequal put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 42 /arrowdblup put
dup 43 /arrowdbldown put
dup 44 /arrowdblboth put
dup 45 /arrownorthwest put
dup 46 /arrowsouthwest put
dup 47 /proportional put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
dup 51 /owner put
dup 52 /triangle put
dup 53 /triangleinv put
dup 54 /negationslash put
dup 55 /mapsto put
dup 56 /universal put
dup 57 /existential put
dup 58 /logicalnot put
dup 59 /emptyset put
dup 60 /Rfractur put
dup 61 /Ifractur put
dup 62 /latticetop put
dup 63 /perpendicular put
dup 64 /aleph put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /union put
dup 92 /intersection put
dup 93 /unionmulti put
dup 94 /logicaland put
dup 95 /logicalor put
dup 96 /turnstileleft put
dup 97 /turnstileright put
dup 98 /floorleft put
dup 99 /floorright put
dup 100 /ceilingleft put
dup 101 /ceilingright put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 107 /bardbl put
dup 108 /arrowbothv put
dup 109 /arrowdblbothv put
dup 110 /backslash put
dup 111 /wreathproduct put
dup 112 /radical put
dup 113 /coproduct put
dup 114 /nabla put
dup 115 /integral put
dup 116 /unionsq put
dup 117 /intersectionsq put
dup 118 /subsetsqequal put
dup 119 /supersetsqequal put
dup 120 /section put
dup 121 /dagger put
dup 122 /daggerdbl put
dup 123 /paragraph put
dup 124 /club put
dup 125 /diamond put
dup 126 /heart put
dup 127 /spade put
dup 128 /arrowleft put
dup 160 /space put
dup 161 /minus put
dup 162 /periodcentered put
dup 163 /multiply put
dup 164 /asteriskmath put
dup 165 /divide put
dup 166 /diamondmath put
dup 167 /plusminus put
dup 168 /minusplus put
dup 169 /circleplus put
dup 170 /circleminus put
dup 173 /circlemultiply put
dup 174 /circledivide put
dup 175 /circledot put
dup 176 /circlecopyrt put
dup 177 /openbullet put
dup 178 /bullet put
dup 179 /equivasymptotic put
dup 180 /equivalence put
dup 181 /reflexsubset put
dup 182 /reflexsuperset put
dup 183 /lessequal put
dup 184 /greaterequal put
dup 185 /precedesequal put
dup 186 /followsequal put
dup 187 /similar put
dup 188 /approxequal put
dup 189 /propersubset put
dup 190 /propersuperset put
dup 191 /lessmuch put
dup 192 /greatermuch put
dup 193 /precedes put
dup 194 /follows put
dup 195 /arrowleft put
dup 196 /spade put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A07B684C079A47
D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81DE96489F740045C5E342F02D
A1C9F9F3C167651E646F1A67CF379789E311EF91511D0F605B045B279357D6FC8537C233E7AE
E6A4FDBE73E75A39EB206D20A6F61021961B748D419EBEEB028B592124E174CA595C108E1272
5B9875544955CFFD028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36
AD861319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED43D08C536
93138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E440902191AA9D8E4C5FBBDA55F1
BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2E0C30B8FD2E475FE0D66D4AA65821864
C7DD6AC9939A04094EEA832EAD33DB7A11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85C
C6358A41342D70AD0B97C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150E
C595E857D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20B6F5
990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D393BEF764AA830936
164EDC2C76977D765F095166FE1D9B0498CAB4AD68621FDC2819CE863510B07FC37ACE71A641
448CCE3453022A0ED0C1AFE7DB2BEC6006B11F4E993C658453BD190269DC5F091BD05055983A
4F869B7CF38AFF99F9CF1196AFB3C00B6407E57328CFC3AD4DE530C8A30A9817F3AF2438B69B
24996DA4104A4F2CCEC2348B1328EB84438D0DC63B767E37C9913E2AE4DDD669BDEC427E6941
CACECB52727BB7341D3A13653F92CED2DA9FA9B19F4AE93B067750ABB71F7107581A0015A08D
B715E35A8E90B5D1F2DFBBBC6B3B443D67206C9F6450F124290E7A922BB43EAA3B5F8101EAF9
D5706E919EFBF5F20FE384A811A7237C2EF5A09851F8525A0602A0B893B297E904E1C0F86249
13D532C89A18B403E10608D797036362C89987172B317DDE23F6EDA786BD47038866EDCDB5D8
8371321552F64A292040226FE53BEA879343AB2C35EC288CFAD8E3C60B35C17EBB85FD14C940
E82B01315DD8E689E39A85742D923303DAA4A5F317F9739CD39573AEB82F0427E898439B389E
89A799DDD5D1C3D9710985772FDDF908A085F1EDA297F11262B7033FF288C863EA05D83EAFF9
91AB051238690FD2CC1D62B6E981855ACFDE11F70ABDD526549570D1F79892D220D1970C230F
F879D7D614D83100F926E326FA58AA1737ECAE914B7BC4E8886C82C6EEC4CE887D5ABA35F770
5234CA9E210484CBDE9E2AA55976770849B995914F234F8C41BDB2B5EEB94FABA4172280DAA2
2EDD049E3D7C4AAAC75CB07AA37040A68EAF76A999AA0FCDF5FDE2D1069704C23306854AFB3F
427990ED447F427D176548605757E516EB657137608B19079BB60BAF2E15677FC54867FA8C35
55ED7FDCC69C2CA167BA71FC238573DFE2507D4D2F30B41D0A23EE8327107DE96BAA270DC069
69E2FFF802A3CE59FE411B190E3E49BF143441B89E52AB02A231DF42694BC676046D7B32AA0A
32A15635CEB06D7C80BEE2E20498AB450E01FD9CE71DA883019D1DC48D62B2D955B4FC9A05E9
FDEA23545DC4C6F8822776F9342A59570875D1E900ECE764F4F238FD24BE7265841BEFFB1EF2
0BCCEA6628605AFEE122EF3F526E328F21D71A77B03AB841D681287A8C8B361103641481E76E
7E355B6B58F2BD9C5B6914E96355BD593DEF81841ABDDF6B981D11607A819B4000F681F325BA
0FF535194BC5D5F6FED8A75001C410933870DE94A42FBE0E45E16517D1DE74D09F4FCA42F337
48040E864AB707BD6228BA17D5E0207A37FB9970367521B35AAE1DFEB7761FBA93EABC710662
5F4E9D620D69DF1B8007693CAAD00A14A9C591E015E60F35FAB1320B108389EE1238E3D6650C
F8A2B1C6FE3BA686CF40DD7B571EAEA169FF87425DA01143B2729DF9BECD5FBA049099FFBC2D
E6DBEB861E3F7675037C544DCD0B386651F8DFD1C51F77E67BEFB8E10C70F7B79CEC56428042
0CB0C2FE830B6029B7D3F72A20AC1D06C00F08A4FE55AD091769685C475198381375DC1FA044
557E4B8BA3C5D68AA798FC1D5F949E30C66321DE4A2DCEAB7CF978DE239F12F3F02E5A7B7AEE
B979E6E0D7E7CBC5A64C0F83793572C766DBE35265E0ECD7555340C3056A22F8C3AB991B21AD
1E40756D1D595BB8AB0D5EF411E3A588894A0301FCB3571BC3A74CBF16FB4B2FB13328C87658
43870BCA4496F97D1EDA1562CAD92498CA1BBEE5C91E16C31DA13F54E9D3D2F33548D84EC7AC
98FD84076F35D951034F4E7E06913CB0F8450B9E3DB89677C7C09F9349ACD01A1E505C421C25
3963FD765EE21FD08F851B6C6072689D3A803334F733ECE932D84E886D089595590E5890A4C6
E6BEFE4752BEECF7309741873F15104142E5CC4A4655AD3765400C6A46E0F308DA358E0333B0
2A4131829707F8AC5E70BE999E9C6F4599EA9DB005082632E1D85FF7860AFEB9A3BC352E10DE
9A0999538AD69BBEF18D3D2E3812C3FFBDA5C099CDC61F67A6851E84CAFFBF891A9794ED8AF9
CAB270E3C78C951C5420C025FEA34B0D59B4308722D610669E210020A559FD6C6CBF2CEE53D5
8E46226CA2D01A4A3D39812BA23324385A0B2B0657BCFF9E53F848BFB6F6BB17E379FC7081D4
3A38FF40C6C42934A356EB7A351198DC63473DD34BCB5D2B911B53130B4E630040459AB8EA37
E67A5BBEAC5927FCF4D7F63F36F7181075D7BC6FEE9DCBA128E35A567C7D5BA75E5A4D20A629
6A6879A24B62EDB6985279868FA0E2CC9898A9AFECB7562457661EB7C487E43FB7C03A55219E
414AFCF164DFFA3E323BCE029A86C02B1E71D16411E4DD224FFBC28026265A79651C56A5F510
7B8C48527D8C8848E1F47C624C7C003DE41A5C53E2D8AD802B251D66E13FA8AB0A31CE8BC14A
2A0652E99865A99CA3B12ED35138209FD48CC20D5EF2973FD7B0D37E5C0BEFDB75A4F09D3B61
CC725F292220579B50FA5D05F66F66E09B63BDC126457C6631548E7F75681F8E0B19D5DF252E
2BBA45E487AB3F091EE607CA278C5966CFF9CA4E3CD813CE831E9FAD3116D8ABBB6A7B920CA3
DCF9343BA475886E94BA90A0BBC5BC9974675744C9162DC2C912D8E19BB2F3BDA3F17C76852E
3CEF0BCD9BFBB3BC79922D5219C1CDCFA2EE824B4AEF8BE6F05FFEF8BDAA51F5A52FC13A4A15
867C01C26240871C37B2FF5253449A02FED980B565D62C6C0D0BC149A356014BBA509727CE1D
F62AF4F28535F5CB1167CC8508089769D07F5171AF79F72721862A0B6CBC59DC79615D5EFE89
B7FEC51FEFFE1DB869D1D0A329D2967E705A714336F0E75D840B37A12E9203B51049F024520E
6637AF4BAB4DCF50B3682D7BF71F654BC5661922556E45CC7EEFCA196B3569B169DB4E01B5A1
52F1539A19B3C2B680795BBB04826BDA3C857158029FAC2E0BDE94EC5CDE45E3DCF6C082DBF3
6D3DD37B135A6F0736E3252FDCE218EB5DB8773E2DAFFD1DAD53671EB3D83A275D011BF5D501
A22D407AE09257CD21297B617E0443FBDAA297D37F66AC436DB78B410E79A002233A0D7DA619
CCA9DA4714325A51CB0BBE9EB6CEA352BB1A0A2FF83610B2A17E19480E9285E1570CFCB8EC7E
1D691A72611D336DE5C6626A1D1D2DF363A1D781DBE61235F1D1805CC2A8C670005F84FD4681
67F8640B12929CF347538B94EB37DA39904D4763D93E757AE2B4C775D98E23BA983E35992A29
2A04976544EC462CA656E5EC37EE8EE46BF1C3B0B4C912DF05AE1535CC654000B06BCDC95D9C
6B5F36F8FD8A0EB31A02C2B863DEBF8FEDBC57D5F93D2604321FA66070D14FED60441E09999B
90A5FB715347583A35314381554031BCE4E6E73AD3FCBB61ED0D4C015863119C1D945E981AF3
F38C81EB3A350A70A63EB06119965C90D7EBA669359FCBDFA87C4DB920F8F3D99C73A0DF7E10
D3C410696D679CBFAE831E3E99FEF6C038F669C58E1EB6F60FF587F5EC561629EF429734CB88
6AF914AC3E6BC04F21D73F184CA12D7E033B301C181D15101A986BB95132DABEE082A617520C
F95EC9069499A02F073D7DBE41726B51FC05A9348953495B4CDE8D0A8F8C04D07ABEB3BA0076
3A80F2E3B5804947E690DB3A7B3BC6C48A67F5D45F5C658FECFF28790B709385D24D02FC3B0C
9F9AB04E168BAC78F0837D9BD402C1ABFA84148FD815240108CD511E50FB8E64F20058EE54E4
ED45181AD9BB777DEE3303C4991EF8EC56B6C278CE63F6C2FF92308A25B9AFDB4585A808AB3F
03D8A15A20FFE399DEE429C959F8B3DFDF81433C41CEAC874479A2C51F9FAEAAD5B7B23230B9
9523FB256896A85A8C48C057A70DE745F753B4183AAA6F84B4ACAB090F33CC2C31186D1D8A02
18A74E1987D86B9C3602BA294CD29FEECE4187523CF511FD075692B1C080A5A22281BAAA4EA7
01D7573D083E2F6EDEA3D49FEAFF2CBF989703E83828E6C7E324558AFB73E3388F0B0E6A97ED
ED5A9553DD33DBBBBAF2174A562AE2B8A4B6E7D13E90FF9B7D650231CBF9EE48DBDB00AEE2E0
FEBF8D6778F19CBCB8766A0ACC9BCE2659771BFA97CE7BA811A3A6C8CBEE899839E525DA2ECD
F66CD99FCED902AA102D92CD9A279453BA74EF8C0CF32C11A412A05CFA2C187833F885F359DC
EA34EE24E90F7F107A23D9EE269C15A647916F56C32543AD5F81D90C84B8305E5BFEF1F3B356
CEEB5BAC54AA00DC9C6F03B4AFCF7AA4D31964377525A661FBB743D3996447AFBF76C8FA874B
CBB374B02C538AC626004EC8E1E9030D60C4A097CDAFC143732FB7431008CF28ABEC4529F468
9720D4EF580676CA855FFEDDC66B7C1DF07DB89EE98C0DB6FAA5551ADE4D674B51E4E3FA4B24
A3DB5196E01C6CA1DF5D669A3C0FC57DC1F576C2BA14D5DE284614AF3276E3A1159CBF8D4042
6A60E8C5DD426F1307222DAA8AA78BEE55C27E26013120FB5471CB33CA4FB642B1C386018EE3
D4424CA411F49CD569CDACB51AB9BB5E66E1E13ED5F8BE0E912BC13C7B23E10C042C33DA1965
6264D7473B4E0C3DABE14F9F94450D1113C88EEC18CFEE640A6D9A40DA9CCED6EC5E2E9F1B35
7DA635C3A2C5A23874E496B868FD0260D30F1780878A900B90637A1237C63D83335A3FD4A664
321C048BF2273F9C4AE3161E1F06E6EA5F3F15CFED43C622E0D7E245EDFB866398DFF2EC9946
74767B7F3DD853CA356A3607C7BF8F9C6889EB9942ABE469EF88368742FB5C41D06125D2042E
EA414B344AC718FEAEB308302F5607C06852A30CF778D236EC90CA10934C629FD59890176264
DBF9C1AEB33A6028B9EF09B06BCB182DA58ECCAA4E2E1FBB13868C98CEB61223E9658EBF003A
C67493587A156EFBE73EC88CCDD55C9C10CDFC52F7A7B274D631DBB5D629F41AC8760741953A
6B90C6E9E4D2C79702C59EECDC65D8948317D67808CFBD81953AD32837A42EBBE48F77D6B387
E272855E54ACD32D3377E19724B3BB370A71C633C3A41A0523FC219EFD5310EB3CB5FC93F0F9
E6BFB11517E2B901016CE8DD44BFA8590EDEA88F5229FFDB83E401034C826F038D58C19E5470
4A4E2E36B7738FC6F80DF4D82A5285853C49F9689363392536C3BA25C00B7885E7DC3951E9B5
D22414C9E9A264954CCCFAF8BCE70CFFD4F726263EBEBB70D52A58B3D6BD029F555A630D687C
7E7103C8B8F2B33EA41732D6FB7FA999CCA0185A13C8BD80A2762AB9919C3E9FC07556BA8C71
49B4CC5B58DBE84297E3E8D2B34591D9FCAC659C0FE115F34ABA807DD94410AF8F532418382E
F8F7980E1598A97A61926B809FD771B2795C69E6B1F15FF0EED329FB793FA3FAF0580ED07F51
B0E1BC1401EA5026897990CF09F9750268AF812E89DA551EC14B457836CD38E5C07179A3EE0A
BD3A85C693ACA829A5E492FD4F1BF12725544FBC81FAA2004784DB367184315C68BEE9FBB1D6
8F91C9D0901BAD3BDA4FFFC203C232276A495EF1B2B82F36FE36716733F0E993B19407744C06
7324BDD2D5641977B1A118DBB844104397F963CA2E01B7155CB84BB642FC315C028FE4502335
F761A9DDBEF7ADE1ABE87D31AF848A5285BD8328ED3E8A2A608590DA11968AA8C0D8010329A9
E172AAC2C7D0061B14EDAD1142FEBD3DDC0ED20023CF06BB146B3F58A6A197DDA1CB2533B236
FAF2825E8DFE70B79A0938D79664C1D26B4412FD10C76729CB22392E8976960ABED0A03D5FDD
C7C5C2C6221BA1FA08020B88FD9AA0CE8B5FD26D58A679339A2AE6730746B8413B6E05361755
FBF11FBFA4974CC1AF36136803DB8282A7F5429327B875D0FD222835C7AB82049CBDA6AD1731
F6D06AD2A20027765CF62F7E4BE9521465A7C3E968DBCF95F2C62EB3829CE6DFE845EE20E8EA
89CA6C46BA14E5A920D8E28A4008C210F747622AE31F5F9036C70FA52BFFF08A4BAB3D5EA2EF
6E8656F89058F4A67933AF30E9A16467D563B2782268E2568868F677650A74F415289CBAC0DE
CDF828485066AC07C011623DE9643DDE39840B1A739B33ED3EC705C13DFB191472987059E501
7002D278168B5280FA2E26C6D51CA663B384F5CFF4A6232F5F68E185231EEA239904319E180F
91DA98A63B38E16E138D2DCBCFEFA5F3E5AC6FE764A3A9F3EB622117662AFD26A124933CB1E0
4AAB53923AF5D9DD972536C4904A1602040545A9AD4904D867C1D0AB907D733EDC19EC093391
3B0EE96E8578527FD3D1204A25982635CCA01A9B101A843F6C373AC4C8E39E39BB13AE6A0EA1
70B59987488481D38806D429E902801F9CE25EEDEB6012CC9EBA0736820F82C640CD8C7D852D
9EFFE6F769D7FDE1DD628861FF628BC0BA8EF12726F83D7FCE6ED8785DBCE502DD0571A76D88
B7FAC1E2DB24DB97394937A1EA17031078EE07D00B554B9C892C68B624D3900266E885028724
3BE44F11F86E95DC00E89C5C47F573C0A7F1CD0CCD26498334C7D37A3AF4457CA805446A7434
45978D8C3D25FBA2350A878E23DE65D49E9E5F819484DC1B85ED2BDFF923216C101FD8F411C1
443AD7BCF5E90FDD6BD29899C86EB3ECC82832FE75A59EB3FA696F2696A450E2504A473123A8
D24956ABEF5ADAF5B3BB57FFA5364214AC0E9E245CCF431DFB8A7A5104BD97D5E5104CA9A057
74D0FCA9EC0458BD7289794FF19FD00E2D05086336902514F5CF8141307C037E5D2E30B62D1C
8A5A7682BC941A5445D8A17F5670554AD4AE24EB95524CEBF2599D5D00AEDEE2B5537F869A46
BF093296C77F86ED5658C3DD3AB9C25850624A53F6573A51C7AD9F43EB8320DFA31F7F58E0FD
FA9FF640DB5B55FB5C4E014A8C50E062F13D573C845231F98CDE7414BD440AD4CE9E00FB39BC
93C3D1C8F5FEC652FC28AD9EF814CD964DEFC5813828B0A38AB0E0BE6E3CD60259B8A50F95CB
02EB685DDE048D73DB0460985EB16DA749DE3EE1625182EDC552F104E547D22E62501D9D4EAB
C09531E6457B7AB148FFBAC7927318F8BE99EAE5AC9E6AE81081E236187C2D384A92494DE6BD
1FDCC5A79413609F865C6067EB60B83B1E0D49D2CABF88F252377787534037AEA74A842CF21A
5514F3A89A00EEA33793D63040EC2E1231C04026B8DFE67E0E0B460E3BC6E60F71AB1C05F295
F617829255BBBAD68D6D7E5AEE12DAD835A693A661AD9923BB65C781B9085640D3A5317C312D
D3C6159C15D8DAA3A592C9F4B4AB648B160E4B3BD2E3DD475573570F5EE110AE5BCA3C499513
061F202DB76ECBB5316F21F041954B9EFF754A628ECC2B68077CD6072C630CB99421BA3D0D1D
A24CC09B8D42E8ECB52EBAA0E16DE13F0F2E235292A0063ED390D9A8E685160134E931F924D1
50C3B1E315CCC86F2AC29D02D0D98DEB83DFC7531128E0AB55B5F7D161A44DE0154738DE0656
66440E46D94CC4AC21C42F362D222A5CEB4FE9FAC0892ABAA08F3A3AB76A22CF73E343BADA5C
89355A821C67A626C0FA6F8742178B9562543607FA648F9FC0971734B99E476E36E9127419F2
7469DD3BA6A1D82680155B4603D1DD68CCFB5D5B1A90CE7C6B780BBFFE12723ACF7CED4649DC
D6D61DC52FB893305D4CB1D956B4A8393D2ACDF74247F0695C9778D5E104CC29E7E8BDEB1305
DDAB231758BD41DE987F4A3D2A8FE210CD806CB42F46951A51F24526F4E43FE18A7E1B432652
01F114F258CB9DF6438D064CD2541FFE07B847C56E66C501758AFDC9C644CC5BF98C6D0D4ADD
4F4245DCD8BEBCD596F363F8469DBDAAF511789619F04BE31FE959F19649D7808F42AAAE56E6
CE93C9F3B3D1CD7C1A67E0FC85ECADB448869D34331BFA9C9A0840B7FED1DC2B0A40072B5244
9B01AB2CAA5765C2A969B61BAA43F084DEFF1E8EFA194F6EBE8C1C475F8895C6DDD99CCA8F4D
A57DFD02A3036407671F3DA719E819A2D2678167EA17CE5ECA50FE1EA359A5756746DBE661C9
F8F4678B762FE87B2DC98AE853E7CF9C2AA1A34F3D560248C5870653D64573587799524583F0
58E7D5DC9D80E7BC03A0FA66702A5AE4CC9EC25ED4433B437B07FB4D3701683D0CB07D90E29B
8B7A0FABF72D0852ECE8F58BFDC35CA72B36CBB334D21ED27684831DB43F34D54F85F19A2B32
C72874AA6D9ABF878A6EFD56BB4EF0E10D2F008129872A03334919DFE9F9692D2A75B870A43E
19890D10E13DA69D3F1BD10FDC0A89EE30ED890A8D278D132C8AF80B14208623EAC8354973E5
A7C2AF274EFFB139976B0C91FA38948F3C1F7E3954D3826F2B19C3799784C139DCB19C2C1ED2
5C62DE80C876F0DDFD3378A061F8293AB0927797F4453DFACD6D06C0C59E7C923BDFEA427A7C
874543DF1E42039296F0EA569BC8CA6B73A2516E4D495D4894162962428B915A6DF5EE0758D1
D24AEB9792A9AED3489EA63514087CC8B1844CB75EDDBF3438A7BFD22E650C6B2042D622656F
71950FB8EC5300A295431ADB83C197CA03F4F10B2675E9FF74E546991E322B0AEA38F8400664
56111A304DB49A08ACE0EC0CC1021F54472EC940A45CBDAFDBD4C90E97A1A652A2E58E328990
C76E4E28B15743034CBB79308D7436074580F28CD65D3D718CE59451EE17F8FC39653B189901
773569CA66B7D7450B8D06DE959722198A2B50AA0F0BA5938A826E8DFA88F173EF5BEB7505D3
78FA6D783DC879DFB2EA9C0E174EA21D07C4D7BBA357FD75E1876E3D11678B9C53D36C276715
C380C13A4AB0983587C48DA984F47860245417831DB2F80FE35DCCAB55898096DD0A03EE4378
ADE96457E70BF5A9443F83E01632FDD639AB962B00FE75E7C641596E458F191271A12C8E11E1
618CFEA573ADE97B5B318005E263F11958124FC005C8F6277FF4B5510555437AEAC5B87E8CAB
6F34E7A590ACE1B457EA3096053E5E12F73265F4387FC8531172CD7E3491D8AAB4243B2039FD
A78228FF7F388428DA2A0487A87CE25E6C415D4B433E69E37B3EDF317D7CD58F1B9CDB64DA74
E1860BEEB893FA916B4270963BEE2D635F982766BB52217F25734946A5C9EEBBF97D1726D325
BD427F5899B765CFA186B553A3D1B51F20568E7F0EF264F75BA793CECBA43FDC09F40B850919
97232288F1486ACF5EC076FCC9E203B96714E10D87BC039A14415DBFD7102C5788142D26B785
4F777B3399EED12F20A6F43289DABB8C2778AE9DB4838416213ED419A20CD7777E9AF51268EB
BE11CB03C9FDCFDEFE3DD8EE1E8A044DCC343D38087032BCEFD6E7C3117E0BBA4DE53AF851CA
0206B46D5CA8286B738360F58F09EEEEC2F9378BFB3810F0C20977F4C1E87C4A5C309C72BFD7
E695DD4F88280DD2279DEC328F1CA2D4DC3147EC63E31709864FC0E9D3923A308ED551EFB420
4E175C1D4009F767E050B011E008B6BC9DA47F98F3ECF7B564828670E0B8B244B0FAD3BA7E48
C2343002F05824243C7D36551C2AB0F4D5EFFE98B89FA1B0E3051A789484A03CD9C1D859B346
85806980C474FC28FB16C569E1FD2C0B4B4E6E4E3789D3469225D4CEA3ACC9C9730DB56BA15D
1470E1D1C00FC73096657390F81ACE17A205F86BFDF183A2ED82D15FCC3FDA5E550EF4499619
BF61173AFB97F698A6B0D8E0CE3517A1301DBBB0D4B2CF504342651D897B23C39865142FD4EF
31285FE25A217E66655F47DE7DF2A43BC3D8EA73DA4732FBF9AB3227E7135ED65F1AAB9DF6DF
84A6138FA963810826C920F04B3FB4CDA20C84B5734DDD661783319389A842728B70F94F3182
B5ACCC4955402CE2D267B63F17D31F2D327A0EDBE40F844650BDA0F314A70CDDCAEA9B8813AE
C77988B920DEE2051D7ADA7FFFA3E22CE81A34BC8363CD26E849D1B7E38F19A1EA6E9BBF3391
BAB5B2AABA3B76EFFB965BA9AEC6338996C5315057447B598EA690F4F498AA0051C9DBA13C17
643E0498B0FAF6989902C1567F3D60301456CE29D86A185025D9BD7DEBAD6F27762D8E089291
98F5B5A16AE3BACA3359BEA186EA1564DA576F758BC5B19E6863639184EFD399FE805770F0DC
7B694E91E21D5FAD6D2BA00252C94DE00BAF886FBFD50FDAC5D5AD3A7D872BCF54060E35F0DE
643D27FCF7B377DB563A546448617C89017331AEF621D2118EE0FFA0AA96596FEEA3D08FD9E2
C4ACC78C97231C63D91450E7B5F4836F54B1280AD9DF2CAF300BBCDF6C6D742B96763EC0ED6B
92FE4AC86CEF1D363EBB99D83DE4014DDE8169240F7E612BF7030D3CB845B5BCF348E31740D7
969932A4786BA759BE5624BACB358E16DD5F37CC8F4F698B7204843787C68E4B370190F45F86
4205A966EA82E6AF4E94FF0D5D74994F0C0EC831A49DA5AA9C03F091DBFD2771AB565F3729D9
796C82798B4DB4EFDE0343A7AC5FEC161E94F720A9A45B9558BF291C20C77430E15E0F7AC4CE
F13AE71FE4CE17EEFCA65A076B47A8836A87B82B63E5E901C6AA96E200B0894DF568483D3D18
C1D1713D6E8772F4EB480F1D53D9903ABD7BE69E4CB68D14820981E97D1CB9A6FFE916559D0F
562FB8023D5A8A2567C682C79B50E2D45AC30DD9A06DB0B3D5F570B73E599D4ED88CE8B40ACE
0216157B0D1E7F8DCA816F2CF6A751AA61D8FB3FB3D3706C983A96E1F49E32245480C9149643
378AD671B6F071EDB1B689208E424A3D3DC27B117936FDFE209154408F2A2F5145217A6B51F2
D0F701A918CBDE5C2025EC66258708A32B5B1ECFB9AA7B9F0E4E6C8F82D12B4D6855305F0564
5046EAEB19F34A586749DEF67568B65D5CA63ABC1713312F0073BC62233709076D93483FF276
381367F5815479C99FC42DC29E71BA6C718C81B032FFA4CBE02B62AB60ADADCBAD53857C1210
12812AE32B492ABDEA406E2720BF1DFB11300BB604F0EB98B796F351F8E5F8DC99203E97DF60
52EF6435BC0C4A5D64BC7EF3894E6AAF7AC169B107255E9230AB11F1EF863979DBA5CF23CDE1
9D9D2E31C71814D8AC2C52E9EE2F28649EC566A83E0AA69F837B3CB9A60B75E88F94D17AB48B
D18FF221A07A42AD8F1570721D5B4DF95E103D1559CA57015EECFA45574252DD1B6FD6BA3CA4
BE0CD66B225B9E21BF951E6C930A6D8546E89E3B586C64458D93EE058AB034B47A2331CA2634
F5E76CCD2DCF6FA03BE411F360AD5B32CE2C70AEF6121E71E36287E49C94C36EB989F22BFDBF
1A6C0F9548FD3D43D2DA96B5A63D96B1F47E966794F248A90A75A433141D4063AA6A5C6C31F5
DAED142FE6790D59CDBB2A96A40F8DE769B50B8C24783CC872EF2D25579852564EF01DC46471
B7D1C9C337606D253C2366E1CC6F40D24900BA9A4883CA16BC6FEF6C9595BE3B644682C46B77
5066BD9D0D83ED7094B47A0E0F373150714B01B8687F3EA1EDAE559C045C461865F4FC9B91A2
0C80F6B7D915187748169CD14F97E606BDA20ACA6697B886B5D41AD89E243D9958529BB6499F
08097A0F33F68D62233A488ED98E3DD665478FD2944E2AA96A1DDFE6EB82BDCE16733D13335E
9D3780F6AB38778744664A1690D7E1A7681AE3E9C17CF10282806A942F656BF3665968B97F4E
0EA511A856C31856BBF80E501E34133C099F2D1B7F5A905DDE99B6C42B07FAC37D4BB1306845
8A7E75719B13AE392E49ED85EEE1CCD069E304F08E8DBB0583F2DE2043BBA9FA8A554A019301
B940BE40BBF57AE7D41620853C171F126EC88DE9AB94FE8BEB9BFF7E846F007B7077456C182D
376340EA99AEE271669ECA77F3441B3ADA0DEEC4701C948D596FEF836B0323921AA1E6D62698
D07A9A82BE2AA6D7C298811C99920584ADB8BB02B2E6A18886594FBEA7909559DA4F5A82B6AC
36F2610A7D9FDBA9D8FCBB4A0BBE288C82505B0E931EC463B2C2058DC56C2C23D25FBB0078C5
7E991CCD19917828F19BB18F0A94C5BE07E241C7167E5F982C9F5929B68E32EE748DA544FC54
5E3CCC85A937D5C7A716A8C455168BCB11237C65F99CEC5DE15224A9B18D8476DE7787125A60
AE3D43E04691EAE16F743A4F9017E747F37A15E9429C3047D3179C8C9C22E1B3F312F2A3C9E3
DD774380CC8D736714A35572D7D5D7B596EA30426E475F5624B8B164F3E006CEA3A9D7E2E838
FFC93863435C95187E4AFC0B20D8FA8A6B8ADE3F00AD6B51CBD28F5CAF043787ED6E277A34A9
D733CEB8A7BB3A9AA83B274E93FB94FCE07B4430C4EC2641E63E01BD6D28875EE6C1D1F312CD
8929C44CC5D6610E81766143D9B521971118D4AAFF99DE5E8D0B593767BFB635CC3666522CDF
94F7C3405CB5D1395205A3744EDEFC81BB309757C5D0F9FF8D55CDA155BADBEE2F50CD2955E6
2DB0B60C47045BEB9D7CA5DEA8B849AD6B2B75594CBE7B0C1C0F1C5474CBEDE8BC9383827C6D
F7FA12A16294DFC87C06DE28767888D21E85F8F4F149176DAA0E0175BBA5297E94CF9ACD0A75
583792155E3D5525075D2302F438A725BC31C226CA1D18FB222E30759E4477428EBB02B72AFE
BB72686AA496BDDBA889667B7943F3E67EE1941F8E884E245249E212D235CB7CB80BBBB410AD
86C79BD9D959767D75052314082A93AA4878F72B2D492E6FE382C902AF1A86C63CA4EF38B2B6
E3388B9E3A002528486CA8F8D33BE8BECB8A259B4253F199AD19E703EFF16EC695B49DB776CD
ADC9CF3D3C1ADD2F42AD6D1DAD8B21B67D2FBB35B93CCCE96E96CE3D277B86CB996570E03D5C
88335B53709B655E6A94C07CE0A42E46448BA71F4FC26198E61C79BE75EDB4D8B396CCE0932C
B5325A8FDEA587F0D3CEC1523C4BC1EC7F449DE4E80D063A4A4DC5028CA6D11849D17B88D400
003644F795348009131FD88C8F1B6404B0F157BD7A38BE605BC9187DCBE2E2566B14A1E6B412
BFC3575554FE79A4D964F858267D589E045C0B44D194D208B611755268B75FCF76C9018D2811
281D84676BDD52512491BE789E052F1788E21308D91C4FA6729A9589E5099C818F23436F6A5B
7EF2A227BD48E8EB989A3D160592DE794AA7B4DDE82D1FFFB7B54A2DFE662FD75A9928C1AF34
29EFBAB25557DE5C2D8D172656F0011A25BB7473E1EC56A3E5A329699CC5B1174A187CDCF971
38C0418256D4A5F3D524F2E8E798F7959DA26B5759266AC85425B0DD0D120CE221E6146DA249
ADA68BD409EAF66B2E0E2126741BCF23B17EE76BE42A3A98258568EDBD8071037E1441E4C6FF
499F9D122ED505D205D14E4FB96F0F6919F778E70D65CE53689F9703C522CE33D2EAC0D0C6DA
A87BC96332946FA280CA70EDC593E681A9832D3FFB049F1723D03270FBA0CE8D26ABCC4F0952
98ABE8E584B5C2398D8D40FF035AB309DD09997041C612FD3E919DFF89D942711EAD46AD88B9
F8F5A7DFA0A5649E5538551BDB66246A74D83A93C223DC9F2C8210D18764A09E12F44C8E00D4
2FB0EACFD71BCD347FFE5F8BBDF0866913C843CD7250830D9B939D629B85F41317A0CC64F8F9
326DD88F7B5F1B85F36664EA9A93D94DA23F5AA633F03F8B126B0BBC54BDAFFEF696F87CC146
3118C6E8EC6119C84507AABF53DFB2962445C0C070C4004BB29788CB7E80402B4F129CD169C8
A86E2930DC219040750C89C9A98309BD2E0D75C9308B44CEEFB308652EF74A1ABEC02AFFD219
F4770F90049F29C8860238C89942657BA4344CC9BBA7DC5322897DBB8ED401142136A1277E25
96B53F9CD171BD41E8F9F95DE0AF97D7DF8CF246072DDF8F79B0D34CFE637ECC6B9DFA669D29
7395EE6935AA830184F0959147C07FCC7C54EB74DB0D65AFACE372714933968D3915AE3FEE79
CCF2CEB66BBA763769075C04E9EA8B7766EC65F80C12DE1081236BFBA1F9734C08FE0B84D978
F3D54D4DCE242FA65B243B42B9A937EDB7F36F1EF973B1A230DCBA8D2B914CAD3E08CA56A769
7C046E5B35BDDEF0D200200811A8E90BAE2F87FAE2B106BDEB0B6453B0451736A16F2A4A4034
876428DB735341ED59852D69E92C1B1FD07091EA476E88A666F0BB4FA270B9C05ACDF31DD38D
0EFBA1808C8B8BEA0FCBE0FBF6B2208BE201FF12753CCE6F34B74255DC2AA1DF0366B71211D2
9DE0262DF6A2B916FD8306C87636A00DA34B3D0272F37D38BAEC2A14F33D6689542A553E4225
59C1581FD73B8D63CF8FDBED4B3CCF9C39AE83C0DD287D5D239F443DADD96092A4B4A723C341
BF97FEA378FE624B1AED5AA20101C384C550CB73393E0945449A53EDA528A465CF4FAA3B020A
0E3505FF154995206C0D0E26B29AED1243932D0AF02473667ED86B56875E818A8CDFE7678465
BCCFEE7818625C7AF987BD430EDAC3F34B78D7BECEDAF0BE4BA4A0412D19585025CBCA4F9583
65CD8DE8DBB00893E287D1B10DA47BB7CD8E78ECF36940C865099B3D34C8E063D09D22DE91D6
9D25F0BA34EA859B31B750AEFAF19D26953D100951D0591341E48BEB10BA8D11C44DB5D1EAC8
BE176BBC0B878B7F945E69CBA526B7E06E64F9330A9F6CB8C49E09E2A26A4A2CF6A0AE69A348
6245CCFF8AA3F5C72E7111037D3C861116913DE6CCF8C5BB54BFC2243FC85367496BC7457C85
E81CD556A6E28002805EE1FF1CBA1EA83500CFF41A537A115A57D079FA28FB845E4ACF04A710
B3A1358C00354BC0AE4911D4940C5D76104BBFC0D68007B4E1E7CE32B2839750F7A5F3B6FE34
8FBFF32330B3005D165B1359061FD7D6C5BC06F1F77A739E7A4B91A4C66E1E864999292FB070
BC941A8B28BA052D5A49E492EF4D8B5A61CE23BBB974B183ED33E1C08BE46D0EBD041B955FDE
3B1EF9040FEC841C8ACC4BE3DB3FF3ACED3874214E60E2C3BAC462C080D6DD88CABF15FFECB7
F73B719C4A7FB00538791B6396FFCEB6D5B67DC19505C5435B37209F5715033B7A75CCA4D38B
8E0B10362025D9E11BDC8311820EBA7280FADBBD5E89AC6F2D1F828EA79F806DC858CA42EB35
E59DD17697BA463273C6A0B5295D7C58AB9D2A59B770BC6A6DD4D823FD4825B63107C2B0D6CF
0790752541CF2E10FAAC32CCB0F8FE0BBB3027FEAB8B06651526069B04EC3BFD54563BA8F326
1FE7962FA34A39C845C62E99D60EF0FD729C7948F7306219B339B58EC0D0FF2C9C8872C183BD
1C3E572DE453B2D807271D10715B17BD9E2FC7583F83E03C74A64DF2BE321AE42EE945BF7E74
B9162F918A8F11D3D923A4CAD3A98BF53A175C3E26086D2499AC567B0B947F7477E7F2243D47
C889EEA390B3DC7BBCFDED34946FBFC4D184CB34B9332B06953F9DDADD9174592F6BACC37EF4
7E31ADCC329DAD3055374ED404C4D812D3DEEFAAE96226804980AC01E0870C992608421D995D
C954BE4C58AADF0A60AADC8A27A55E0587B45B4CC45CDEBCF6446F462A14E145AB724C4E5C68
EF5A86C54F145E43ABCB45FDCC540B718AEC2C33720546ED2A2D08961F01562D05E014652D55
C9FA7BB7D34A1FECAA7A2C6FFAD2633178F6B2C41E4A01E4A10B7B9895F7C069062D762B1E01
49E1001DECF0ACFF4D9662BC3C1F2AE1B1B860A84CAD344045D4BA7DE000DE22B035825F66A3
1AAAAFCAE6A0F981DC393F56EE1D2BCC60DC4FF28F44DCFAB6C95D5AFD4071BF5BF19EFC8A6D
35338F34433DA402F84719F300CF731C4B55DBE7F7354E002D85DCD912D4AABA2B02F6D8083C
B2C8F92C2B92111156713D579E796C41C508536345ABAA5EFCA39D664E1434BB6D0D0CE6A584
E0316880E16E6C615246103CD1DCAE897A8396FB6C0CBD235613E00BB8CD2B2F9E993B1A01AC
819B9C6F679A28D4338458E21BF10C7C4136E28D2B060F694B9B03C83675A4A616EC53790152
081A7B4B1750941CB1117BD569A532ED1C49DC49FA3DA0D6BA30E93CB4A71A14B21713DAF82F
D93C9AE4D53A2FE61EA62BC37D38C2500EB7B5A2E4B448992F428D75928AF8ECDA6C9A376B77
17C1997B35C3D9971D1D49BE9B8E4626E3953751F0C6D784B406153488053EDAB38B3675CE8B
05C030331C974164088629E2A9B878063684853A37F20BFFA7D8310769A43774B51DF1BDFF39
A620C578D179D3128140453A0BE7AA76F71D106C6A58642F1A6EFD03E5EB12B74E184F1C0FCE
134A886C645E5762BB77C4A03BF0AA7B93E8766611974162F3AB8F9137E7E8A17E6EA75C75D2
E6FB802DF69EEC93C5E658FFEA205DFAFE8825DB796D4E8E232E00122D57A709A5E0543D01EC
1E2522ED30EF484333C222959B8B98710F958E9C2A57B44237427410329C1A5EFFD3E1E1C125
3C3A25387B5C165272038F19653F32886488F16AC31F7E576327E606CDF3172614561291E7BA
414FBD1A7558084D9CD408EFB7FF5CC53867B3FC96E6AA9419FE4DD98A9A064CC679D42829C5
9C96092F13F77D9EA63249762270017E4E31E1DDE29F57ADF2EDAA9106CC1492A8171717AE0E
42A9116C91CAB94B34C904A2811890DF7B52BE40C01846D131C8DFCCFBDF34EC9DCD5F4EE582
E858F357C3853A48890988859B202CC2A8CF675BF8B3C0434698A4A34D8DB358E42A38220874
F88022DEC2AFB967CF470CE40919E9F0A17E901806D53760FA81983D4E68471440BF8D1BF07F
CE3AB280E3FCA5AB0DFD9BBB74F39752939B75D62C43A6819A40464189F2A49F12B3D25269B8
CD1FFDF68C76AC81821CFAA668F2E2C2D5730C0F201DD7102EF066EEF420355806B127CD6B05
B0C5644072CDF444422DAB1C82D5F1B5C116C758717DD38C1919B099C4DC3E5DE9B6431BFA94
9FD09B01B723DCEB135960F8138D20C331C41B9BE376DA25F760F46072C799F7148C5C25445C
68F9A531F07CEAA52365A8291001D8B239B96CD6510F71C2F2EFD6DE3A2FD816392BE13F3901
CF9DD30CE20351FB9C40492B4449C51768A0C34CBDAB175FD07BAABB0B49C935BE2BCE6527AC
AEB677DFD53EFE53C057DD8F4F6235D93DDAD1BBE54D5E7832069D2E9FCFE8AB5C5112F56466
08168332F691AB0534407FB3A3D36D3C193E2761FD034C689BD35CC7335AD8600E7956003F56
EDF6EFFAB63291C1796A1A8829D62C16DF8344BAA8605A538C320F8BD41E35480DC6EAD20986
D1E671D5682C1D77D7C81B2E983B5D2955767A5940EE1FA51159FB5176091BFF203057D993F1
19C87D5669EC4AA1ED1B1048E0D34A439A10A03E64E6CB5305003832257C5CCC8D53196D0B57
AC82A5DF7AC9F2FD1528FBA6AC34DE1156D9E0CAD7D3B1E1945A3BC75FD91E0F76085E05B096
E139136ADF04CAB6F026C46E31C544E28B7D89A3AAE524188657E7F40EF34EF42B7B636A4501
0E9DA1D4A14B9F673ED233A46A8BBBC9522E5D1514848D51664B78A607390BA9D4354464F3A7
A91A876C1D893092105557CA13E2A460620B8ED0378C9FA6272196E5F7A2D63AD9732C57D478
549812AB1EAA2E735FBFE0B200D67F57161517B0B52C10EE134C0696DCD8FA8EE004B3078241
88469842E260D74758814816410E2BDF23B7E2075FF18723593536C293574E1FAEECCB985B02
E3FD624FFE0380E631C362985DE944030F9F13427AD35E7B87705EE761BD396B92A5DCC06D56
262D495994890218F117C3024A813C943A0608EC03CAE0D496B557F748C14696CE391A140DD5
E5248A1BE58A1764076ED3A5361A2563BB123C4831DFA952D6D8872A0E3C07142BC794682A94
A66E70430643C4096C71F6A634E2BAB8AEED329AC08110B690CED40CB37230AE9012BE2CB6A6
EDA2E2022A7CA16771A5BD2B6FA659BB47CC2C427E4C209D01815F0A907B096085B54752383D
C6FB049A147E6DC9D82DBB89C34EB50108D4FECA7DC223792292E64801443F7AED22E123077A
A52FAE9AD49AFD8A3F330CA78AE6B088BB8681790A357B46E786602BBE3A84B0781433C9BD1A
A098943D50743BE32FBCC9A35FE81AB29525983D6C93AD2EB0C66A0D75EF0F85F8A97CA5E54F
A5EFD9E23870C17DC543E87AEAB16A677B846E1F5954924C60650F03410B4C7EE099415B6021
E5C8F33E81FAEA57B6DD3ABB45BE7DBCF2D23CEB44965C34E40EB67EA8C504BE900FDED57E44
9A6BBA2C55821FB261537036030831D23EAFE00B3113AB3EC777DFCC357BAAFFFD655461888A
A8144629E39F83E169384685C1691927FF889A67B43B7F84689138CEB06C6AEF4402B5693BE0
466994665CECF34F5AD656CA098B215754794A6E567CB590C2F01795B2931BAB6F73C777BCBE
505D1CCE87026CE3DE41152FBCC4E1470F7361FE50843D0FDB2E7209B2CCDFC5C7D910BF3276
AD395F46DA6E532343104C4BFFEC3B627F89BBA72BCF7088A0AD564C05261670DFE2B1E28E8C
61519CFBF5937AD54B37A7B13B7770C93097364F5F8596BA3BF5E047170CF9F686D18ABFB7C2
4B0B22750D6AB28A1F47EFB0E06BAED2948EAEC810E2D11CFA7451BB33A2FA90FAEE1954081C
CA93A3E18749CFA50A2F7553AA63000A2A19FE92AD0C0D4974FF743D3341185F8916C783A466
C270C689389C9767289B1A00D11226AB3E1E90E9097588E0C14ED8EDBBF717202E5C5DAE9931
2B1E384878E4B6991D10DCE9252A8B8F0B2F2DDEAEF92A87299B2BD39FD1488A57CDC77FE147
0395DA0D4D7DE8E29A10D7A07849C78F003A3F2989D1EDFA7CA70B0F89D904A5DCCDBC292BE1
A0E5A35C2F6F5BDAA9EFA07D38E68959DE0A5C01FE0E5FF7BDFA46B4D15F050ECE607563BE52
B3104DAB7805B4F27231CFC0A7396605CC2A6D439C360903086CD1112E671F74E4E7FD80200C
A5CBC9EC087FC2C95FA7529713E43235767E29035D0BDAE76C4D4BC0AD18EBE12ADC7990666D
08EAF98545737FBE26F11EE1B42A52B170F37B21896E33209A9BA4A03285A55C6F98FA3B9649
28F83D7830A938FEC7B60F454BB143507407D3B12B6CD2094DD9AA7397810EB21CA7E47CC304
55314428F5EB009C9156A296A12796AEC951B5B6A8E2A188D3F3C5C03EE1146A1F94DF8E661F
8524B619433DE3AC98B13DBE39135BBA43C0832944FBDB106D0696CF114DFAD04E5DD7B6A7C5
2D9184144977194BD24CF2788A56EBF5F3C992C60B2F4A7B8A697FABAC56C4384434F10C980F
1DDB5B79DED34985E2D6344A1BC036CD50DBBDB8BB002F96A887036B8BA9E81893DBA05AFD50
C3006ABD5A74826AC085C6F85168E098CCC5F17F36381746FC37C6352FDE3D8A503014602EE2
78DAC70A16ED96CDE5BBACBA2A97232F71400B8B4CFD4C44183345F3165C4D8470AF9709806C
87AC87CFCF6BB1CE6366F63E0C646161E5EFE934CC215DE13B2E9A93802FC3C1AAABD6582A0C
B2FBA304FB5E50514B8D2FE55BE1545D034F207A96DF61AE7EAB1C06D26AF493E51B479B3BA7
8E16C7FED79A9EC38E1C4988BDA8A37692F39E6B944EE7AFD329F827AE8E58D7D6452811A0AC
50F3ED5F6DC055C7CA7D52FE746F23EA6BF02DB28342E173BBEC647E38EFDCE4458295F5509C
BA247A76EA82685EABE8846E7B07ABAD72305F06A987178098D19A37AAAB4D53988C69FD7513
014E2DCD9A36C102A7F49A22561A32F94D7790A7D463D6649A7F0D395627CB2AD50445A602D0
F6C2E1BB13ECF338A50385A0454EAD42B3441CDB836B6CEF0817D7FE9438187045BACD849EF3
348EA859E77C0DE75175E1DE97F2766C2D25F4CA2B2F441E9FE8F8AE95F9D8CA736AA5AD7A8A
8D4CB90371268FE41A623BFEDAB04FEBAFFBF6FA61DD1A3EC255774CD58C927AC41F24769F20
D43D0CE013D51A7434981177121A77547C298ABCFBF0AE83864E0A5F052CEC01B7D39919FFFB
3DC81930B423003348BA7143FF58F6908803695D70A122081A77BA8F797CC85E39D8ABF419AF
8732472EF2972137AE3206787149550BFCE8393B261B2AAF73417473B467464FCC848329BC3E
A5CAFF477862FC35D35BEFE5850153733D88BBA52DD1EED6DAE87A1EC09877415776657443DD
2C454B3D8ABB71762F0D636963A855BE25CB52D6B621C09E21A47D0DED25E92F52370DEA91CC
4E3F118C082DEE635443582C57D7151B934AB5975C9D8691D0FE281AEED8C196B06F787DD75C
F6A04BF63A3C9B88A36103B18CCDDCBCB213F270E4282C3B40E7B91AA535B6C58B239CD7DE24
F832026ACF4D87EDC83AAB433D03AA633B094AB62F2BA8C0265B9E39D1072282C0242B570661
4C34C2F2DD37287C73515BCD77BB2A4A428839F7683C4D8C83324A8157D56B82FF518FC3D903
F85DB1676EB71352E46F1B40651CCCF53F7D92200778A2F3B8414AF97779BA01E1DDE594A9C5
E45A1A3B5BE613790E9126723B95E3EA265E6A6956904DB6610F997C77E02F719EED9BC40AE7
66C37DFDC2581A1D6C625DFE94146E39DC435983D415EEEE370D951F660A0C8A34AD303DA80E
D66258D4466A647935580E86D723D923CD3BBE150B558AA4930CB9EEB4A4D2A57B4F087473A2
9BB3760B23AE615B10B58412CE6BA4632B91B6D775C06679AE08382F0934BB6B0D4CEE4F5B98
ACC6D7D5461C6A9E827A11603DA185E451C905843733031422218539B01CE7807986B866F659
761DB98CB8942BA1959AB973380394F70392ADB687FE92886D628B5873055CFF4F1052DCA10A
B657A147188F1E42B180685B723331D8CC35273E114F324D53C9DEE784F46026DA726BD29388
3D6BDB60D4A2198E89C21816E3E711D4FDD2C1A9D675A71BC6095F529F8625E815F82ECFC865
29A5AF692E8ABC76B940D19D24D6B96500E36FC662D5937F64C1711C1D265A2C90DD56ACF6D7
CC33C7633DB37BFD437F5C3D78973E61A257C379FA1095807579EE2514AE15AF5B341B43882F
3FE19236A59E92651EC64961E62E4FFB7A8F800B8B3C525E718C7E7ED92EA07C04FFE9FE5CA0
59D2FB05B95800EFC84C3A7C6B816D821225FBA9D3E39AC8052D9F37828218A221A031DDABEC
62BF03601183E68C83E8BE713A2C59E9306E8F42180ABFA2EF83BF2DE707FC35B46FB6A6ED72
8B569CC07BD680CA25661E2F9FD89428BDCE458E96578F725D210B60AF26DDAAFB382BC8E311
69D5BC5BFE7D48E92958EEA2823E3DA5E3EEE7A6AD644F003915B922465FDF858389AE6A88CF
7924DCBB96EFD85F12478B4C3D330BC6C5FC412091F3C54C9F1A6BE17973C025F48342D566C9
6220E66D95CB04477C054759A3C6DEB3FAB5B3F650ACC6DC1A57ED0B9859C9256C6BF4901C68
382FDB25AACD47DE9DF59366236C3C4BBE5D50465DBAF139F4F49E2D6E5CBA9F47D558BAC06D
FB98131BBFE8FEE681D5E4A737021E4B175B1CB96ED0B5B011BCD639C9756F8C30AFADBA5162
A48D8F5090C469A8E1EFF83E5613497C8DD7BD7B593CE3440C46027F0561B187F75F9C3B0C82
9923310354E5A903FA9846C199A405960AC0731188C863B460B51FBC12B407F50D4026AAEBC1
D21474A0915AB42B368AF2BAF658902D3B28E143C6B2B1E1B414BB399EF6A39B5ACB2EAF438C
C0B38FB44F1CA9B4174926B585BF5E287F8B42758ABE9476A9E4D8B9B9D3418014B2D1A2850C
62D4732D2024D4262FCC42EAAADA3B90CA39E03674AC19443C5B5C496C4A83324F822692B823
BE229F901AB0CC2AF98C43B0E13179D6931F1AA28D8DC2B1CF6C4A0959602A84E5AB1D0575DF
DF70E347A9A6389EA7736D353D0E5259A7686B50887883B3C9AC232B0DBA3DEA5C6B59D5307B
205F1A7D5ED917CFB3A2E9E66080BFE5B36BA012D05C73F6864C1E59D05CA076147DADF784EF
F55390B412F4BA448F93520F2D41BBC3CD52514D8C12BDCC69D4C5015B3462B2330046828399
029F6279A8109034B2D8A5AFCCF1B0CF20378A411863148DFE9DF7B5BA6219FEA021D9AC10B2
42FC55A829B050EE40C7C8213C175F882CF68F8EDFA80CB1A6BE053B339A70B1CC92191D15C2
D3E16ECD5F145AEAFDB83CCE8849508A70C3FDA228949070E9103A881697FCCF2AAF69A213B6
808F27694433ABCCAF502A8B0B6F075F7459DEECABFB827F760C8240D88EF529F4284B4CBAB9
4E8651BD94516005F72268C13B962867EF8B7939E1B077243478F83951F995B8C697508E9734
7E5EC96FFD7459C17C9C7C5FBE3BA5CF15EC0DD2872A60C31736F9C3948371B10A903DF62A9F
C360933746F20809C2C0917302FE0A397F6682F51CEEB509F4A070546C7422DF6F421B801D06
B3CB6F7D08DEE3E53A21DA5B416678170769ED91E27C34410BCEBE8FFFD94B2D6B22E88FD377
DC10BA223C7F305C6D7CDBCDA24CA5B2D8A0B83D6399ECEE47BE4421A95E6BAFEB7E539DA63D
CF328E55F4239EDAFE7FE722BC6B2B2C4FD89623023C8EE3AD682DB456968332CFE7145C7392
F609B0E6B5DB4F3E5692F3B80E0705CC5E712507D6B85E3372A54911336ADC17B2835EB4E470
7AB102FC2B765A2EF0E0EAF396B27C04DC6141E769475009F5784AF8498DFC70E93F5FE96EA4
364B3585DF27FE165C25689C8CF8D8ACF3BB4705B462BEFF2559A4E43B7A1118E611CC64BBA0
4F2AC87903880F8FE94B2AD27C1DB989E9F369DA73BFDA3A2BD6E6BA5ED03C132505E22B7DEC
FA770050D6A29C09E32A3F610B71E5C66A96414FE18030F79C652D565184723771C3F7E67560
27C68BB8F0362023C22B90B1A6B742D3D65297885AE7226F7AAA60309FA0E089F30731E30F4C
3675D4A2C9AA15CC3F8F54AFC4EFC6BDAB1CFDD3FA6C62C58E1D46F0F8495178A7265AB6B96E
E7EF51CFF1A24EC5223166239F892BEB7B2E5848B5D074BE03EC888937AC362D9E0EBC51B9D6
9C33C1BC3CBB2ED97CEFFB0BB6CA48B78611F8077532370F71A783E414ADE9C2A8E2120BD984
9F52872C65A4EBFF544E2DA3F27477A13457495F422DCABD8C42B84E3E2D28CE9B8ACE50456C
0D67D7BB4702A51D123A9290D7531611EDD7D022F6903D6B3F9574C3536C6BAFB54B00702F9D
C1EBD4BE5C2E8B113F92081C3A7F2EF92E04F0A53E67C1A0DF27DD65BD8C80F200260AAA9D67
A78A646F069850C56DE92BE2FC4FFCE96F0A4192E7E8BFF17413F1E0C01FB92EF970477B44F0
13B3C0ADDD856EF6E7D9DDFB2A88692760DE7CE43BA60528EE4CE3E656839F74812BD758F890
1F3E0E26782815F286F01E88ECB90D2B95B5A1183836D6A998B2EF57E9986185A91C33A0A35C
AE7D925B8DA8917535F1B602CF8A5D6B18825021B240BA96623696A8F6E668C5D233D537591F
5877AB2CCB7E954C057010706EE26901D64B2FBA1DAD9CF2A0E7AC704A96A3C4F5D6CB95F78D
A11ED9F98D36BE48693EAE30CD1BFE3CDFC47FB46ABAE7D67267DDDF0A319EF85C918FCAF6E6
574B5621218D04FE1864F754E22DAE2000EE135B975E3630064078A7DFE087EC81B86357008F
097310D45F7C10A253A90D713A790F6B0B3DD6FACFA99AA1513ABFCFB01FD363F18142750A33
FF283543377E73D1C006D8BEAFEF1BEA4EC8C56B46EB5FD06B85EA234EE5CB844765C229F084
DF8D3BCA608C34742BC6A8362F5A7994AB11D85600C5BAB2729B89DFE0E3B47ABF8D02367B53
9C27FC772838D806C991C6B03B9C6AF106771F6F7458F6AFA4A3DBCABD7F9E45FEC22A681F3E
039A4713CA7D9BA1E091CF7244F0DA2E53EA1323E03050E61C72DDF8C651F4C340B35FA341B8
8276A741900C9DFCC0F7FF866CFB348FABBEBCAB187B3F8AAE2022574F287324CF915AB8B230
1848989E807567C6BEA29D6ACB9CD80D6B54928F8CA4303C6B519D7E3E97EE92EC9FFC4AFFE4
D842C979DC923479B21136AD12D8DA127CFB12053E0B293A35D0152D0721EA96D7872BA4CE44
7978BE1CDCB2FDAC0D12FF26396AE0266D47C2170A444580EFBF5791E1490A978A15141526FB
1C76272DE761167C467178F10BD9B949A4452AD1BE2E79A2290C356ACCBD0556A3E68A88EAAC
42F166C263F37A2749827B09F77C5BDBB813C7EE62F625B68BFBF3F265B1D11D7E19CA1E1D31
BD6CE1CB12371C2C60F2F8D56D0C122034C2E28995FD0CB0473FCD2893892219BCC799A233DE
1809EEC627FDE75A66C7475BC5780D7F3B1330E496075913B369CA8C50918736BC3119228D93
E2C2316AC4418AD32B741665F81FE667D1697D8F59594882424F012228DB557D6FDBC99798BD
81C40D89C583BA80DE51DE3A458D350BFFBE35472B1571F78D590216C812EECA285C6AB4059A
3636B823D0F0BC2D931E7E90E2B620374099A43B8C93DCD6AC9EC986E84A2F6923C49C92E016
F58C540F1AD4B2AF8D878D5921C725FDA3485C058D9FA1CA672411EFF31EDE22BAF340B62D5A
6941B848EA9F56C651DC64D5193631E88C6A70BB78606A9B7EC9CE354EB410A5861206179B65
3211263CB49D512B20EF237BCDE0BB8F89A2013D08AD7F74EB690986E6097062902B4C523B34
E798A7029289C6C43DE12718C6E8ED13A4B987C44A1FB25B69E121BB352BD938695E64981DCD
DBB99DE0A98D21385A29792D9792949B385CC952F2E7C874A75D43D331091B4894C176A42EB0
A8F3D2C56AA95D4FD8813BD56F0F41BA0C769516BCCB1FA3284A9E973C5414300596927D6850
9592E224172ECDF8E90D9962BC4227356932574D951F6A0EEEFAEFAF771A5BC8A07480C424A5
5BC53CFFBB6E4EDE0F6F8FB506B5824086D8CBD0C3A1C20D067A111DEE113523BB7C690D3DC9
1F230DF7073250C779D6D3B1EAC04469D32C787E9425C27D9CED3F514C5962854D8BE3BD9B08
99685D1648E46A1484A7D6B820CF8382034E05EE3BE3E5C41220B68C7F0D7DE690B1A7F2A047
2D11C34CFF62F3D355FB2E237738773DC16420876A539E9A04CF5CB2389DCFD604F258317573
E5F46265BB4D9096639345B76EBCD2E0290721342ADF75FF56FFC00D302DCD7576CF0112C9F0
E30E4943C811081D1B54853777B7BA249E7084F6C5D7CF3C6146F4A3F88364DAA093FA30D248
133DC41005E66C1B56C191E6858ECDA5D3D8663635D796AD9D3548087D8753BCABE34D2CCB70
66CF23EFE18967509D4F3F6DC3318F7827C01AD194F25B20DC2A9D08E4878DC6C4A42902CE15
D2DF0E91D477DCBB5BA0D22EDB471F077E1B8A04F4111EEA04E1B29203839C19610C14B2FEDC
C1D6DAB356BE0FE566CBE184082F89E7C2C70EAF2A5123064A8118919A4655C4E6BC7E5353AA
FB4397FE2980588A678A2B7545D1CD3EF800A64512A1DF23A23249344278150A02804E54670B
FB4402A5FD402415598E1470196FC70F90D43DFB83F9844A2B91D914BFEE9164BDCF1F88117F
1337CE78CFA07C5D37F5F4CDD35CE6C8653CF2073699FC5CF848978E173C27B545ED35DE88D3
BD45F85782E5E51A9C2213C2DB65ACDB8E74274F7BA880A1DA7205FAB07E86A650499B8B2595
9C1DF4443A003F2616A68266C7BA1636767FDDBF3F50D432628E5219BDE4658DDAC984EADB62
F9DB863571E4DA74D24024C2491725427509469F5325E424B48993707071EC3C45006F1986E8
79D359606027510D5383E2178D016B402A18B914247E0095F9B7F905ED97386780B1120D3909
93ABAB3D18A36A2EB9BB8BAC2F084602F8BAD9CB754FEC8F3F4A263F48263C270EC619E73C0D
1E9178CFF739670A55CE6B1FC8EC2DB82795AFEB2135444801378862BB1FE4188C1C027840EB
A39E431A4D33F1DB6657F1DA89D2CF31C9BFC649A36C1DA8B28E993B4EA3B00742522FAFE528
9F1C736D6BA6DC95EBCA8DD45AE1FA4053411CE9AC5F768E3F20E2E0B799173B5D0B1FC393EA
7C86D8D75B511BA49B22ABCCFC43D9EB05B92B773728F9D2C14F0ACF1BE7C551FC2B8AD0258A
B348D9972B1939F9907B6135BE10B0D5FBFAF7BF857711DD5874C904544E12D6598A30E426D4
BD5ADA82F18AA5A78E5AF27E29C2B084A59DD2FD8DFC883B28296FEE1E9C143723667CAA3469
730DE83F2766A0B7F67025E941E600A3CF54BBD06D7AEBD95B80A6F05BC1D4FFE50E7FED9351
FA364B282B4A7D252F17C2C6FD50BE1A7DE88EC69E9436F8BB2BEEB6070668CE0A55AF51AF2E
9AB88DC3809EFD3BCBFA40778054EDCE6EE4D5E890187C340D22A7BDAA66B7D1FBA0C82F1B31
596699294BA2DFB4CA8DD08BB5B1DAFD4CB81049C186A7E91CA85BF3CD725084CABE2AD14BDA
65B947C107F93D8FBBC10A0243F9CA18B9868D6BB70963922B30D619BAFE6F632023C56281AF
A39376F838EE378AD1C6D7296DF4AE79E0D932B0DC027164EF2AA38CD543FB81DA48D884F056
3F53A28B59A2A9A0546805F55A60B2DAAE5CA90988508F9C8E5109FE3F6C8BF8B72A5E8D9286
E673216696D80FBDE4CD2AFF31A575DD7BD6FC45556E300127317DD0DF074B25594EE07DDBF4
31F5E3D2468F761DB02A85ECED800FACEA52139A1740D8891405121316E4D300D5F5B683811A
978EEF289D0F78D1CC00C25C539D2E828095A5C55F010771F694EAAF8E5C895204ACB45C902F
047DA19D518978528C07387828A977A9A845A06A2EE18C1EACE655C3E6F730AABC43E04C939F
73EEBBFF7B1BAB91912D3DA93E464AABFDA0335DC7037015AC17215D7D0A02AA486C3C7BEA98
16C11F027B577341BCFA10063C7AB567122B837AD85C5F47631FD54D82313CC04E1B2233F92E
E844A6DC0197E797A936CDD10C58BB35C138C7C5F84181A9EF67246E815D4B355877564A07F7
4E8C240EFFD757DE474BEFD4C66A3D50CBA5B7DB5F78EDF2A17766B38F5D8AB4B90DA090F75F
AC311E44A27AC3A5466BC6BE3AFA08B8B2EB31D998A45108A77B7ADE2E95835103DED4FC26DC
3CA70F5A29D76292475876563C5E5B7E12B2DBAD372FAD8EC7E6BCEF4FCC7E01469E39AB46C5
B3CFCDFA60DD550776B9748AA5581957F2D884063FE1920790EADCA2BF8387FC9232766D8FE7
2BBA9B326445813052B28D1B974F6221346D1B60C35678A23B9CEF0B87522233FE575C1C49F5
F0606D764B02B5EA88BBC38EF7B7D96B41EBE26DE64B5DBB69ADF3BC2CB73A046B20C3A2CA1F
7500D1F82362AAE79EF98A1AE987976CFADF7B041F82FB582B5FC6BFCD69187B839CB2BC18FC
AC9881DB194A8282BF236A8A1A1FE37C4C5C96505705B2D29BB01B70313C82C49D5162011DBA
746019D131ED8B94E200E1EB2A72E59A57C7D9584B46991514F2FBAD9045BBBFF0756B638177
676AB0A4A717CA9CCB454D2E157D90A15688AA1D4B3FE43CD6F25034BEE45158EC8EC94D8363
027E0D4E18D13C6A77D9D97B0E55AD6B2DCC0E7B77D6A942F7BFB3F26328ACDAE1D4DEDE1C6E
8310540CA38E0D4A9BD2C9DB61DA674716F3BCAFC3A43BF5E63B4E723CF453241009E1E8853D
F56FB8B61E969461A479F4EB860AA7B3DCA2276623A688177C0E3F4D35E6BA3802973CD5C15A
F7BB6FD30A4F630D30D6D9F976291DBBA055A7E2A665434921AC00F211147BA146D78CC9E00D
2E1956C15A95AA4DCAA66DC6A73ACADF828385FDF1CB047C6A1D64ABC5575458EFF7A8B0518F
459BC0CCEA2F5BE6C17C6B2FF5D9D6671CDB4D1EBCDCEDE311EBDBC46FFE4CE5925174FB6867
BD8782FBB5DF89A3E09B0E3A1351CCEDF95B919F5089793F82FEB57BC6A103F8CE6EB84AF506
C4ADD60A88295B0ACEAFEA03D417664F98C420B2FABE59DD85837D7F54804C5AA04ACB78C21F
6338989335200E5723EBE2B61F1AFE37374BD1281DB67EBB38CD7B6FF4955087D91DB6E50527
AC35D289DE10863B9CAF2F18A24B497A2E837B92E18DCB298E95A553152A94A0A0DA2A2589B8
6FB2A1FF9D9CA0E8482F2ED922A1805C7A6502C1EC0CE0DE7DD93D9D030CDC1425763008F573
5AAFD3BEBABEA1EF6E61E081513C5955F787650D381A05D0B806D2FB47314B962E717C3828DE
D4653BDDDA36DFE2131AA67583BD95D70872D1912C8635C5D188B42DD25F15E56FD0B7C8DA49
0157007B6D8241A3FFA3C8E3B105E233F6FA1FA4360A56E4A6D1DE7DBF15F9A9B298154129D4
3FA9B8208C40A519569B4C783B2787848930DDA9C566C58933F3BBA994BAD9C573D0130F818C
AFEEF9EF6B21CC05DA1CE1392F8F29D5550385D2F784B65705ED82A1ED75EF46537F3D336E91
FE5FA1843B843403DE927FA880CDAC0EECAF031D05E7F293D0644AFE6233583230A0D831E228
5B10CB3F25FB8CB7019A6C0BF054A5FA3A97CB6AB89FDD920E51B3DD8ACBC965A193FF0F09DA
90C0791C747422188DA90E2E9FDFCE7CEA252CFAFAF2616559FE7886C2E5C2B399F01A92BF00
8101111551D8495869B29620BEBF01FD091CBF8124DF8F433ED7E11F61FB6D3EFBB8338C8C9A
9AD85FEBEB8157F33E399CFB06A07487A28EA0946285667BE432D44195192F0CAB2460E5228F
0273629B9718A09656AD687B0B097919147AB0040A8882E5DF6067AFCEE5ED0DF2591493F01D
EB106D2BFB242F822A4E478A3C587BDA9E3F521898D0DD3020C30C999721A4E2DDAA72FF600E
D8481E7AD89C5E0A3A548442A5E117C8005BFB8216EDBB85DC1206320D903855BCFE52EE480B
F2514761D5E70ACD27EC36294B8EE83166769B1B7911D4C6A6E768A82BA9C6BB114FF803C532
590B1BF90E91FED98B2CF78378AE408D5013731547C548EBD62BEEADC32BB41796BC13C2A230
0827C5F717D4AC53B31DF3E1824AD1C5D4638DA0DE14B1D9ADBCDACA45CD024F14272CF3FF7B
F297EC6BBAA06566F599882F42C14AFEFBCBE9F0F0296A9FAFCC0DD04E24AB71118EEE1F8051
755D3F9A1ADE015374D5A6C7473AA23189A35C39CEE4022C5746C57DBA2208289A117DAF48DB
979BA835DBA59E4F5378B00283F49A82B5212EE30CE2BB037F628B9CCDD05E9F405AAD364F76
32B5C0338638B678F7FF9611C9E7AA59A50E28F5CE3582550453AF5B383798E03BC755A85C31
EFE9FF7F7A855103B16FCCA4168A7D47D0B0792BC52DEB56AB0C88F1E4C1B86C8382B5E825F1
D020D74229B25E40B774A1CF6EE02A298447C2E5DA5B4801416E3A27542EE0583BFF6B2CE90D
A6DA91B6814D58460015E6A6F6DDD3A804725E38C4E6E8A5D810075DC614FAF54DE04C99CB09
2E37B4FEC55AF9177B2D32A570F18D0E5FC556E3BFDB7C7EF95003EB25C1803FCF40D95D2762
DB4BA428DAD4F874F08E2852DFE9A9D22EDCB8A8A81AEB4DB000100694A0775C326877E3BA84
03732C640B82FF394717EFD48403550A7000A982A4E4B53BF01C0FB6A3F7756EFA462EFA06E5
61A72C7FFB24B3DEE827AC35E1EB302CDE6776285946826EDACFC9FA595C7D722DE059A6FF17
B6A1774FB4556398881108D239491FA4AD855237A8547AA55906DBE482F5B97979C885BB65E3
2E38949052E2FD9E714D7219161DA94ECDBFC591BD6EF0A58C4CF5CB13C19453811FFB81D44F
D2CD81997F3EA89B8F0EE379861EE1C7D18667E62A7E363CDD956B8E7CA9BD85794B154EC5EE
A9D3FDB960E272178043F4F0DA163FADFB2AFA9BEA23BA6E3BFC1A2ED7CCBF014B96E58BA2E0
7CC58C3384B38FC8E4CD78732117650C8F7ED5762587BC1663BD46AD4589E17B933EFD553184
391BA1D14881EDD73019485D880E1B1094E720B30E51EC5365E86C36CF2B0524C88477C0D71E
2C05E8B0388BACAD8BC1FD6633B41A18A53CDCAA86D2A7DF1B0B10326B398E208EEDDB3EBE80
516091FB7C46EFF8F08EC4A72DD8A3FCAC779895C14622B141348C7695BD2B861E32B31F3E71
A2DF12B0A7ADB96EC0C8C47386FB906C34603043EE4EFEACB7B610AFDAA4F19147532B2193DE
D1979B71C9D125590E78C5172C527988DEDE67341E306538CD6A837011130DB62DA87BBA4211
CC87F6815914AB0187B0B947D50FDE31627486245829E1EA5A94599F0E6ED0DB7853ADAE95D7
E6CD82542A14941C207F9794C9224E8DFCD434DEED1E43E7C0B86CAF70F7AE673305894BEB0A
33A840C497D3424B097D1065C57D9CACA4361C2FEAD7193B6CEFC1A10F26B2DF305155D9A392
5C360505C29C40074379B291CD8623556257266BAAD68E219FD9F24305F961E5D6017978173A
5EB177E17057DB577FDCF63FB0D2D45BE7D63F0BC205E7D2F4C1749CC9DEB24E730F1B7420A7
79639237756CA9516170EEA07E607EB3D5627467F65F5DB49CD43FC6D4A3AB2EAD3DF6703EBE
613ECDFDF64B7C9B29B08AEB582DDA25F944167D367F5997B8023564617C517873FFED86CCD7
09565DBF690F9FC22E38A7E619718C9CE7C399995BB01478EB3AB496F1D7E107AFE627C77CC2
944DB98EE2919BE57C144480400FE53970403F4F0DFCF69CA68235F001309841CAA6444EBDE8
B8ED0A1B049C62E57B97FF8E2307573BDAAB8913D220B68A8D551E2E6653F6B14FEBF8755440
47401AB366A900A58DA1C37BA66252EF1874B39974F0E31086BB20961D139AC7D57B8F2F8E8E
D659F0A68CEC598C35237B820A482D624DD5C628339946A0DC68A8BFC2E660E07F11916E951A
C82CE45D7E4D31D2FA5F3D5CD821F7300EBB8B56B7E4A52DCF641A5B267A53DE0BD022B3F928
C1AEDC8AD3F3AFF20EC5E4A5ADE35A5F1E322014A2FB9D19F7D42F994C1E4BEA452E25A090E5
9297B10EFAF537A2D584D86CF900F986C2EB13960B80BC8D133D2E46820112AD9921499FCA16
17DC84AAAEEC403DDCAB8837EB69A24C88407437FC156535A834C29FC06DEE695FE1734DCE89
1BEFD813868AC2ED37A09A9C29BE143C052AE238DA802C5B931D325EB4007FA1554AF96DE6A3
82CCF9CD405368B30209D8F4AF855716F0A78378D1A4152D10A5E3198D5791FC1C7D4AE6BCD1
5BAEBBEE5360CF1D783EC7B15B43F93C20DC09B6A016BB511BC0DB4C4FDC1FF44289447DA34C
C530FCC1988BDE9210505CE07196B5F22FFC400D951537978387DF257562833FE7E76CDD05DA
C3FD37F218433AAD9C2EDD90FDF346B92754FDA1EB1644C8975F1AC271D75F442810C163A2B5
2781B72BAF22D21AD77D41F78325CA190CBBEF27173BA0221486ACAF4935D2966FC34E61D4E9
5A15D40B8060546F99D6402371A4616476AB9843C67F15B2E0C79AFF014A8D115C521FE27572
B9FB39E0C057108866F8067981691466E13F68AC8D6C35F90A347B510F0A30DE09B98DF4129F
9EC2435B7F9E625909B305053B21ACC8B7D03CAC2B42BE5E87D6EE4392E8027E45383E9BD62B
F105FAF9A30E0C91AB1F3C55CB51995D7CDB27B8940402B67B9BB29D1B5955C8333863F71323
8637A42A3B8A56BE9B3B8C21D9CC04E187BEAFEDA56F3135DC4CF13867EDC44BB2537065FBCF
6CC5B4676E3A7D0331B6360C72291A3D9E9584A0E42412D24CD652D2D0A61AE1FADBACC27580
0438531823E31383F3BF75AD2C77A79D87C68E63FB3ABEE97D7C3B89DF29214E613B82E968AF
04E4A016398FDEC55F3F5DCFF53EE4C8F50A979F947A9489D878B7BC6C6D8E3D8BA220F44247
1FBBDBBF20F6B542A766B85B36274C7F59232E86B89BC54912B667887F864FE14B655D600674
E70C7A8F81AD2FB92701D3848E1D4BCBC8D0F4E317AE99D6F23437401E00F7A45E3BA8A10CDA
37ACA54571F16A4FA9BA469F71AC1395D37641E983A846CF7DE08EAF91EAF1B50CB9A9EADBAD
6D726799F70B7D8E9930CA0F60B5E95AD74DE84B9CF0CBA8B5767C12B62B875E9F96CD0AC537
256214C9363A94BC091FC0E8B45FAC9F1547C9A28E29F846ED8821530AB5898D9FDF0A58D506
E2C8BB70F640BEB821AD493B2F544ACA73584CFABE675D45706E9EF6CF8ECE867C1DB79E770E
0E000F30E64661469581DB39DA9CCF9783865BF646CFDD575ED5E5B0D3F398665D076EA19BF8
80C343253B8A86FA250964D45DA4DA056ACE37D73EC9D9C53C0E61CE96DA8C6C12BC3A3BBC40
DD4B95791E43A262BABE81E60126076C7A349AFCAB912C0D0D3B3771AED94F5BA90B9964B745
3BC7B628AA4380072438A6E7AC7C40D5C5AF2E072EB864B30FEBF7970E83574F351FB8F10695
AD664643659538E62266525677BFDB9E59003D79855AAB92E752087F138E79C5D22C6977043F
ABEDEE2F241A0C785C847BCF9B48FB6D1C552D60072FDED1D537277517EFA945669B16CA32B8
B2D8B483268DDCB6F00A3F43DD96F684DF21106792AB1D000F9AD65E85CF1B91467E3D4470F5
B40541F693226A1ECBF8467D6FAB8C8A99D26760643057CC977B92FD2EE52BE5152AA39961BC
2170D23B90BC6D79BB3E13BE3362E81033A0AB5F9902343B0E4254F5CEEEA9D3BD90B8F3D177
8F2CC8C5B1EACC65A2C46A49FB3DBCAB07A8F9A07F4F67A147E960CE643DA0FB451EE8E30158
A2083F4A2521B509383BCFC964ECDEB9680F1D4B5C54114F84027CEA064FBD53A7F1BA318526
BC4A33889FE55712D7496B4617C3FED3ED5357A0B4DB17D162DF05A701256087375FD9674440
36F376A799CD28EF5ABF726E61AE444182661DB46DA17B995CCDAE0B2123D1CC163D2DDF3A42
DBCFD951BCB9AE709F963201D58E5C8CE701BDF2C6111CEB83F6D7C2E7C7013151698312E6D2
FF1617DCE6F2475F6C21BBC83F086E67C53E76735C82E3DECA8EC7458C445748C24E279A6090
CF78BC19ABAFC68854EE2D5EC2E6F4DAEBF37E6948E1ECABA286078E8CEE9FFED59F0937A4E6
2D1B0833A7CDC16516CEB2CEF150AD08AF75951EBA8FC01823BEAA232327089B990039991E31
38451BB972B559AC5012419C2D6362C16A540F6A40B44CC12D35943BA077995048FE5F2B81D7
D85D1EA1E84672E43E333325289E7888FF3C9C7E653056E71201649B70834FB1DAA67F3D01C2
C8D07B5F6308E61C076D9F7DCDF604D652AEA56D5D507A4D727831A5FE3948DA472163C621F8
3C8B2878FD8B96ABCE28B3CD83C9C2E08A8421AF5247CA6E9A8828C78D09206F8052201F970D
485DA2158B6E81C24834B31A8F4F2AECFB89982727DAAB34F2A1CD8016F595C71DD19A7963CD
92395FFCCF248599118754CD8414548B97DF18B9CFFD49163A67DF17ACE0614B218333983C37
16B3AF677EC99E7BAB09B216B9A1527ACCDD137F50E0D37ED634910BA15CF0498EF8B6DE3F1B
846EDB13E22CB55456FB5B9322B395470B5F37C014D6572A3C3FF10B212880AFAC767395BB33
25E3C551A21AF572BBFBB118C9594A5ACC23C0B3523E43FA6AD72B28A37A82FAAB983600CFF6
2CCB4A04915DE391EB5A7183FF5E4F3E4D58A960E49A2B9D2374EC6DA504E854A1B68F5C2925
AF5F847801E7D2FA2C1286EA5F055FB7D222A615371D19D33E26BD537E0E323063D01C1FFE63
190D1D4DB6D5F45298CED7DA97F1CE60819906BDDBFBC5B679D2580CB50218F0E3AE8FD6D06F
DAF8710426A32461123C450B147A01080873511DA44E95DE756BE0E6157176AB43BDE5A9E745
9135E063DCD5A0A6F7779CE73E09A2902A2F040CDD62E0B033A7B3D48A1CC38C69D219FC44E8
0D61C1DDC6E3F553168913980ED2FF3858BE6C382C5BFD1E823430588DE1749F7C21081437A1
91A54DB980D028AD30D6DEBCA652341C0F6E4B211FE3247FCA193380155C9513386FEE05B3F8
3363DF205D7D109503011CC569F5E62F44BA7D1ECE2DD4533F1BF4157FB346D8BF38A0748588
741764FC50E7ED40E7B58AEDEE8CE96D7F09FAE151C18C006330B3B6FF12D152AE50D23C197F
461DEA3E4BF5EAF6C3EF700FCCBDF738AF1B2E4C28B1A514BC19A3AA5ADEC18046D75092C2EA
9DC70C6D98D2EC25CD0235253480FEADBF416032296995F5E94982A874EE09527348E31EF84F
21224F5F0531F85486A77FEDBCC60539A27AF619CAAB23E2699758529B157C7F2BAA75123A1C
5AF2F39A29C41B7E77AD0BB0D1290501CDF0555595583D04E447E75013915C459468E8378E5B
6146AD5451ACC0E902EAC8ED877DA0E6BE58ED89BEF43A870E1C155F08F8CF2998B494E5D887
A1E0A7085CC19177EBEFC6206D3726AA1148E9306F364B724AF7D5263BACFF0E977D399CCB58
EC653CF81F125989EC81F2224A363847709E6AB95FEFEF0537161D36CE2F1F36143F0DD6B139
9B31C02EFCEBD869359560BDE67B215FC88CF307AE81F39D793446C3F3A92F81E41E4C4AC627
0ED0A7D4C69702FB4C6CACA87CB1542DC76DD3D728D7FF25DBF1D491F121B27AA35B39296D48
E85D7EAE16452BFF1D9B4E211E9FBED567C9842D1F1503EC75777B01F4FEDB4F199CAFE1C559
47B17D087ABDCF0E7B5835AF7C82C3D9A4ADC368D78A2B1D46B2337C0CFC7A9F8FD3A87C6830
0C2B1EEAF6EA1ED0DF35F0D4DD92C01F76E50B84C879EE4D11510A0211C19A77E2680E4EB2E9
73513EB8B7764551FF139A1028267CFB2406333BF1C9D13286C7EA902E2756216EB1435189D3
FC0954CCFC970440775F6D106561EC34B2750ACDE5303D25DA50E29FCA7E3AD78322ED26ACFE
F57ACC243E7648BB168C9925CB5B57E2EBC48F0E8604974215FD03958EE95CA8F25172CC8C99
92B0EE94AF3E37F74D87C93ED14D96C15FFA788246AD6E73BCE2E8242405C5FBD3D01F8AB617
332AF525DD448BA8327A6260D2D2A3813318F46D7620EF1F9AC539ACBDA49DF39E17B8303A22
B575E5E8B8FFEAD8B7DDBDA7F9C29230279ACEE05D25704E230C837C09F5BF61FBA7AFEC8B44
8C76A83E80DEF396194BD7CE0274C3346023DF99302687CF624704788151F8FED792463BDC87
12EA74DA79710DAF5E059D1A72BFE36D6E1D688785DAAE4CC1E5D6167133E2BE54AA567D6149
AC06139EB1F705C29157F8F5A6431CE5B57374BF68C1D56373B87114722EAE982F7E9837C52D
FD5BBD681311B1B68A8E78050A96BD14A374280F541778778F76532D7F9F7FA31F41AE5C8193
D4009E8EF285F96F4668797A0A36A92D6C7004AB9E8D374CABF4CA99D072807AB7A2A6F137B7
A1B1DCA1995138F432F18C488D20E4C296823E72122101ED3FCF9D5AD16C4A911A951E59F2E1
ECB61B6A2C9844E571862EAC09A7902979F9E670AB5A47E4107FAFC36B0B25C85B109C98847F
7811960D3E0408A9DFB48C21C2E4F540F314C6225067F0B9AE3F507D637C3F053EA154529952
C9EE790AEFABD75C9A0FF001A021A39C58906DFF73952AAE28816D999955C446EE5B82455E4D
AC525656AB41A857139192B72057289F02DD6E2342F3DE1E5DEBECC81532E106BD06AE97DB72
E8F335C7FD6335A7B9647D38B8314B28742A8D6CFD6C037913CA3F10B77B0133C67C9130CA87
32FFF366EF89D3F57C223C28CB622AC956453071B85C068D131E981EDBB9BEA673D4B9797EA0
5BFA78F7FBBFD715353FAC5000055BB7AB0E5F8822941361225B119E4F20F108A4A2D77420BF
BFD8DB7A3C2E053C4925BFF27CFCDEF223E73DD02D55F6ED833791AB74A79DE8D16FA1F6E56C
B5E1284B1E2414DEB7AA020B4ED8AE44BF6EE6E433E82A0D6123D871DCB14DB07F4631E69F1A
70E3DC7A61E434C0468FAB02381732BEB2B958A6AACBB31CC5347F1968A863CC6C17626009B1
47C3F7D2764F46F89476032526FD0B1D884981AF0DC2708D1A7C7BB6548EDA90D7C67BD93B25
6A36D4975BC9C9E774D93D2D123DB84023AF2EFA22F7F8923582D4434A6AFDC98D831BBBE89F
107E2BF6F2E8BFB314C20FD8660FA50EF01BC8489812048F8AD827BB0C0A2E63435C488DEAA1
78DDB75D4D76B60CF95D07DE85F5764B5484F377788F49ADD2545A8B8BB81CB11E52B1964577
E3B34F3505B2ADE76BE512A0EBCDED10D35DDB2510B372AB71CA71ADC085701C7A5AC7F47FF2
EC11912EC6EF53A8DF4E2F823A66479594E70E14D78B2BE6108AF4D077650C5FE03CCB17AC04
952977F668B887C9C426C2EDE490E28211D8034C7226D128A1B91B20631F505143AB1537B371
709ADB7D7812638416493A4A2EBC27DACC8501E83677D7CAEC05E7FC8CDA2D17FBBAD16FFDC4
7035478AE84CA72C5F644BEB0904D2325968B9E8065ECBEC37269E6D9BFA3CA975CD06C19F1F
23B073D58E06151FF11ECD71F20445C2A6900AB9CD54D4C8D3845C6FEA080E42F758214DC001
27582F6A6DB20958DA4DCCF3452B5ACE051496927CEC7CEF42C0268C9517DCA4D146BE0B4B00
D7E510737F28AE1407998D095D89354BFA32738F113FA4DFD1CC28FC16177F14AA8EF8350CC3
5793E01E77FDC2699638A0D269ECA8EB21C94D05632E3B43FC33AE57F5F808C0059F22F1FBBC
A884EF91D744E54A8DB6D51EA9F083D89A0571C5E7D85DB94BA8550828E75A61967427330638
8EB7BBEB8F69BE203E9C9027EA35C98C4A3B5622A11F434204BAA008F3BE852484C7A61D7DE8
1C5752E8C600C8DB896E608BC8BDADA3767DCF3A6ADA32C482B8CBE17B416783AB018243FDEF
5BCB84A2294954DF5D1F4937A17699B039B9694A20637DFC8AAD926173D935652F626696ACB6
3D8CD8AB36CAB2499F44A3FEA78A99BB3BF16FA52EA267672DA977CF2D5AFC1E49967DC04A26
E1A849FE20D826BEF6629CD6DC568EE87D4EB3DC9CC291D829AF1251AE6220AB60E7D750E8BD
F7BC635C69C94656E638AFB9DA6A5DDD853777F26B0B6167B4CACA08ECB0BAE84068B24E1EEA
874FE583A10FB7CE5E581791235427784C0E1BF18C584BF5F2330AFC21C26E98BFF1305462E0
E8FD02D13AD10D33031D60924433583380A48B976569C182BB636E98D39F9966DB853058BE02
ABC7E978C7C2F45D8F0DA754F51CB3454A25CBEE824FCE9782D077B8CC67846FB33CBE7C7F64
E13AE587E4096D7797D51401D309B06D5A87E1467125B7EB3C9E4315CF6C60B31FE767287C66
9BB0BCAF25CF0E2D22EAB00DF82EDB90EBFC6B8F1649582B444E6337A7FA2C925F677B4AE829
26A60FEB9D30F95EDA59B86C0658184F2482A9F09DA453B88D256A2479FF03D8033681200A50
5D43B1A9E61AB71262EE3C7ECB51FA62D6046A9F35596A0543DEC82E2452508F0DA86C5EF6AA
105D10FD1F2769501A4FCF49861CBEA6696BCB76A8E3E84DB2F43DA6A17053E9FB2CB459AB7E
A91A80E20932386D9F3ADDA23D2E4A1CF5D6BA73B477824ABE16BA45E641F34104708129D896
3A5D972092D360BC6C16A53DFC76157F227E71EC621BC9E1C9DA074901C4C288702566A5C863
9C39144EE346158716D7CD94739742B94496DE1DB825337342F7CDD6DE68BDB54708AB9E4969
5031B07DF9366C3ED0AEDB35BD60513A249AB38D6BC44472638A17B537F89E6BF1DD367097AF
E4DA5809F9D9013D5AFD8C92A2CFA6E040F28ABD7E0A0D56BF97EEC35CCD8D212E5A772B33D1
512546F4C35DC1CA4CC666B01B5B8FA9F517CE409F26D3710C519F68E411E47AED69B8000FF3
DF955943A0CBD6EAB124A6BC157ADEF8626D8AB9F6910B18E950619146C84287713C4F3E6A33
11A7D10A15F396760F43F6BFC144F74C0D3246C8F9E3FEBDCE96036B6AC4316085CDCB72E7FE
52D732B83D65F48E5D23B6E5E948E5AE2BD5686ADFEFA3FD4601B096BFBF04D4924384B764FE
34D29C5E61629DB5956B8A3F7C326D7B8D2C01EBBA6D875557BAD134B422A591FB636F6FB325
179A1548DC183FC94CBE924BE379A5779FE2ADDE9D652D78400CDC677EF0CDC08A85BFAF5022
BCA9054BD0B49DA4DDB77CA9F6D2C97A4145731D48D822089E687481DFF711E2AD61428DBCA2
2C6DAED292450E9D6BCE00B79FC3EB027683352DA7A200948F06B2946E42F8DC88FC22D43D22
E4527C4C0CC4153A285D78339C2C9D30F7C1A9D014986BCAAD3ED6DB41D66C981A1B0B460F74
39A06C2F319A2F2EB24CF6485E6B46447F908BB4730875090700733CC22C5E0263E53E80FE56
862FD336D263245C2D433C5F4ABAAA7A81B2427F9AC8595498140CB8461893D7D1311075DF42
2DCEA23AB71F12DC8909A0AB787219977214836D085D456A053A193561C26A5D4DC2DF3B99E0
ED34A9FBD688977EED1D18EFF8E8D617628DB902988D1B3066A62FA123C26235368A21B79D68
022248664C93C241BC7AB24FAB0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmmi12.pfb 0 0
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
 /FullName (CMMI12) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
 /ascent 750 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 17 /eta put
dup 18 /theta put
dup 19 /iota put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 24 /xi put
dup 25 /pi put
dup 26 /rho put
dup 27 /sigma put
dup 28 /tau put
dup 29 /upsilon put
dup 30 /phi put
dup 31 /chi put
dup 32 /psi put
dup 33 /omega put
dup 34 /epsilon put
dup 35 /theta1 put
dup 36 /pi1 put
dup 37 /rho1 put
dup 38 /sigma1 put
dup 39 /phi1 put
dup 40 /arrowlefttophalf put
dup 41 /arrowleftbothalf put
dup 42 /arrowrighttophalf put
dup 43 /arrowrightbothalf put
dup 44 /arrowhookleft put
dup 45 /arrowhookright put
dup 46 /triangleright put
dup 47 /triangleleft put
dup 48 /zerooldstyle put
dup 49 /oneoldstyle put
dup 50 /twooldstyle put
dup 51 /threeoldstyle put
dup 52 /fouroldstyle put
dup 53 /fiveoldstyle put
dup 54 /sixoldstyle put
dup 55 /sevenoldstyle put
dup 56 /eightoldstyle put
dup 57 /nineoldstyle put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /flat put
dup 92 /natural put
dup 93 /sharp put
dup 94 /slurbelow put
dup 95 /slurabove put
dup 96 /lscript put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /dotlessi put
dup 124 /dotlessj put
dup 125 /weierstrass put
dup 126 /vector put
dup 127 /tie put
dup 128 /psi put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /alpha put
dup 175 /beta put
dup 176 /gamma put
dup 177 /delta put
dup 178 /epsilon1 put
dup 179 /zeta put
dup 180 /eta put
dup 181 /theta put
dup 182 /iota put
dup 183 /kappa put
dup 184 /lambda put
dup 185 /mu put
dup 186 /nu put
dup 187 /xi put
dup 188 /pi put
dup 189 /rho put
dup 190 /sigma put
dup 191 /tau put
dup 192 /upsilon put
dup 193 /phi put
dup 194 /chi put
dup 195 /psi put
dup 196 /tie put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C545D25FE19253
9D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB47934F62D1F46E8671F6290D6
FFF601D4937BF71C22D60FB800A15796421E3AA772C500501D8B10C0093F6467C553250F7C27
B2C3D893772614A846374A85BC4EBEC0B0A89C4C161C3956ECE25274B962C854E535F418279F
E26D8F83E38C5C89974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F024
867411453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE882A715B
E109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC32274038691582D6D75FE
8F895A0813982793297E49CC9B54053BA2ABD429156A7FFCD7B19DAA44E2107720921B74185A
E507AC33141819511A6AC20BC20FB5410B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA3
02E5AF1B2FBCEC6D9E69987970648B9276232093695D55A806D87648B1749CB537E78BB08AA8
3A5001F7609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC182A
5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F25135360DD3EBEDA99D9482
8F447D52D011A8FC8B8BC124A4B367EC860C5F7CDBE585634A1ACD80E37B6F2D5F33AF5A2C08
14652FA37D0C6A99767C561253AF8DA3A1279D421AE11C133004DB273FDDC2134ECA4CC50296
220A4729E4E73003AA88CE151F57F8C5DFEE1A8B3A74D7CB142B4F7A128A4B0FD028B71FCF59
841D3E8CB0450A0AB47B927D944D94C5DA562310C79E2321106D6B90FBD04F5EB787AC050578
011A0B24AE534B93B4108D982736464ACF5B77071ACD59B8D987EA9FE832A655C175AA8204DF
A034D9DEB3AF510C4E948AD8DF3E799B81C5C8250B86FF8F91BE906357FC5DE9A3209AF78555
AAA0FE720FBF0300F4FFB1E6F49CE9E00B0870D1E0EAB2CE05378850D15E9591ED19E56327A0
83671AD4BD0FAFC5A3AFA4D3E3CB1E50111ECD344168DA214E380AB12211010DA632B2CE9261
6B94EEF181FF68119A2A0FB6AD9D3BE9E91F24484D018879EF39B3A5EF9A040B26AC1F2F6EC6
0EABB4233CC0878BF25AD526D45BA051CB36353A5A56E9BA2D1132F595F3202195681878AE92
CFFC0A809F8EF0DBE782E10D065658FF573553AE7EBC443C640F3F5745DA56489EFE26BBE674
75C3F0ED603B9DDB8464D40B587BBAB8F1B3F73FF9371EB27335665FA61498231EE271987F28
3580C7B42BF981212D1460D366B3B5D0B7A7F7CD24B3C145B291FAF0B1F20996860BB42E7AF9
6BEE82C2B2174E9ECE3428A5FF9A63D7858C44BBC680770CE70BC7DF2B68CD42F93425179765
33B7DA625EBDB07E071D4C17C3C32714C079DBEFE2F6F4977B005FCB214BF1FCEB394488CF34
938B112C31AD00A54D096EC3769F157DF59B6EC70FC6BB644470C2DB9688A9891D06145B198D
EC09C5DDBFF4E1F56D8B62D172F59271B009EC62DBD8D48017892149618394F80F3472ABA74A
AEABBA441B569394080498B5E5B56EFDC414BBFEBD1D53FBD880E92ABBA771A5EFBFAB1CA24C
3F36686B9D9B65DBBBA23089C7D35CEF18D9751FEB7C1E65F3B672D5E7C2BF998F65D0F49573
F285279159BBCCE027E66EEEF9E47CA90DF348D89F8648FCB6F55AB2ED74C4043AE90F354275
9B3F15932F8A52E3318F1693B2367E13AC6412B41D06DFA71A3A869DA8816B26CD2CC94DA976
DEE2B7ED59B4E956A0836A5E7FF5E0FAA40A121482798BF50E1728D3387D50CD62E1017235A3
B1416CBB94C04F3E3D5FA2BDA3819A47057B8FECB3C09E0A391B5EADC38DC1AB744F90453026
AACEDFCC190A280F0179C8A3BC1273C608A671E4ABF8BB5DCFC4732400481002AE9451172F2F
9809B75440B987AB11DBB3569022A02F0194D73FEACA133DBB96BE3DED9623D5A89D652880EB
4A147BD25031EE1C212E3226D5F7C4497DD9E2F767C4414323972C2B268F192113EA4A0CD2B8
2760DCB2ACADC8719511F63D471F2DAAD5399A0B5DE1A15C6579712A81B432DC083E2EFD660F
DE2F155C78676E3350A9A5724512F4169C5E697897F5013D010BF75CB1920328F21DA3408BD9
0216A18A5017D5FA51083A7C49C3D226B8AEB886083D13EECFB4EF12DE38E5F6B5B7A06D7F2B
FEE44690C87A7EFA5725AC793B61EE754278919EF5C5033D539A9BE0732F3D33137B6BC6D170
DDF29763101BA0078E4BDC1562D16CDC01E05129709AD0E9532C6E6F7E74E42BF133F53314AA
F732E90DC3AC5C1BF5FD615189E12EBCE636C9129641A4879BC987E734289732F73DFF066C8C
13B3735E2F2DD818E542EC0649DE3E37B0B5111670C45EC14E1E1FF14E41F12A20A6FCB2FDCF
A350467651D697AA7E5549E2D4B30175244EE941B1F66BCC160A03B963A64DB7D1A06ECA6458
66EC4627EF2F3563FB399DC9B56A99A024D8FB026B8CF36E49484B98C90DA4477FB706CE1F5B
136705E52A539D21C933315542DCE71BC85955427D9DFF0DD9CB767B6B67DE7C2B8A2E2CF3A6
39E4C354EBC169360311D44D6F57322F0A402C293F9FF510AF29BAAE402A218B631449501759
5DC15128022B8C698ECFBAEF7ECDEE7FF01DE305261E0119786B842B781C94E2B0138A581CD0
51807508F585597EBCEF7871A914FDB08466B2E979C83DE884845105596546434E0EA525BEDF
FF3E68F245493745A06B577C9A50E0170274210A6F6D4A44C1EB5512ECDEA42F107E8C08A98E
EB9EED0582D607DE96328ACD3D81BD759CEFB2F6DFD2AD55FF46D5202CCD0B518DB0008DE955
94E96F77FC36BCB1EBCD388BD2E3CB674F90A8C69B4F57FBFB6A57F07443B05B43BAD9EDEC3A
90C5270A9F9198C8674972734277A7A14F22433A74CCC8182FEA974FE66DD3A3BBE8F2494895
B01B5AEDEB4173D8C3BFD4AAC413A548E0D446E0EAD5BCE288586885C116080C0AFB697061D0
21C043D2822FCDB78CFA99DE2A90A8465822A6FE4C0D03494EC045EFA80793A2458FA78C3353
B0D5D0600CE006E31CA3131F387EC4D84B0C7C46A308D08C302C85ABF45B2D483BC63DF7B0EE
A1A0AFC0F844D77274C95ED477114752D0C88AE6092423DFABB3B01934699F096AF8F067D870
F73CE45036362AC4CADCF97F42C63DFFC69EAC751C08AB6D61D34D32BFCEE1155D012314FD51
252D2470B4D4CB16D0ACE4DDB17030C3622F56F96EBEA0FB90D92D109B956A4DC00332A9433F
FE1043300B01D87EAD0C51E6D65545C37AA6528C214BF68831BDC78A84746E879643D9D9EE6B
A5C167DB0A370308C5EB606619A17BEC856BFF181BEBDBA0CA0BEA05C4EC948E288A941755EF
A2DCFAEE67F33B311CE0532CAF26FDE29474DBBEE42A623BEA14E4A4858B0496EFAFC775D480
65F58DC20F727DCB866EE68E24918AA1906073B64B0FE458B08A1B7DFA4BC03DC88CB5394F1F
D149478577396F0AD201C4568BEBAB40DE8B864484D8D117727EA283CAA7485AA58FC506CC9B
1C774FC883A3440499E3D98436111DC1DEF8CA30DDDBB9DDB9C89534D691555C36B5450DDE24
CE5B17DA11E3E4C37A11581E4FA3C0D89B5CC3784BFFC14B6E98C548A7C38C53CAB973AF3DE8
2C6D42A01A57C9FFA790111BF79FE7F591D5E2FF9E2730B7920A30D7BF713E4EBDD272DBDAFC
8A676F195BA9082CD779E002FFD0785FC8DEFFCD12E4B8DF368091E6119E135076E43DD0CD75
E6429CEEA972391BA73D93B89645B2480315A49F49AFE2F324D251AEE654ADCCA32A66E9B1B9
407B055BBC615E37BF1BC8C1ADD81ABBF983C73F733F91770D50184FCA3A0F6165CFE7900235
2DCDC1296D67AD671A4F4C0A60C7E9C18F3CC374A4D065FE56D0BBD2CEEE3F70AA9398896FE2
2CDC4BF7332726A0E676D66D511799D63BDBE0DA140EC4EBF57DE032B620E5ED890A6760CB7D
40A05037BE3A6C5347DDFFCAAE3A5C4BC116F39969936FB483040E421345EADC494523ACBDB5
5CEA57C40279D4AF5C7C9F3B0660ED9E725C9FADCD5361784D5C14B93C3B13FD055F269BC7DF
6D67719A2BF30D19D1A690B4CBC06DEA51884A686564B3FF6B3F8E9C9FBEC5A914F525B6AE34
D448B0AB85FAFA4E7F301984A9645C786DF2A19C2E6A20DD0B60AA2974A624E7CD1917AB87B2
73D04516D727FD30EFD27C983342C9BCC1D9CE95E7576AF25A4BFF02DB4588B8604C306C04AB
66E85E114C28CC47395016955AFACE381AF44B1D004D5B6B64186CD7CB9D081F93A637BBCFE8
E292FD8D5863BFC683C9E37F0FEF0ECD16CFE63E0A584BFA4116D3AB0ED62B7B82C1630B2B78
F25527A79267580F58005BFBD37E5C0C31029945CF6F6F72DB17EABDBB51DC8726FCD5AB2D61
341B2EF7716F0D0AAC546DEDD22AC62FEFB1ECA0EC524C6B3233FB4E1B4CCE49F584BE7BAF33
C878F2280A8598502001DEDB4FBC9F7DCF40D055AC35AADA869F2808F0B401C294AE378AA9B2
AF2768B75D9CAE1AC52025F18E7DDAEEA2122CE9D233A2A9046EC5EBEAE20FA928BA4AC651AF
426574FAEFE31D28C7717DEA91429C7BD7611CDA7F5F55A070AD6776AF18DED46E5101A7D1A4
7F0752896669148EACDBEAD1C8A44801B53DDC61261499F2FCC600F635D8CDDDAD94A24BC14A
2F5B5AAA6260955256256AF4A9ABCDF541453E4190AF27139D3C6A2BE9BE4870260574C26338
FF348F503DA4DC15FAC4F6ADBCBCC29D93B9100EE126A0A28C3F0CA30B7F09E13AE59E34DA37
3702C5817D222DA4AC23DA5EE272805A902CDB7001A0CCB26220D956871465BE18A323DF93CD
792BBE61F3FF8C4957FA49925DFBA1569FBC1BABD1C3BA13F88D1D98F7034DBDF956F52646DF
43AC978E86A1C532085DF36A66FF556442F3F337A699DEAF26EAE1AC20FB2968E58DF82ACBB6
47350335E4D48032E1BB49F1EA2181FBE183AACDC06761B48A9EEAE514A00B4656B4CDA4BA3A
C27F30C39A4274C1DAC69A7BBDEC53C9C7D78D0FAD8530073440C85F0A4B0003AE793731EF2A
3199CD73663B05BDF83FB2B8C175F0CB3D20C52C0C8A370F9DB923048CBBEA7267C828A700C5
856EECBF7FFE8A67C5027BEF1B1C7D42C717ABC02FBB73A3AFEC5F57D6BE21C2CBADC84855BF
A4BDB2F127307BF437F010AF0C938F9587B153249E6EEC2ECA63E9BEE972CF4D98627E9DFD37
B325E7A6612C667296C8E9256C62690BE9D25F7C68CD984B56197148A89E8E05B9FE98F033E9
DD9EF7245EF70E63289C7947BE5F2272154E207A9B4B1FDBE41B1D4D72BE13873462B012F4B9
D5F4164B714965F36C4101C870EFCC4BACC1A6DF744C1F91B1B7A2BF63BDFB840F5B0C062ACD
11FE47D9A3AA36CDC00ACD6DD8475034F603E859B3113B1C8A311C80B5D9EE1D881424745B57
3DB43656FD733864CDC8978006D58309E4B226288A0DCDB9AAC8396FC9DD024BC5F00160C382
B127EB4C9FA74B62BA990E2DFBA53D3CD57A27FB68F912E5B69CFF2113D70CDCAEF634BFEB9D
7A65CD1A670E3A2CEE5D9687558A1BDA4358BE0917A4C8614B97DF5810473714F6FB8BE998BA
52916F790F353DB87B96194C6271147A947C664D273CDE1893D4E1EAEE9F4199941970A46AB8
09D4776E9310C506EDE77EF1E9804829E495B0F654EB15FC2563DF6CB1B9D36D837777547CA3
7ADB28768A8DA2433BFD20D72F9F00743272277F2C9A9F1F33CFAD44A8F3D620A0DDA13C3286
760361107A0A82E0D12A9C601FE93971250D47583AD68AC90892AECC54BFAB740A2F51F07A1E
2C5B5E3A895F3E3001F4DEEB99E0A6464B0EC3753F30013E9C92525D9F651898A585DB03BB71
80D652CB68ABAB55BF18402A43888772F9C36C9F7CF6E00F07B33590C777B1B056B6C31210A3
FEABC46BF00E7A837E93EE3464776B9D78E75C60CE9E0725C31784836B9CD63BA44DB0867C80
D70A15FC97CC6E4526E84AE9B30CDA84C1C7857466E5F315C8F6DCFA0289FA937AAFF5D3CC35
709E9EC3C255B355D7BC6063BFE6364804342D4BA7D015BE58633CB781FFDEE7BFC46AFD8425
5D141DA1EF280D5CE22017DBC7C1A128B3F9974AD5BC1E53E43C3EC042C17DBED744236D8AC7
84B9102E2FC4E94DF8C78254A6D496790CD6684EBB54035048E1DB7593E552C7EE7B88401251
7917AD46CA470ECFBDDAFA7F1FF13C0CB00005628710DD4EA93C79DE721A89BBF27DBF7A0857
99B00D6AA37D7B3590C79ACAA5DFD15953E7F8B5874EF9BF34A217184100A0800A5675D552AD
EFD930E294A50CF7A3C6344EA0871ED23AF942EC699E21537D852ADBE736EB1070D2C9B622EB
D2384430BCB114D1DA3CBE2C6FBC839D77F20ECC999A5302705AE31AEEB8B4E5CA4046A3C77F
8B0248E3755013CFA7C76D7248920CC203834E9328B58D5FC7C46B11B5AEA991556D067C2B24
37634D95EA274197D3B46CA1B8446D633B6F0AAE72A599548BB3D81A337113D3EC58B0B2DD10
7A617CA6DEADEE7003AE6F28ED6DAA5C5D99D67DFD2594800A66D11D26490156A539E2861912
74C30C098DB77A427695BAE705DF290F97887C5DD6FD964D76FE6132016D0D58580F2EAEB727
FE1B8AEFEC95C4629CB17D8C63D1EDD2125527D00C9E7C64AA7053A047A69F82812FD3C8C254
3F269EE9C553F5BF8A53D461D9C308C198EBF2B97DD531664229D32C3EC61D69E4E79F539E9E
589FC3F57C9E4624F869A482062A52C9F4B640090C360DF8DC8702DB966EFADCAE94C8A2DE02
2E88EB388239BC517368F8C26C8D96A6E8649737F902495E3F29F357B9B58EA47A9400D028B8
BFFE74BAFC43E888808381C5F3E318DF9BDA26F6E14DE2858A1A9CFAAB8A82B7819F748E04C8
606DA94D884A13C67E3FA06F9C2834E1A02F4BD043C87D57297D500E4757BCEB37239A755F36
FF99A3F9B6E0CC9F8938041EB931519BF0D42E7A93EE62E6A59C2BBF1B2D6CE1958DAB40F1EC
78C99C501CFD69864DA50EBF933D30CEAEE7456CD0A08C78CAFAD93CACE2671F7E3DDDDA98EA
56CA35648109D4E6333188ECC817F317D8979DA9FAD9DD45DFE5D74BBADFAC4921723F736426
D5ADCC5DE4FA6703E121BFCECFB415F1D444634A7223389A38DF2AD64101476D170DB854A220
CA8433AB5DC40A841BEA6CBC538C63E0442A7764014D853AF8AFC34F2D17A1DB8740A45C8576
67A59F895094867D12D06EBF72942E8ED4D6EE9EF225B4DD82A2F16AD0A8C2C246DBA7BB9245
ECC4863D14885BC30950451113123C868B8AA5B36F7B926B5ECB0A333902BB241B3D28155065
5912AE14A634D79515F00799E91F6DB093ADA1692CCB5A32CF94FA0A4E1B311A68BD03C0F85F
2F63C3C0658A3756013288704B240E14F65AC1BDA3098894BE592794245AEF119ED59523983D
EB2D0E9D211F62E6D6C5AAE72F3AEEDC4E590BD531EEA93C05EDB1370F140DB3034A999622ED
4BA8F1AAEDB368656B6C6AF920DE068E06B985FD47461276723C9944CAC87B44475767009320
C7934FEB9B4DB8E1003000A663155C9A3FC67182BE4EA30F5FC813A8F34F3F99DEE8134252A9
8B2154FCE28C1EC23FA5E4BA8C4E005708A18FCEDE9F154576F0B3400C7FBFF197011FFB739D
285819F9C19796979B3A0A5E4E5CB116F78DCB3A7178718D886D1A9E52BF4D9C8CA2FA272514
7413CE566DC74DCD7328806238F8BF9A780CE75C05A7C2BD89420F8A0B0D602498C1C83F775A
231B8BED4EDA6F8C995ACF80138D4A438EED6FB2CA44F06D664052D45B2FEEF0EC584B27E01D
663D4B2F8C48E04690B350AB33F10875460000D37C300CAFB3F8391E44F1AB363074FAC3E03C
41BF062E5668AB0A4214C64B171A2CBA072DED6EFAD31309A34D99DBC065106DD8F0942DE6DF
D6C0743D98F214C3E3FA09DDEE4D1080AFF99C98E001EFE2B853747CA64A6130A87AEE358359
2AAD47CFA01F0B5B22C638925ED651886EC83777DCCB56A808404BB5B655DBAE33483AADA292
B580F02FF2494C7F3F7459BABA95373E39D2ABEFEC3FB56440DF99E6DC49E4D01F9286E11085
D68EBE8744F307F6AAD2DE8B745E243163427A2B90A90F6726BCF115DA15331E3F30CD025624
C7B916A97B4067C60213C0B3782EEE9F4594B4B78B072C5E9A30D35E1FCFB5E043404E5407A0
1A2ABBB636096B0ABFCA115414EBB67749D494CA030E21A91206D6B090E0D94EF2D116576501
0B8D39695D096825D9687F2480C851690AAEAF4AEEF413C054EBFA49AA548B618802B62D0DD5
FE7529563FD02F7CAFD93CA182B2506393AE802093C5668BE1D5D2C9E74C3160B5C3055A31AC
D75B2CE21E1014D136FB96E44D4E6BD79A7B5FC5F1741A55B6CDE4CB5B44AE1EC827FD9BC083
F76C8787756104E782F9D4BDEDA005B4085690CCDA8AC75A0BEFB47D0806F4A46126AA280A41
F0FFCFEA04B96714C7B1D4F806FA6412DDDAA68B20551C36E556647C3A7FC303C65579322171
A7783FD7364F56ED31B5B8132815F524DC97030DFE3E47EDE35D03F4CD2CD99AE55D0BB817A9
3C71F7C5383ADD04552F1C54557D494907D3050FC9D5514FCF80EF7039C5B076F16A3A946D59
1165E72F2A31E906D4A57167B44D64BFAE9C408E9CE5EC8937C7B3B0AF24089A1878AF0758B7
CFC8A787EB7CBA64BF13D3939DED996660A6487579162F56C3440764954DF160077B16CBBAAB
9DBD5857FC44A5775ED562140DD33B3CB2173152213DF78D65AFC94347685181CDCAF3B79D75
5652C2B2D3EC39449252DA027E97E534AC05ADCC39795C41F68E5F98F983CFCB4DE3BADFED90
9B2B6178904806B40AE9F9B3577531D1C9C5793EB1C455C9895D2C858540C6B7F8B40AEDAE79
FE461309AF352C80739C5AD7612EE5970C113133502E1F59F53F8A72373A3841C37E727ABFB1
E7A2AEAEF482B0942CDA1BFDD81F7A2FC15A7D0E7F2CEFD8BC432268ACDDF3698804556E4AFE
9086E6AE0CF1B144A5A7D04CE576F26533B611371D7F846959F2A589E54EBC0EA0AEE1C117EA
3E8957E07AB8A728AB388B06BD7D98CD44C468F7AE354304DCD93BCAF479F5C27BAC920128ED
987667E94ADAB5E55EAFAB2B52BB2D83991F9D638CC461A25738A6C33F134191A1A804EA935E
F441F89129175BF705D4F7089BDE3C0AE6C61921487B3EDB029FFE0CDD2307B68CEFCD58591F
939ED509EBA0FD070294B5158F3BF432AB18379BDA3486DBAC2984198FAEA711008AA454E961
2B23B6C8C5AA908E5424456603D522BCAEB3EC41E1C8BBEAB1C8CE0BEF6AB7C7008171F62B03
BF9258329DCC30472DB329313606157CE246CC8D5C9E7DA2AE08967CB303C5E516F18F0CE530
E75762541536B444925C1E123CFB615157A3169F7F10172423BF5A540015BDA30A03414679A1
45541655B65253CC546261FF4626722942C8AF01FDA6F92200EFF27168074F3BAC5692AAC160
F7A0DCBD5315C4B700E3BEF31520215C093F0F1DCFD5D18538F8D4FF1997C6524DD972AE1CD7
E11F829CC621B383390C2E7D196A8D5A9CBFBD8D3145E20CF045D1F128CA47CC9A0191E29D42
17A1FA558F1F93DC86171E43764CC7D9377A1C76AE027D5C3FEC7A38CEE040DA280902D3F183
134E3A95E5EF148C71BD5994BB28EDAF191EAC23BD02BD9A5F613235E97A5EE8C5C7E6A93F03
186A29C684B6E46026A31BF1830B1ED3BB12A0648270CEE09A4F5AB891AD72D80C4057C781DF
D270EE443E1FE4E9D8E58D2AA0A9A702836EABF544A3B4F2E1841776EA821FDB36E71AECD6A1
C355127B461FCF72A531176DB59F10D9A1222F99EE4AA579CD5CF6A288016F5DA6838536F3FE
0D902543095D90094EB79BF1592CDDE05786DAFD98AF30C6CEBF27B1315C706A63D4E868BA37
4EBE33145C16F1812AB2F8668B549A74C8A58304BAFBEE3136533542EDB8976C7550F0905546
D116DD0E11384C2B99E1195316EC9CD53EBADB73509FDE80B1BCBCAE46E8806E0CC8CCBF2B10
FC54D05C9F604B4ABFC87B25DB5CA90B64096B18C33E8A53F45F163AB7AC47CD6E9521230D68
9ACA686B5792D72097C4E67F93DC9B7AEE088DA36BD6ACEE7E68ECFCAFE7D585F677BD1ED275
95948CB7CCE21BAA375393CA45234E8F4633D61EC657C528EDD0FF520964F8B737D0DB9A58DB
146588F7F02CB77DE7D417CFC65B45CCD62F77CC833DB5228159A552C7D6B0F7E5E5521E26C7
F9A47D8F600CA820DF8B4B25B8B8D823FFB49E7B1E779D9680AFB496C7BD8D2FDB99717F9EF9
1A6AFFBDAF5E6C188315BF63C3BA9B8414709D1E60FD25D29BEA68D6D5857CF024BC2E03249A
4B294F36E3BE13225319F11AED07AC2BD2E5BA6E9CD7F77CC707F6268514BB7D50257EB4E23B
D6CB9700745AF46DDD87664364A8CE71574F2D60CDBE61A3AFAB925EFFB23273B61E93385C29
C2E8B76650C1432AC8D4FF35F5419CFB553C8F10F4230CDC749B5F3A8F5B1EC8C9FE31626378
EB495A9A53BE7E1C0683550BB3AE9ED557CF4DE95399C5EAFB4B99B0889C890FE2CEF419A208
00812D0DA7795E9F519061D19D1AFE2AC77CBBF05D1A738E62B64B4224DCA36C48B7A9D1FF78
5225C9852111316ACE1DAA2C21E05D767DB0DE6A0593D19029814C8BCE19DEED87EAE4F52004
EA1FE7934C099EC71AE7048D796081176AB9B8ECF42FA5581FFD859BD818411DFC4649C76F82
D6C03563F9B9D2DE6F274D41E0A93784EB6ED0FEAB8DB20CFD35E2DEB93A1DD1AE514F9E8A48
279536885042D248CF3FB0872135921DFDDC41198DFEE21982D675CC3BEFA0A3986893CB5539
3D0D97ABBE2E2E9B911B8E219104B22197EA04E201FF9C5F9B644E91709CFACDA783050C7521
2109FBBC0422B697902D9847D764AD31E851ABB49F9BED16F1377F97198664125C1BA4E06C4C
43AAD882904738E1127C3CDC74167B21358CBDC8563951CA7B5DE09526FEA0B1D2AA92F3C4ED
FC252BBC38463B55E97E8C40D6FD34403357911A1FD0A46565148F3FC891B20EC84976FB26D1
3A93F1B3D7162D864F8E1C4A4CED23724105D0B7EB83EB334386912AAD93BAA8AA9CF5CDDF83
D5FF76E94C8A2C40C28B5F4847A49D8155347392B7D2CF2731E45E0ECA9A654AEEC5DC2A6B03
E93D4DA22575D824294ED80804B842B898708A5FA69C5F958A935D47F57039C31771879DC8AE
993CF060F6B509F8CE28FAFA8A0FF705D6AE2A2A1B6B7EF98A467B4BF94029C32150978EADDE
320F21D27A8F65BC17C850FFE3F765B2901D5E3C60D74DE8425D523852F72BD42A9C91938C74
6FFB2F29454237A28F658ADF42D7942F71101588D5A1266CC182CC2B1ECC2D05CBA30BC281EF
5869AC8C50DA4A005AD826E6BC06076A0BF2C85866B2B8760EB5557468B4622DAAA693B0788C
A6F82D04E4E388FF01B3C72D5612FAA4490227C0622FBF58801776B71DD1B0F5E8B7D238A035
BB5493A0C0AF0EB71A32A92581A7C3517E68DBA2F8BB62D7E4FA2D3AF8D71B7F72C41162BAA8
BC17870C40583AA8628CF892D86151644FB1A7DEDFB494C0E63B0E5C96F773A995D4C079792B
209ADBC81A3F255DA85DDF205DC38B9B888C4CCCBA13836337C6CA7F33EB4367808886771628
22841E609D6998F7E8F32972DCC6B2129BCA4D17C7F7ABD1F404B09E3F60FE5CDD3AF8CB43BD
30414C12BC8E3739B5B7DCC137EE34626DFC1E24953A1FA878A8B140211679C16E8E14933861
9EBE534AE4FEEFB2973321FEDC9312FC7AD698E5CBE04EE88F92D792C4C5351680E41B7B2F14
B1D64E87B1526E6BA3B574043EE86323F5C9474E885519C227CE057495EBF52DD9309876ADF2
3823EF453B208459667943FE9C05C9B605DB55536BFA40901EC9163419BF4E23CD235C1D3F95
EEAF516F8EB883246C6465FE50DEEF0FF83983A1BC9A46BE6D0C34B4C9CD8D7C1D6D67F76188
70AA1581C16D0B2DDF0CCE7685099C213AE7F1A65DF2F42F966950A382D349DF07F36E783FDA
DA674B36B922C5F02BBF5E6052BA31CB6DC2339C37C08004B27EAC01BE415D9FE2D634A5BC1F
F2109B662177427638B7D475ED64D0AA2A8CFADD98F5F8FE1A5070B927731DE0A9E300303F64
0FAB810DE6D3A3704C1287D12C00F10B3D43AB9BBAD6584F3447B3D26868D5FB3F7B875E0B46
45324A03344CF0B90C738B5B9D9471396FB1095618233A1B79725DFDA31C36CCC222CECC2A1C
3C0A566F0C1454184BBE599FF97F3A98FDB1D76D25F699342251A68128894DA9BBF44C46BFEC
5B28EAC2CE9B33EA9EDEF3B19FCE4C087F76AD820BBAF5F6179BBF19A70D122491BF4FEED2A7
ED13A7C0047C9CD0F693340E064A162F6D8F15BF384F1F06E38255EB964D89E2521A9BFDEF16
0CA6E16CF0FB103EB61AEB52A51BD998661C77E9DD04B3BDCB796B52D997CD8D10B7173C82E1
B5CB7E5C2B85E0AE8A1381FC6FA88B87723D28C7AAC8708C53CBC45CBFF99BB09FD0019B1818
7964CF83D02E0F866767596BB83053F8FB45E003CAF585EBD587199AC49858AAE16E65727704
BD1A2EE6B335DF79CDDFC583FDB9D089F2D5CCD770D49B62EE0E9D7D06A0D82DF50F664EDA60
F80F4335142BEAE8BCEB5339638952AD126C8CAD0C99D2CD2F64C9A24BFB9312DD0DB473A2DC
CEB40BD1717E84A01100FEB421F5E011C0191F53C896F2E1E0137169FA4F41F1C763C0CD42D0
E3E885945F093A70736AE9C90EC7D217014971233E72CE6AA07ECC77EBF236B4D6F4854EB11F
07309851530EB0E42396830EC7755EDD77E2BD7C482978BCFA7789D4A7FC7818577E055CCCA5
B915B0AA9F4F38594BD792F490A21F93E924B40A910B1621C9FE393EAD3706781FBA3B5EBA6E
3951872FD38325413EA3E3717F38BDA501DB435CB4BDEDC7A232425D8701E46D35B23A23A741
59860265D887B62BD5DC2A057BB4A8A63EC61B4123C9984C112B33CB4F83F9036136A8BC6DCE
58E79705F8521CB33614721A582D3DD6715D3151FC5DB35AA1D2EDD3C8513DE6BC6999CC6D18
2E39DDAC8FFAEF99D9F82C0DD8DB8C743D38121FE0F96152B3A563A59B0765914B1164BFC591
0441C03C7042F0CFE961629F556B7A96763528B6411076820B22019DD55036DC3553B7590A3F
5EF04E0111FEA9F52D6825296AF05627DB69030DFCDA50F8B52BBD8D2DB02D00A4EB3365B004
9FFF7B70FEF35A8B0EB0410F1AE537653587D1E487AF023071A35C2D08C3BD3DF2865E9A07FF
40EE6172961DC3BC8905CE3686AE02275374D93C9351E10F4705DE4F1E754B7A84D6D9AC80EC
ABF709AF6444F6FF65EC936D9E178C0743FE6888166BBF2F9F93F48795AE79BF755624759D82
59F29FC9F79DAF6F5461132FB0A0B2B8EDFA0754B8EAC9C57AF6950ED8782363801B31B42950
2140E1E86B49C7330E0FBA56B20CBA4E7461269A0A05AF9F025C11E08AB86FD4D61B260281AF
C52E032AEF79D842A62AF3C7C983378EC37937BE173B0E8C221FE7DCB1FF3DB85DBE2345CC6B
BCE70E69D3A1E230D1665D5C85271B422986CA1EF18C565AB85DAB6521AAA116450C17CBB572
DBFF1B12B21CBC9B0CBDD413D7DABD7ED00447A48729A7EDA44448C81E1D31DF66F4F4DE4997
582A155AB9928B940ABFB6388B363292AB2FA24E4A0C446FC5E530DB2D9705A1DB2F0AA527AC
6BFA03EA0F04E0170A9E748F683815433D472D3507A32167D75FC0AE65485C5354AB8004DACA
0B34A6FEEAE71E3B66AE281157C3DB6F64D5049B35A801D0026F40BEFA984C00B8839C19472D
A90D0385C08FC185D92DD4EF983ADA5D9B8DF60F9A12E5BD4A362103366895499C1ECC2A7062
BB6A30B028A837B7B25BF829D2ACC371D7D23CB02A13A3E018541BF3D1DC6FC4FF4BB2E87CB2
D48253D367567A0072E45716FF79D9CAF50D197B0AEF76CB681393B920EF82C27EF615C0DE3E
4D0620B8D06092E34CBB27B3C9195E7975C6E4852B94E83DBB79B72F6E25535FD79FE2EB5721
4113FF009636C3FBC5A961BA44F2B0A5FCD1D6219FBB2F79563695A342FC933F32B4F564C4B8
1A3485509E8CB56A63FDD92831ED410C0B9BD06A19FCA6DA50FCC77A30F97A86835DA30C38EE
E5AAAEBD6467164DA13925E3FEE0E63B827369DADDA1C78ABC6B7241756D6B3DD8C31F824C98
04430BBFBD4A9C602726BCFF18D42AC7995A7E9753CFD64E41B6F088A605C889B02D4D0791CB
351293BC460882BF05665B8A12B5FBBF117C917E810AD5EDD844C54344A4F4E4D9799ADEC010
CA19E4654DE5EFAE86365988305335D182CBC73666A75057D3449C7231A409FBFE6B289CA9E6
2B2313C5D8872BD012E6AC98A70683428BCE7478D78EE80CE2BFDF0728C0DCF94AD57FDC88B9
0C24F835DB1500D67FCC752465B3808BBD7DDA44B43375E4AE84904EDCF6D67522E273B443AE
4B6CC9B8BEBB3E5C76C397908A4F134CF3C0319323575354198CA25A02043F81F82B0CFA9BC7
9F5324D6AD8D73207F9D8831C0A107584D7855D58FE8C6D8000C179D292AB3CDA038B0E807C4
47DF7C69621538760F6DDA72A724E43B66692E4E48942813D6DD3D35A21F77FFD4CC545ED5AB
8F1510BBA813B67B42E652CFD4E8B150B3E74E8971FB52CA6BE89DCEA188AAA80212E59D24FE
60556F6C0EAFDD513F491DF5D040358AAA04881715AB0A31546FEF023830F0D5EE9269E63C4C
E27E622BA9D411DF43C8CFCC49FB1DFBC45423DD733102371041B8126AD1CE51FB50BD0CDD3E
92777B3ACF0555FB95C4C58F47A495029F0837711DACA3F939844E412A15C7784F32F170755D
7ED5C4D4E621F56231C51A5013BE43CF894A711916A3A3E1680E739540277A85F396A9282CE2
EE4668F049C5BA1ABEC5DFEFB8594500B5C244E0F9DFA4AA8EC593015A9FF2A784E39540616E
80358D37CADD0AC175648168BD804B92B27AEA47ED43F9D91E4610568B9D893B4D49B5424796
B7106D45D37F9CF422F568F3E4B047D299E7F4F53D56EF82502B3B963D915E2ED66F0B54E39E
A2819A9753414401325B4B6A1E00A4E7C958554C3D758F2C2368FAFC4833A4C8798EB52211E3
B8D02E2E26547DC1D7CA282C7ECBF4BFCBD2793AA24F2ABEB0BC62F73FA0603D6B5DD296E036
31BDA75CF5E7D2E5691914AFADF4D47ABBF2BB490F754FDBF68B0B12035230C1DBAC6CC9B654
62915CD6B60C29B087EAD9F7937B22650BDA56CD7DEB3171666E55D22499AE38C55B838026E9
52A426F6EEB97047FECFC88B0582F623A48CCAD4B7B39A76A39965CDB83C3D876D9D581104BF
200F41DD2C226EBEC838CA7C68A908CF25F9B3E180E80FFC4ECFD2A48026418858130B10349E
929BC21FC5C92957A656ECEE57D87996A1385BA481256F02B0923816A12E9DD5CBFD5F2BA665
74B485F752E12C87AC03026C5A9809D0DA43B3B6D09385449F41BF41BA570B1482F485254EB3
E9B34C8CEC6AA1A81F1471C7ABCAE054C1857FA74C3E054457F2E51695EE544C9B1F0521B9A2
7F5C7D02DFB8ECDA7DDC6E487FB6BDF909AF027B4BAA2200E9DE79DDB9799C3CB60BBF6152AF
3AC86EAB88DAA815AABBD699064F5664153DF872C3D0D4382FBCD378019FF7582F31DA865688
234536545418FA1ECFF9E109873EB4F07B6CEB947EA069AE87D5E9779B7584700BD8E66A69D7
7569B7B1BBEA1F0C562F156EA0F457DE21F6F91A114376453226B08C945939832EBA01C4E171
684A175DA0BD9BA8B550917F389D8D3D186576F384C126B1CE9DA8668E56F9CAD41F53F32D25
A020AA06B9EFDA8B20F61F0AD5BD1F1FB19800330F47593E863163125AC1C9226565389A76A8
E341768A41CE134FDDE3FB36CA0E815DB6FCDE3AC0A1FE462C5223D7EC1D7E7732015AFA510C
0B14B7585D3BA7105A032629C85724CC1BC148A8B3771672950F2EE2724B66DF4B54213A2D68
7C120FD343CE3D0BAD8179195BAC72FF4307497E4419F307E5A8FF00E8031BE82E672656B592
DF8420BC63D06375AA7ABC28EF1AA532D5FA221437047831F539BB3C6F0FB4B9AA6EB28B75E7
7269524C39598888413B07F12758F8E507286B044944779E57835781D1407E2D2E8A6BFB848B
2E428BA9B48EF59564588781BA8A1C6066BC83E4E13B28E428881F5687AB45724EF7E64D9865
8BD58331136559E5767E5DC6739FCD5F8B365E3BC637DE9F47DB647A0EED3B22E1E244BA35C7
6771702DE7A5B3AAF9247CC897DA22CB91CFE122BF26D9001278AA7A77FEA9D6156092C320E4
D3CF7359AB0B5AA837CC215C3A6C4540B098857EF0E80212E3A12FE8E63973BD766FD591BDC1
5B01573E3B32B2A323A5711383EDB50958439CF1DC7A5BBA5074529DD726A5AC18823F0E4D1B
5BD1FD5C9BBFB80381F09DBAD98CDD68FBDE21E0D20ADC41A7A6654C6A4599D98C4127073B22
A80BE263DF33DD6AE1F860D1F851B656B935BF0A65279A0256E72C984C96C900166B69F41A0D
3FED2C3F2142CD9BD13EB44048766AC87A8947A5B0E6C5FAB2E70203316C753B4B72BDDBEA60
D204163AB0BF212AAA58D5E01D8FA9692559EDE06180776C75D148DA9B67A0184F21F7C9FC5C
C3FFB5A703880E06B9B59DE77BB4894F10ABB3F309E50695E1A8B36225183DE6635FB76840EC
8C7CEB403F2BB5A0CDDDB3047B15B5CCE6A915E8D66A4AB91C3E2800815CF4FBDF0EF579A3F9
AC7E71EA5FDE7AB70B8B23B7B5BD6E666359B07CF90C8E584A4CA5B0B05E888C92464DF84C7E
FF52F028A47076B4C817931B750DC507892FDA0FE418F812789F1F14C5268A06992601119479
490785E523B651E7E95F96F25E90402FA9DE3D94E8EA30533C3D4C97D738A171496FE73C253D
DF2186C88134823034106D83FE21FEEB73C25BB797908A5D05DFD0D7FB96B5B2777243434EF3
EE70260898D7235566C2655D7BE879FCE0B20A545BCCC9F403409BA39D6348306EFC2A1A6F41
123A786A74D59FA90D6CE6247A55C8357B8E0E6399A9C353EF6D727F3A16E5F9CC2130A1D88C
D3009A9FA442F5FB872EAF382E858954DA4C4BF6003E0E624B02BBA9E725555333F42D00D91B
8D4751165370774DA389E8B426AF30EB14800C2B239000CB418D050A6FB7F239E900EE8C130A
72A0A708CFB02D83C69E67B0773FC690C451B248042D5A6F2FD16950FB6B82A6B29B3F13CDC7
6952A99AA935CFA17990B0A3C4FC2518A6F555522045E256A7E212D567D30752492ADCB1A23A
C886B1D2825C3CBF745CBF24D65969D7A8D8ED2490058E58BD40F6A1A66CBFBA8F575F7F1A74
BC9CD4E289F24949BE4C9B58CF7C9D3C5DEC695D1F8EE29DB1BC00B67DAF270F651993F0C860
F7F637305B3A5D83BA7DD2B151FA2314EBF2B681A125CA21A8882E7B8D1E6C28F66AF85C1FD0
4F45AEACA2CFB2B62887C0BE5384F302D7EB0F5D600D092D83E92A34B4AD7A86BFD7AE2B988A
39C0B62696C74C9D123091368F28C0E69B0B8E0B0C698B294861625A45A6B0091B59ECF75B63
53202D19EF405CD35998D81DAC6B9802D112A905B4D779495628D9B6CAB421A97022FC4417AF
25860D69453560F7246C0AD0797C61D0065C03EE4603D6160AD2AAE06A2AC8A564121A2CBEEC
C52A2B5C4B1D30A4FABF638767824460D3BC8F2D50C9C9E3A9539669BBDFE6BEF0AFCB33312B
D85578E1D63F8E632FD339610656C066B8331E5BC70C0737F99D260A84ED412E9B8DCE7B92BD
396CB50545D66743D6E1B1C3B9EA72BF8B5343D62DC5429591A23C0264D4C05AAF2C9DE6911B
16578A7FDDC8473F1D569E1EABB0C309FD68C5A4D3B6E57A7A4404F13F9F4D50C8E94303AA39
F51291AC71775C07A8C7F4F91D4625A8DF4766C4F24B72D41505BF5B4ABBDAFA9BA7FEBC1AA7
05CB6280CBCF72997B994BC4B7C23BF1BCDBF813C55E573157522C5C5B36CE08BD4B0EABCD0E
549BF280DE07BCDE736FC710E484B2D57347C813999C3C595A37C4DB869A0810D2479C8BF0C5
CC84D08B6E06F72D456FC879E92A8A828F7D156B98162C13EAF53DC8F41BFECD1886D65A3950
44C15B637D906496DC568A37658DF25749A74C45E65D462976421A4908075BF9BBD6D4316F98
B6B48CC033FFC6E1FB716984A4A2BD51A42D4309479D6081CD6C649A06299B32852E1387EFA4
F656E9BC0423C3B75FEE898DA0ECE4A77AB38FA1C03C302BFFECD97EC3E543009277D4B50DEB
D745800ECF888D1CC587BB87D14EF81B405CEE5E2842B5C960164DA5C35CA2562184F668DBC7
5D50C31ABCAAF42F9EF76CB5E6227EEEF95FC7948D5AA600419978479F834B1D4EF139EDCA66
E33082187C00986C9BAC74904AD28545B9AC43BFCBBE370C6DD0979EABBC0D823F2573C41E7E
738CF278B150D2CBEF5FB898347CD8B97361DDFEAF93CB2D1AFF6E408D8155EDE07155FBF7DD
5C4C8F20A30A97139E7DA2771554A1A505D7987C80F263C0ABCC2E0F85E6CCF3322143467FD3
3C3BF3FA30C2315FBF569303C852E6D5AEA82BEB5F5CD41FC6AC275B2ADDC6F04B6FBE98E7B9
AAD19EA2365FC5B3534014FDEEEA4B10AE0DAF95D30FF36FC3788535F69B616A8BA3FCE2A423
72DA0F9206B432876E9440F1F54C4A25994D9A194D2BC41B084BC4CCBAA3A38AE2B44798A2AF
DD62F23B7F4660E74C8215FDAB6A9D977FC63C2DB1BB88DF8D87F32A7BB51EB581A7DED74FE4
7422E320509D22B571259B89C205A9B15F48A6FEB2FCBF224DD73C243B6438F96DE9D706E9D9
F37224A6E8C9025D629DDFB4BFB161711D53A280390C95ABCB6219438D2FB2164C7F9F8DFB14
0F6FB945376F0EF45315F689873F3E57191A4C02AB8807CF5D5155972B749E6495DE07751747
CCD603953591D340050ECE1483CDD53E9162DFB3029AE3320E2085CA73F2C32E0A3829523D8A
AE6EDFB9D3F72A9B0E070EAE7E7C76615BFBD77BCE2591E8C84CBB9C045193D8E8199302B387
886D3BE83E5FD98489A8CD1623393269B6EFF39AAC78120CFE8128A0AB67111DE67775ED6653
3FD6302590D6E6A7F4B90C41713F6E8B4A85B26A346A7193FDC5680AC127674B3031B4A1427E
640BD7D78D676216FFC640E3B386597024535B7F332C858C6751DBAA8E8CF5596818CAB14D53
1C06910BAD5709B63FABE35F0871F546AB30528B0A554930F9873029A50F41503FFAA568150D
31E3A8167C633F612674FE322B997A0EA546A1D5F1B818DD547874C88C0CE9A8B8F12467709D
9305D4D374EAEACF6F88767FC703290FAA08BF899016AF3F41B042D46F18A90D14866D3F46E9
C68E08D4BACD24B00327A97DA567EF4F5587DDE44F9CAF1D01A2538A67B5BD738F2AE572DAE9
F212F04A7861EB792CB47E6FD6BF8D5F8F870312BECE2A9F331E7366088FA956A43E2B0F1F0F
8D6F0732E016EAC505F8A21E476422506335AE3BEA122D48C687BE5B6250D12749F9DF41FA9C
41BDBF364A3CFFFD13953673D391B72B16E180F36A6CFD7131512E7E0C9C56CF38274B10B6BB
E1010EB9B0731803FCB8A26EF5BE58C4B5D3C9F5043026AB6840E74ABE972A4285AC06A12E57
AB9548E473C327B4DAC55EBB5DF927CEE663112E1EFAFA35AABCDC9916F338A39CFC5265829C
7F5D71ACBFE25F2E065D1B9279371E1B4C31BBBA3139FC353C8557F39BEF8B84CB83BAF21F0C
36E803850F9C64CF825D5CD7C884D860A3474008F56E749257F180E65821D444D5CEAC2B33D3
2433C9C4AAA4CCC899EBA81175526D9C2F8BB4767CA308428071056FFAE5870A9824F487313F
CBA369200D124A3AA4F8F7180547F188597D56BCE5BEAA7F6B6A630131DAAD3E7387B1BF3E9D
60B048F304167AABFC120BE11AA0CD6CD8B207498ECAF428698E1DFBD176E9E1AE30C238A256
B2C35EA7E4972F45414BECF52BCE89419576FB77983E51BCDCD6596ED778FD5C7A8EC84A6EDB
D2260C6DF17736ED1DF258056C6C69FB6B09C329E5D0F9176A427060902986FF2E97789DDAB2
5E1F69650046D1802D1E50B8F2D89F7140DF465FC53E50F199A79D1E8483395AF8E42001BD3F
AE496F033ACC1EA8284BC2A43464E5BE89510F9C9BC1A56A6F50D9999B81B95F2BBDDCD5ABA6
DD34BFF7EAF4DEEE4A6310A0EFC7C20B584E3C3FB9DCD6F8F1004DB6D03EFDF47E42BF3F540B
AEFF3825BCABCB915B1F91F380C918239C389735AFC57366FDA35101199773D679E14B644B79
46FD5DED4FFBDBA068C6C6C7CC85F69E60861BD41105D7AD7A3BB92DC20B8BB3A35112F80749
17D3C04CABFB67C79D75DB1B85CEFEC44C306D11E32FAEBB63F770CDA0840B985FA7B9F08ECA
A312666BBF8BBFBD89C78C1EBBCFB917E78649E2EE58EAD0241558FEF4FC6722FB985F0485E2
11CBBC10C6FB89CB8DA570ADD3FF8CCEBE0C02FB2D535FC91407448F9EB04555CEACB647FD60
E9290BA38B428E23E6B75AFC5D5F7FFB4A8EC278CFE00F35F0E08A84C74F56AD7AB7B960129C
D2266F1A356465055723814A9CBD613FFE0B671F815D181C228E1471C99763306BF84EE99627
C77E93E65C01219021F54FF9D2667642CC784C6F7960740100DCD4417F38CA93F541FBD55E3B
1D2EFD8B7826A85F8080ACEB15F2BFD6F698914C280800BD02341E228999897ECD138D4A88F7
E1E48866B03EC48DCCCD0B0F8B60E71B867E55917EB65F470DE85053D505D1698DB217C6AE77
00FA75E39A58DE297FC6E4C694E572D0F36ED8D9D717BE5300D050DB55A7EFBBBBD6C780B6ED
04A27B322F78629AE194290F07EAF745F8FE1B506155F0C7EDF0331E04B9953F06991BD1F2B8
0668E712E216E76F0C22DAB11E6580D680002FC6C25F2FC361BAB4FFB6DCE8A087947B59A021
4789F0697507E7F64146D4AA1FAE53140764C8EB160A7E3223B7E0D1C2FA074EC466302FC620
E18F1EA78D131111F5AABBABAD48970BC5E896851C6F53F612BBBCFC2FF9711BA26A25992856
ABBDDF61C836063F597F88DBF32EEF24B9D1FB8AD817FAE948868FCE200D59A07BB32F3AC667
324F510BA2EC4B0254204153772AA4602FB73911B41AC4096893D087F15E220AFBD3B86DE7CC
E55C4AD3E3BF0DE8A912846DE30E30833F86FEAD7BA0A2B98A604783D578001F7D9B927F7C2C
A8C214C398787817912EDB24B546532EB469131E5364D3C4DB7FCE3E7ADD849B020E660988C4
BB550A8AC6466C95EF888052C0E7C2BC9F9B20045415975B0D6A8EF91B2A089351C2EFC56DCE
F7CCBF90AC1ADA126A46479FB0BDD7D11FFECA4C326D30642A3625FEE3EB6AE7BFE7CDE3799F
58C8A14B40C85570F05B08674EF226567422BB6F9BE5F43449F34F2AD87EEF382139C6E0AA37
B341BEE5A66C878372F202BBF036BDE89DDF75AE575A0135049BA3462880C8EC66CDA049063B
7A1A9327BC69B371F5D121F3C0394BD78C6B2AEEDF06883AF3E896EC2FCAECBCF90EA34AFA90
5AC2E2FDDA2EF3EA1E5077435EFD6C7A868328EC64878016AFE203E38BB0292E4B4F9236F1EB
0149EEDECD793990168451E40DD12FEB1DE4A446FF296DCA16820E5A58116D9DA05F5FE1CC31
BADFEC488CC28EE1F062CA00697CD7E08BAAC8FCBD8803B0A6B90140FBF1277DA15B35D1FC87
2F32F508B9C46CEAE91CF2010547A225E7B4B5FB1029C16FE88A4E4C4D8E06AEDCE8A3BC5661
CCB45C9A4C438419942BDF4FD4B828D99945B59E8BA6538D3CB51EB4BF7FA36127B0E34B7B62
C00240CCC6BFA0CAFD2B9B6D95ABEB4E64160CF4CB71532199DEE63CD63AD32678795CC35887
698757D40CAEF44F0ED9F0F52330B3DBF384E8B315A5126D4F1EEBE2E06B08C297FB212BE2A3
1B18DB141B80260A711066BC18229F5182135600871D28D6E64F74C97A38FF8A2588991B81F5
B88B8D471A4EDAB515458CC58EC8B44723C5731B7820631C1F4B762B612606E98EB915A7AB00
98D9AD135E7D73FBFEFE9A6A230644DF759DC7CB0A061D63D1746EC0210BE6FB850B35E26EDA
23D288CD3DAD6512F04DF3CF2D8DAB8FEDF4506EBB5489B088EAA3EA992C08238C8C613E360C
EB380B46F624B00B6E556D469FA1E71E0EC8D6A3A32BEFA0E8CB6759961D4DF19FB789E9B2E1
52768A5335CD599753B75DA3BEC20E6476C7B2CD37A3E7FDF2E7C896CDD05ABEF89F85A1648B
386AF088733EDA5C02D1661D562BE8655D44E2337865B5E7543A38F934D8333BC83F4E4E7593
B763FDE2C7E3AFFBEF58497F3F27DC1E906CD8DC37769E59A5ACCA08D02E6B1D857F9D1575D5
32798A1C9B1F14BF9D3039CDFBEB6B7D3D52597D0B7077BF7828E2EE1769128B7900F5FFEEF0
F6DE5041B3FE68069845B92C658708E821028CB4979B03077CF605740C6396DAB278B00CC420
14B5EF30CA0D6DC0371F605D5F098861B1F853C2B8EA6D379009EC2F4F7200B1C09B2F2D9FF2
36F9752C807EF1B789B7A905CABF94FFE29EBEB0F34D17F606819A6424208797F2EE0F0B921B
7C2F8561866BCBB4956E214FA20104343A266CCA27FA3469519CF6FE5F068967DEA731D73292
BE8695A55B856FC047F5032CE59900B23C3C9F802C7EAB3D980CD6B390F8CBB89000AA821BFF
BD31CBFE6512E14C662DE7C65A379FDBFAFE46067FF8277AF67A192F8BDE199DFF674877181E
544B903986AB8D43688AA147A2E7848B70061CFF8A378114CC0ECC01172B0397FAC4E7652228
A2079EA594956AF69F19F01A6B116F7B770A683035EE0AAF7AAED4A85C935DB4443576EBAB2D
40F72FFD49D1270DB6E8519DC0C28A907493AC68EA2FE722972174CCD02DB8D22171CCBB8E81
B0B98347D4F6FAB240CEB36AC9A513E75CA1EFB282AD9CF1838111EAF854E676E2A743369316
1F12C0A5D483FF09E6440F0AC969C6698F162BD9BB261372537044AA48A1E8FA450EC235B5D9
6073EA579394478F1677DFE60E80E285CD05A735F767D7075BC0192E3E8BE43C2C814BD91C36
8BBB684D9B302CC22BBF53A6DD2610CD6C62A1D605CB5C13334410B3601E382B3399570C0A90
893DE5DE99A3DE78B2AB3FCD9AD3E6B3AB0CEC0EA663EA9B18F5880F8D1E1D45E295C1B567E0
3091D81D5EF149986FD689BE603A08F5FA6D9E9F5402821FEB6F60DBE72814DF8676BA21D64F
5642EB75CC052618CECEE12C90129E1D749882704D585BE0DCABFDC168308E5CCC6CA660B4AD
5100206C10B5E81EC88D7BD2F3134C98DD387F9E41794E843EB92C117454D91684279CAD666C
A7A673869751813AF294CBC62E1A94404D72BC13D5A9D7F39C82E619DA0FABDD19FA0B9F0CF0
CB4929935C02CF78054D894EDF406D129FF88C1FF27E37F54FCC7227283B526DA50E38D87771
8900E4F5A4B887FFF330C36C2673DB7F7C428B862DFD85111FF3BEED720194A57F4D6E069148
852843558BBB29151300B5265ECAAA184747F0ED5D0B486086967CD7E1ABDAEF2DE57F115A33
EBB5D115766A46A75D1541D26D5A5A5C58619AF92E3952261C0205AFF1EEE7C2E8DF8108183E
8EAA1A262C0557E2FA5857EA572F42E8ED28B5AEDB2C781B7BED2DEE1F0C2F8173CF65D80BB8
00874C1F8A7450314CCD23E539129BEBD28DE472445669D746DED4816B19D00DEA53ECB954F6
96BDEF4FDE844726A222F8E7C62255EB3D114522F0208381D4F8A026D14D3D9FB3A31BAAABF6
29D556EF1610316A5CCA51E3E9B7329225F885030605C98443F7DD29BB451D23A9D42ECE00FD
8489AF8FD7C45A5B3AAD2A2EEFBC558A826401B94B4FD55E99DF488A9AC1CE32A00A2AEB3251
C9C3601FBCE0045C8F147598C13D4DC28A63B5FE9E3B1782380FC9D199065F68D9BB7C22CEC5
BA3AE6F36BF987280753D23311C16B955BF91A8DDBAF7B064838E0285028787674F4BF9743B7
9F0E0904CD9DC359E30DB46D764C9D6114F1057088B8186FD8B847081A1BEDF36599864044A5
34A3FF370EEFBCD540399E6F4B6DB15B934E29D0A8B7D6180907BFDF4C721DAADDD7C27DEEF1
176ABC0FE0BF9185B8579BB3D87B29E32497A201DC235B7EF1D9466FD1DEB6B7A209DEFB789D
29274F4E3A912130BEEA635C5F0D35D0BA5BE8FD98626267A23A4CA2462C69F23F0174A9F1BF
B174B51562B5D9AD561F0CB155C27A694B80EE209CC66F7635A1E3BBEB81F8ADE5EEC5034BE6
5A8BAB60178680BA9FAF4633728EAF3416A12063F5D5290E38A1FDFBD46D807A950A2D765080
3A1BED1AE36DE21C94FD0DC1D4DA0EAFBB92EB83AE39C859E3C0F2B1F9EB5365B80E5EF92B8B
2EF576A79BDEB549E1875F5BCD9271EFAF6DB65AFD0728FCC5B932EAEA322E4912FBEEC6F73C
BFE08729F9292F1BC676B22F00A0BCA196798F6C60544D84CE75FB5BD12452A076FF33160C01
E42B2D51AC453B4F8A56E68CCB630930409932F8DF2080AD687426E284E678B30DB11DD87750
0747A9AFCAB53D6A03BA2061266994FD28CA23A744C1375F3BDB1BE3E2806880F1919CBFEAAD
E49E18A90612E948E6A449821B1B0C6FA926D9B859048255936C8C23A0B8229068743E40DBAF
7177F5C674CA4CF32230160FC28186F33168D88A59F6B99FF0E59E311EAE5E61795415D998A4
6DF565CD47F5B91A075F5B5B7A9AB6EED6574A96261580C7D26FBD35CAC9CEF745440BEC9E77
74B853C3A40872EFEAE6929D431446055FF0F86E7D2CDD5EAB10B077A0926A3A03BA3086DD8C
38F050DB70F86F1BF1074D0E911620D639722A95E9590B0A966B00240D77C0D6F803DAC93FAF
FBFC911533E874CCBF9A0FE1B7C50899101EB7B59098CBE29850BC07E602ACD166EC8E87C6DA
D8F1F37246777347FCFCB71949865F81CBA083E4F46B798BE0EE8B1054C28627B2CBD31199E1
8AA55E58F59C374DC60049704B6942A0B33AD51990A29BFFC2ADA3ED1134F4795EDA616C5939
C7B0E4C93A3538BE06522BC9BB5EC1841DC2119672B04781B63685E8A9BD4044FDD258861D28
A88904450979EE2893782645D3E5C281C39E7B49D2D493C7D6165428BB549B4685AF21974B0F
4A2F3956D8B76CAEF8A7E6CB073A1967FD30BDBC42B3FFD3A7E76D5F0AFB91B3CB74635F9C40
7B8C4FD63A4205F4BB9FD4DB45695B21663FD6179888F94C18A93203201B844AAAD70D1D9A63
354CBC4FA3A8D9D954F1B7C275DCE0A66B97D504B339593603EF5467FDA4F0F4FF2252E6BCF2
7B83CF81F6F2B0CD8FC658D907E0CC7C20FA3F9AADED9C0A7D622560D2A1581A9C4AD8F8BD83
0A339EBED1C5ACAE292E042CD4B8ABB28370B3D678AD84CB130159CCFC1EA73766018224E0B6
89365E4EC57961328FEEEF809609658B450C48DA47D7010D19DC97EEC1E623C98A8D54AF3971
AAA4B05EBE0CBD35CCB61CA536C0ACB2DECB8124EEA8E1CB81221F5C1AAACF14EC8815B8D0FF
BBB41903CAAF7146D96C3B4D7E697AA97598290920CE6B33926A0948976873DF103EB9BF11B2
C515D2D461832BA65D1B85B769C4FA11F6EA91C53AA67C3816BE15627EACC09B3B1185CC9090
F273046AC75CE99591E4BEA64EF122116C719C976854519BCCB60DBAC5A59487F6E5817EAB1F
F595B11F3C3C78556887189C3AD4F36233B4780E74FAB9A9ABB38D1CFD8AEC1EB7735E5AE757
7ED107EE30129D460E1A1B2F7734DD3ED0CB68D5B717DF1A3E52A76AD22BF805C07535798B58
DCA4A2E03321F5BBF4DE5396D39786E720EABD32AE11E1BF5B5EC0C1DDC03EAD331A6B98A8AF
179A296C1A148B7B342182F36BA23944E40F81EF1D8A9D3709141788D2658E3A70CF383A5703
E246B9D8CA4439CA4C018E616ACC4C959778AE0FC3D316017D56ADF9F98B68B6EEA5043B4434
E0052B6FF7017700BE5D8E2A1F83855BA39E61D5A70B776F22A6EA498EFAA59701A9E05FE34B
8E9B98D9596D4C6F5656A41BCF947E682976A416C33AA86DE399457FEFC1033AE27308A2295A
5FBF24E7D24A12BB3DCC2BE0B473EA423129BC526D754A6DB7A9AD928D854BBEA29AE260BAB0
CF88A5133C90D4A4259788C43F5C835928707099C56E9159F5D0EC7C340A3D9E8E9E0E79172D
55279099DA92A9903FF7E38F4D123392D4E851454E99F310C1BD8521918FF245D84F201C7AEC
DBDC5F72BF8EC86AE9AEEB9743F0C1CEB65F30D4798D5E0172BED795D463A4790631E360AA6D
BA1EEA8A60ED9566965646EF257112994EAE9EB4C9EA7C5061E0DBB16E51CF38BDA8A9FDD02B
481866373BDBAAA9490A00CE26FEA28F98C7F46CFAA29A33A61EA0C8EB41033C0BF0BE8FAE8D
D4803B182F43934C85A7A1B2AF3D35C875947572ECE7B1A6A94B13A263749259AD9B32ECB1C1
D6E64F2F7C3B971ABBFD06A1CA42AC92699EE53F78B17EA23D02A04705A1F22797A6C3D7EFDE
AAC433D7C044CC8A7AFC0A1C389FAABF4B752E0F00F2B429EF866B9F5285DFDCA777CE73F451
D9CF857BADC5BBDB92C7042C824B13133178AC1E0E59141BE5E3FB044ACC4D2D535BAB4997BA
281DCA1EE21A4138A0AF466FA5B60AC4A023D76D9C5FC9275AC4AB227E61FBD627ADFA6EC5D2
87B5FA4EB292E2B60AACC2FF2612260C96EB062416064E88A0049901FFAAD2EFE2C174D1B741
CE70A450077B0B06A7B9F8E086FDCE9097E3DF277BFC57801F9A237B1B531305C0313797A2C6
20C0F80E29686B443E55C58EDF2D4B3EEFC60EDFFE555431F73C457013A2D6591F67982D3964
775035575BF64F794F632EB6B6C0AC964624A22117B5EFE90590A1D83833726CCEEE4D68E37B
7DE98609D64BE077CABEBD237F51CB9EC0D63B2EA994D2C9BAFC5DBAEEF21A98529843B728E9
C993FF0FC26F789A767A5E01E3294626B012E214A43169CD71D9F5A047B4EABB0E4C20F38EF6
BB3981A45F1F8EF0D3925ADF35F01FE2A9B70FDF3B1929B81C47D1F16CDE3D3390F0BE117BCF
0C1D68E83A7B0134FE414B9934B0AE40211A3805761C51C221F97809FA2270B9CB2AD544DEB2
8B89828BF20FCC3320F81A61E585713AF2611632CB84615FF4560A4DDB2930F14DAE14911C1C
6423FDFCF3FB7CCD5C0C0D7B54A1DCA69FCA11D4414FBAF9E6364B77478259A86BA449B51EC6
7FB176F2ED90E015114BB68E3270D04C1A3595789E7670925CABF4607EC94F9ABEC6883292DC
DE3145BDFE7F2AA0BDA1145A5A05B19FD7E8F8D2639E46E8A25ECB05D679B76390B6327211BA
D15DD6D7AA12C6DEA1CD5EE1132BC5A4558F1CCA36B8F6226106508108405AA786DFC0156DBB
9D99A8EDA030C7459A6D645101B40FD58E8A45EE948BF7A104E93A64FE1655A1C1B77EC475A5
D91677BD19E25D677F320282050D414A0870E13DFA6F54FD92582301B96CC34FBDCC52375079
AA1B622F3D609EB1F7025C8F0BC6B188385B5DAE1F4DD0A2E3E46F5BF7E0172332083E310142
E5F8BD35E4C10CE660B499ABC27AB349020A5BFF9BF15C988208948E08D9B9089C6B76AB81D5
F40B18E539CE0F01BD4CDC1ACB4D87C02387269C4E306CEE1A7D4081DA86B72CF10E5BAD7342
64B3A5298E7343C91E53BEA37575C30F83B7DE623A84C0EA98E8887A598288F1605CEB7402F2
377FAE5CACA5D11F76E36AEF07722C101E64D6DA41F87FC5679AAEF3EB288C8A90C885922496
6499D25EA2F89CAB8BEA63A76AB1CB80266CD857E11381D4715F17A7A56DC09498051A87FF13
0DE3738CF3FDB47B7FBC28653917A7A9165B90790E077407986E0B3ACB490F9BD084039BFB69
B3223BF49407964A5156263CE4B417EC1A6CDCEFBCDB08B3CF6951A61D55502853C6E2C87C4E
365803E8239C066CEA790808FBC2D1370953C5E11C97F562C9A6B06F4A50A63FFF9B61445EA6
799AC04080EB2E9D2DCF1D7B490E78FAD16FCB72BE91BFEFD7F53B7CFDCEFB7B15EF8F369480
927308B2079BF915B943AB6C03F73F599B7555391031FD72CDA5E7C92E183C7A449DED03590F
94FC41993ADA364ABFF5A8E5E769D6777BF87C243C4EF32F1974BA6DF452EF2931A056A37DC8
1CCCA6649A6BDCAF6040239108EDA32F699DCA196607F87BC055D6DE1A0BB2BF7609829E2FFD
670B2003BE0A829CFB3421FC98140C686A2804198AD1079EA5DAAA8C5F47668E059FB9743CE7
3A7DA9140F9E4B8902D5750F567CAAD66D4C1CF376F7592BF84A49E9636C5B7573A9A88F9DEB
49007DCF8453E70ED600C8726B2ADE59C2B7EDA2C9CE1CA0FA6132BCC399EB3D2F0215548FB3
4BA98C09ED8B7CFC8B01AC2E4FA96DFD64F04341AF7A10F5F9C96F6259DC084EF48A22506947
78AB9AC8BD2E5D5A9E0FA04C05390B3B6AD73035A5345A4CAB77DFC5E7D4F6F5F96CC1F71665
A3707347B25077847DBEB5E627622DBC61EC47B92C78581C0A9BC0F99C543589FFBE40A1CABD
689FF6475A5FAEB1370305B27303AB8B01DAD73109132653C9D2D7F8EAA3CF396E38979DD4DE
C150B7DD7DEE7C7397478CA43E666C57B65E3F315367C23D5458B44210CDAB221FBB0E812CB9
8754611A8CA5EF2433119C7D7CD7B9080A06E94B6B8D68E280595553375E7FD8AE876F715706
6FE3C531087F6F8E01833C9027D261B79C4D1C5E23AA30D2D762B55C7835216F93D195396A33
94D0A219968715B9E02F1418293C61F65C05929ACC7E1FA027FFFBAD7DB692C349977F67EFB3
439B626A0CF2A82A85D93D5D15C80BD04B598E71505E9656B1B32772BB690F5488CC04D0E434
AC256A60516656CBC242D7B70793FA36980B091DAAF2E5D6999E02A9BEDE533839F222601EF8
368A086E239BF04DBE84970D052E970013EC6E5F07E473D1D208D27095740592E8016C855EB6
A7B3B65EBCF32CE75DAE539E6F9DFAD9718B6064736165B4CA962E201C98473175E87E75C021
7326548B7D266CD7DDDD98F86792D3D1412376B025642C8333F4D67DA08782D7E26086D19170
CC70F0C7A03C7B989A7C7258BF57888A4BD28C0C9BD392E7933796757C8137E0E444CAB2E96F
32957458C92BCB359C93F94F715CC5B11A9B4B0EC9D0151593CCA95501614B12D5BC9497D8AA
12E1FDF5D6FFD5591776A19E2151F5923019F6C432FD3541085E73AB7608D6EA34850C7A19B8
FE794AA081D5075D32D89392641652942B1404B1C8993A0BD82E6A13E79C0B206317F32503AE
524261359BBF398F9F7028E14A6E9A9BE4C7D99943D015AAF9275C7ACFBDFEBE11938D388621
9861A9553C800061AE7A905A620816E5E1F316ED91870EF58F314EEED30634B7EB46B794036E
E268FFA982C1B3D6AF4242AA2E6FC066B77D24A4B7432B1FD1107D8B6F4BD6E639B627516D9E
8361F98511273B2B759096459C0889AE3DA1C78E98ABD7FBCAF67DBE6CAF2E2DEBBC184C6971
0B667815823C1B54EC68FA1AD1B4F4F2D1C689E0DA12D854BF28B4CE38AEFD9CFC2ED18F438C
1EA53750C4D41471F7F96EDB13D5F5259C0A935FD08C8B4801E04599DD690D4605D33729D6D6
99D725DB46087B935E4BDC8C56151DB005A5F88A7596E8B447000422764B5450B30F219EB33B
1967FFE2293EC403F2959CF329745A27A5D0560F60F387987E9F696E9A3D2A4393AFF6A523F1
C73207816671E7B18C2B8608D036124FBEAB9FFB99B29DC6EE1EA7698E7B3D7B3AE9B5057905
64D8BEC7C1A5B456384793EEC1750C4CE41B03AB776B1ADD57D0DA2D31098DE59AC1E2552BD8
872E5D7B5D7697A5C996B32696327A6AC17FCF3E336294599CE16FC98707EB49519C8CC787FC
991638FFF960D06157A5B24443E52780943F59A96E57991DA7AEEACEE0736B333D5FA0D35743
CF9CDE163F11A75675CA88C5A1414F2CB23DF8F3447D57CFFC9744BDCB05C0A2D950EA485424
461DEB047E73FAE2108DDA15B727A65995F6E42DB268397B36B76177BD9DD4C0F43C2BF9616E
EDDD4E6AA30EAA4622AE9EEDD93747C043487FAF1433D543761592914BF1A5ACEB8A41DFD169
09CFC4404FD04E92B66B733E6163DC3F1E3681F1E3D48D5ED794BB9AC003F61EFDE2DE0CECB8
B4784D72B7AD4D3CDEB75EED0249E69DBCD066398F5987047ACEA08C3DF2E49098972A8576E1
045359338C768FB0FC4390EB5606E1548BE05DE1DBCDB4F2F7BC4C0684DC1D8C324B0D34DF21
CA17106CBF09E84C96C7E7BD6A13C52260FA167865C5B429C6F6890BEC6ED4A7E9807DE85363
DF1E88ED3CF0C92FDFD8569211A0BB484E17D0F2831D3F646A8BBFC0A5436B17FA018E402EFA
A19008B69DFB2BF5707B33E769B1D50B95AF925FF24D8F0A4C033480A1D3962A199642714F3F
DDA2D5D59C2E40928CF677AB3D1C260D651EFCDF6410E25E12D063EF7BEC712F11A99A5FDAA6
B23F7C9AD808FFAC7FFD3FF0FE2B30ACCB8C06D2B98C57EB277A5FDBA73F4B97D2B41A2CED3F
9D6F40978896B826E1049BE936ABAD91A1EF844A1B2EDC06D62F031430004189FE3B7FAE1FA3
D80159C5EE09DF7BE4FBE869F36D78A94F013DF3CF132EDD944DEEB5C388BDC8D9C0F8F72D96
0A86237C337BA89D4A6E3A44BECF914CA1F55BB53FFBC1816989B75E4EFD9E5CB03DCFC835F0
EBAD46D3A8F308423636C05323D182DA21D7D58925F01BDE921B53891B7445039FED1FB5EE26
646BED420956207644359FD447381F32B9BBBC9DCCA50CF65B4E71CC0A16EBA3DB740F222AD9
5E35AA0DAD90287B742585719BEEC10E88AA517835EFAC894A90609A972EF2F653CC0BBAD042
D527F28DFBF851B894DAF35231514E6326C7DF23E0783967CA51D5B2F69EE402BF3B90F37712
47E05E99892E58056BBA257A00F44C4A8F7E0896DFEF3316A049A7E58B731FD8C0CD8ED7FB00
FAD61D6E230E309AC619934120C7B68B07796AA28AC7BAB19516BF522F262A348E8C9475889C
99F2EAC640C16F583C6CDA711E8C739C93FC1A0BD1FED1C58B57BC7A8E21D853895B98859293
191F9F05B6CE7081800CFB6CF4B69292CD3E4EB8C7AA6C04112FA0D2F6D9E6DA825464CFC652
B411069888667F3D23C5269B09580AFC76FC99B916D072564F803CDCB68C35E668B1533C8A7D
3C0FC6191E1F1027D0F12ECE33F1B71EA3C7C787549993F6D5C26ABC0641A4BD7B0AF78E89B0
50579D3F6744DA0CD2C9F7991F9E271ECCBDD44491C85B2254890AEC89A053C4A0EA9CA0EA1E
174EC96F6B4BC368BA0A1DDC09470992D20378F4C4B8766B60CC73A0974683850A894DE7C6C3
BCDE51E3B60C047BB0049D56E06D1B018DCC4271896A1E28AC31814E92E8D4E203366882846C
FAA13A0388AF88EB56346266A1D33C3E7A12E35BFCB2207759DF37BC413BD0520607C25EA9CC
B0CBF23FDDAF588741B270866A20247B49CE4109BFCA26F1EFA0FB43E3209D49BC51242C5B17
DD861A2ABDF66F3EA6EC09AF878184DAA3D2B8E852C21406662324D19D17CC55AD810B7192E5
79C92AA2FB2C5F703ACF30E866E68F64D1103EFD25C6490DC4115285C3F90E515DB5D052C40F
422EB95BD1AB8FEFBF4348BBDFF3A66C3E71E9CE33DEB9D300C1836B95F196C2B2ADA2A20A5E
1F54F0DFE51303ABCA0E33430207A00A54C875B22DFF86B7C390AF694769468C0D2E091787B9
7DDA2CB081FEDE7C54BD9AD8B5149E5030E1D365FE83CB6AF5C042BEF4EA62131EAF204C11CD
A6D76C2F23E426EE9F870E9014996DEE1463EA6E61476E8190ADB7EC6254F0D70845AA6D7C9C
379741264FCFB5D8BA069D9E3D8AFF77E2DFC9F8BEE5001E2AE83C65577D369CE7DAFE8658A3
CA24D07F1D1A8773802ED315116A8244AB9B59850B715A5152BE9267F5299389CA43FB84B89D
8FA075926BB737DA8B120677F405FA6E8AC5FE4D14D9000146C6DA3D67983D68F22A467ADDCB
9DD26856F9E7296C2C276ED4EAB994ECE278A674AC85C97A4264787DF8F63862719AA348E77E
3EB7FE7ED0FDAB950FD29EEFA3E132A6E261652281C955B7983E04F6864F0C3ECDAE17FDCA28
0B452CB572F7A86D65EED57A0ED23AD81F4524A8B5200D5C55EB6D6702084339455BD41070D1
1C261B14DFC654ACEA9398A94E42451F694443F374C5222838280828514192EC2067D6DE1C52
E6BF72BF87DF74E8B1A36E620119B92D764D7CDFF9A7ECAA7F44DB36C0145B3DCEA1623364AE
C16E1494B0AFF12B335813C87B73462DC4D59468A132226E1CA5976110E86C95AE03AF062BB2
6DB48161C902A7D348E80E0DE463BDF13177AF952627B8C2AEB955885EB576CD411F35A076A2
2025E085E4F69D26429C698C59B651947EC4110189DCA1B00C4438383B1EB5EF8344FCE1CAD8
1299DCEF9640D1D41F561F233770763163A3CA42DBF24516280570C58F358CF39D01FF4F43A7
E8E4A8C4734F68985F1AD21B88650E5ACA15C949C681003543DA0C82A27E0C509B32EF7D1A8E
511E13DA07D91DCB51F722FF97332FDB069D8317DF032A7FA861500A83FAF0471B099642324F
214E358FCF0C3F144B85D20E9B4825F9517A0C7BB492C8237936B0CA5241F9D7EB8C4521CEC4
C0B343F57FEBD4B1914EF3DD7FA034546831A3BE0F65E8744850ED8E4E6CC29627B4A9560B97
89E0A9438337DE8189BA1CE8EFEEE2AFDB6BD59521E8038E39557EA61FDE9F7097A0FB6F09EF
223192F6B6478521E83D9B250F39A96EB7C23B8B30108DCE6A8F0D0FFDFC5DA846217E7E5473
209CF988F9D96D09A9DCEE3496AFCC10795DDACCCB933CEF06E521ABD65EA68109D9192B0C7B
F20E664735D7148D3D71655EEAB98B08B1420760A50DEFE419106DE6AAE51620264CC330923A
CE057116BF383DADDA37EBDACDA6040B36BF2F8D7EF85E2F4A01059728ACB3545BA5062E9DE7
2F65C8044338E9A5F8AE4D04FF514505A02C4DBD438146ED08411E7944DCEE323FF05A274148
CAE552925AF5934BE0DA2B0CB6E55FE25B46140BFF750FEFF9BE88D5E4DB60D60118F4D8C1A0
DF9A19B5F3D34EEF6A416C67F7350CBF0E6DED5FD33048201A7743F15A484F7E95CC75658596
4BB1B8060BD3505D5A64F76FA7EC82FC90C8C638395CDA5C79A0A16366D9C3230E4BE4457B02
210AE0021CF4FC2C144A7825489AE9665E74DF04931F27AF9C4B6178E5D4E11068C5F7F1E46E
1282A461EDD40ADBDA25715C0F99BD519523AC915038192E0EA059F8E07908B89BD943B49ABF
543B8FCECF20504D41326A4AFD645955D304A59CBB8F986D4D7FA3021D9BD18D82B298FB5906
9377E64BB0D3099437C3EB22122E6513527740B269C21A324FF4B5A6001A8181F6BD73291DE4
8D56597B6F4CF41DFC43ADC4624B816AE6C8FA6472A979FD62C37660DB3F0BA28C0DEF8B1DB3
067A319A69C8B855A9579E72F9E7F06D96A5301F8DA48AC23630788BDAC63A15412A17A2B3AE
7A489CC44675E2F770950F688923B37555ED2A92AE45FE74002A37E272584876224209730A98
B3BE82893F63480D6F8690FB7453C5CE3086520B5C459036411AC45645847857BC20BB949AD5
A2C4BDC714A6F171E46654E64BC9B2F3C95304D3E4B4FCD88A7DC4443C08C52EC3486C0B12F4
0F746A73670D0A0FCAAB8DDD4C2161F921E11031DE1655CF95AA9FFB177E854C968D6964BB6B
A089ACB98FE97AF230537AC1B3BD2A833AC2E742E078712C2F4581DDF6F611EE72DF7488A06D
8C0A12BDAB940FD5BB06EED1BFA6F70124A36AB5EB339E8FAE787FB70CB9B7F28EA3F9B5EAC0
5B710ED72BC79B8CAAD70C6A341A237B3A5A7E96AAB3F1031F02C55F36CE6374EFB15931D4B8
5FD421FB6A5AE1E46241BB39F1F8EC55005E0DF94493A92B9D3846FF9728F078004C5FA7A412
AD928CE9C7BB1DFADAECB71DAAC9B364F4B0CC1648A56BD720B992047DDC76540F9ED4DA9C62
51E0C1B9F40DCA3F8556470264CC4A3C6C81F20F99B9529F53A5397A6FFC77C4AD9EA475BB0D
99C862E6CBCA814D653DA56260D5F5EFB1DB68EF4D062E0C0F205D85DCE387EFC1876C82E402
DA582AEB1524BCB8380708346D6C347B768C69647E321A52B277B1C3CE4B64C6FDC8C0D43271
85DA39645073EF13EC6771329D10FCE3F90D471A1DB218825AD650622EA15BD2EADA732E81F3
B83961B067BE1AFB04C17F4C787B7CEE1C87BCAD802A0ACC06E94BE53F9D6F40978896B83DC3
56F701CFEC77E05C194A3020B8361C5C2BC082881C6D8DFEC32EA1AB31C1F1B442A6FCA5C579
0DA9683338E808EA60D5873E92B9BBAA8F2FD5893ADFD129832779D9A9AEDED64E170BBDF09C
82A8B893668C66250844BC4ECA1FF34161942242EEC60A24CA6ACF819EC872080D0F99120AE2
D6DC6644D58094D57EF7CBC0F3015F342F9E5E65FCC9D848B3C502EA1B9DD81B0FC4BDF18CE6
592B6C422138F9C2F42893165E9E84FACF6A0B47AE3412E6E82E5E1EC209E553BB225C0D458C
BE8D4D0E5BAB0FEBB77B020D97EB798282EBFAF0D4DB579AC5633685BD005ADFD649E0361BD8
FFE5621732F58DFBB6CC3F3BF651E4F3AA338BF9D4D11794BC595931B2EC29C96A7279E0CF2C
1D5815128B1C15E324A76DC31EC1B4B70F0332A05EDBBE01F9AC174FC0E2C60902ADAEF17480
AA8DC275DA0F0191ED152D844584451F02F13856079252A45EBF2DF20AA444B8E28D6388A439
F679D3495C402C4B9883BBDA5703957DE939C70596CD328D6C29594F90B681DA7A995C98842B
2D95923B38FCA0335B7CF85F98FAC664FF28E4C0BE46B30E175B40F7D0E0EB719D3A24836BB9
103FD7B8C55916A183B863E4C4740F1ADAAC643878DC80CA281F5129C69AF6ABDA67DDCB5703
E9A434CC277E5E7716696F76EC41134CA85995A1E251B886A6EF0C0EC6E3F1E0E4666ABF049C
9E0F0CA7EA1B3905941FBE152C67D202037E16DEB6AA05D5BAB3E82ACDA8EB0B7229FAE8229C
5C1A89F78F130B12028F2252F24E9BAA884C767D21934B6A655972CA9DF972A503E35716BD7A
D4A45F8EAAB8B5EACEA7D389BB4F9B75BFA039119E14B3153A4BD0A0CB53DE7A2C572B1A4121
FEDA3AE58F9CAB9B3180C58FA4D880A2D2ED7F8F301FB130F6314F167F22048C48BADCB424FE
5E3B8FCCC209AB21CCF4CF407CD582E00C9978A8389095E107C715EAA778A251C0B3143C9B47
5333D1D69AA3D429413195CC56EA0ED532C7DA6B5E8080A21C8EF7220B7773AFF47CF2AAD309
513F50432570C2A0C5F46FC4F46C349BB44D46021EF1041202A0B4AACC98C06F71C282DF84C1
6977B9374B0E26E09D546984904F0252B2BBF8CE339E14835B177109541334F8B7D5E3D6B209
FA38AE1A5A09EC40FB62D5574E35FE4AAB34BE91014A0BABDF37B23657A4B9C48BDC489ABB86
803F090446B10DA82B4EBECE61BFCFF9CF3F52AA04B0A1CA2D59E0C78028AA98F1851A47F58A
389B9DA48E6F0EA0D7E36A6E168D9FE78B5A4721DCBEBCC80A8BA4422EA31B8494394878EAE2
8970CDB4117398C69FD35457FF6D9400AA6C045E748C63B811C711FAFC6FD09F53DBF95D2AD3
08B51B721AE1D672EC62EAD76C76517D2E48D379894CC6333BA695D772799595EE968C6537E1
236823569689EFDDA581123470AE9031BA3FB0F87ECEC265B0A81F04CA6190B7BB3F22E2EABB
19D1276B0510D8ABF7EB354F4AF23D94AE51CDDE1080534BDB0167A60A2F4C372A8527D781E9
A4A057F5B9BE19BE457D3610F29B5532DE7B95BCC24C6215D98070FC885CB2ED68872030FDF2
045701F25077708C25C88829D5BB5BFDBD9C9E48659B4FBE3D052041145FA7E00BAFAE4F973C
EE66855BB43CC964EF859C11B8A3DE069C7DE57339C781A409DF2FDF1E7AC6DE9BDABB037FB5
C22010D11112C00388BCCF0C2139B10ABEEACA26C60ADFE01125EEBE77D60656EA1239CE1AC3
05CCB3A4E8B038F8FCFE203AF918B7DEB95D058F0249C046BD195582853A504B6451C7310E19
3F40A8274B88E24C841A90FED97B19F82DDA1E090EFE032665977097AF4E90BC272FE821172E
F0AB1F78BF61A278E0C8EBE1C3F393A5C452BA4FD85A40FD6452FBDF9650BDCC52A5C8E07D20
AEE04B15BB73758BFE5E2267C8CF59ABDC30CF9725C7B76F05E522E15A6ADAF335B8A95A9B1D
B803F8D011B05BBD1CCB93AE3F56B4BE49DE52321595DB2FC460BE87D0B6A4C81E505318A3B1
B41CD2FE8749C3066A4CEAF98F4DBA74A6EEE272F99A79A948D05E5594DC7E8A82F09841B332
F27BF2BE61100D344783B75A8C52C3292CDC10DCDFF58D1057EFE0CAA60432FB850B0548FA12
189DD4E5A4A6623966BF4F5A4C44CF6D75ED44640CCD4119BADA77928C049678BD8BCA01BD19
17722CD9F99BCDE5FB0032DA09FC6318A9CD8E5516FAFA9E50CF12993F63477EBB130951188D
8389B07ED2EE9551B4949D1C57E70F6576A2B2690C920648DC36A30C2091998BD6C1BF25FA10
C3986795F14514D36EB2B0D2BFA13425144485A7E23E8880030C3B415E7BD19BBBFE19D2A148
103D297CBCC5FAC84A4656B7099887BFAE7C1D7C3624E94A635C5DFD282CFC4CFF38F2C320F5
53735FFB5A9F254E7312A60B0534313A4ED795D857899DA870F3B80FFB80095202D4ACCC2F68
7D6E87FF0C0B9F37E5680921C8C2269AAA8389DC8865FB6713A0C5652A5DCEF5C49B5E688D8C
37BB01D3BCF163DECEC4CAC3AB6169B46ADC0C3B79F9F07FB0A5B4AB5EF7A5C94BAFB9D46FDD
82B69A948AB97FFC2158F3BE4188F944C8DB3475A796EB0412D37FAE03D6035D543B90A9AE73
C84702086556DE7729F8C3160A42630263A3A34FF43BE238423B6E0981B4749152624842F94A
19A2CECEBF255069739C5C2090FDCF4B31DD084AA3B354DA9A74DC6EDF5CDA14F78DD0F20FDB
5E15BA12E4A2FE9359FD2383EE3A49BA68643DBEF7DD0E331AA1C655A0CDB4FCECB6CC313349
2A35FF579E8920923CEA20FDDF3A174028CBB2A2E29AE917257E63B2BEABF6AD62EB1039CBFE
AE381750FC60C1C200FF420F18567DEA590E9741AB7B1592C8BB275F3A912466CB17F643F794
FF59F3474F823549D40D69C6AF4F69C260574B1771A47EC3B3DF9D15ED705854367FB6E8D3B7
08799C0A3A60F2E451EC5583159338235871BA4146D82AF4DC0DEFCDAD43D72E371C420C3703
EBE8943AF4FB74CB41A5CA88B1157EF1468F93BDBAD001595F5FF418F703853D1B2A431FBB7B
F6A6A91E60C034CE49FC76E715BBFBFC007AC5128EE4F87316EDAA8B3690037E4D8DC5E0F8D8
5ED533DCE4A566B66B6ECC4C3A6646CA3FBC504A59CCFA4CF0E2A8D73517D5F012E546EF1713
6D6EACBB8B90782AA9EA98D64AC140528E062FE81E39B9D1FC9F22222A9DA88BDFA97168230F
39570DA75015C2DEA4BC8A3F586096D9D7E48A701925889E1628605CD4AC5136DBD91A13609C
827A89C0DC1F4A6B57C9A3647AB2FCF8567171EBD11B555009FD99B10BE66BF825D25B5D62BE
8CAC6E2904B483AD38267B213CFD345327D4A9F893A0A93DCFD0E27C6456055964D6B940506D
B959D96211761560B4941A59E112CE0E188B210FD945F58150320707949032F8674E1C3DBD2C
5E1965B0DE35C599315030958FFC19A927198E8389EE89B8EEE1B6B5F92E3C57B9D815394752
B6584F3F3985654A1CA0D21DC55B8C6D9FE0803B26D829C76F30EB4E3F8B181E5E7DA313B810
B03B95AEA0D28D6A0F247C0744E1AB82099345F5E575CB976DCEAE1BC602D5A3CCD7C25A2DE7
F275AF4B6D87F08B98C2830B13DE37AAB632D4569E2BB21050076E8902DCF0D4A7844E044966
3520AD2CE041BBBE64E832B57B6EED77E7C975CA7D1BA98D166EFC9682928E211F97967CE1F9
BFF5FFB51B52561062C1D205B705792DACFACC5A0D116E8CB4C46D3EF60EA9B3921E1193A47B
EA4871032BC943C1F92F78DCFF3994C177B1D129C3CE4819901B1141DCE2CBEC3EEFFC37B0A8
7A82E4C7170BA8EA75E662F535674205CE3E279C7D0E4B277B4CCF9FA977315DA6071AF1AACC
EE10725B01B02A7BBF983537DED5B65D8FD0517A57DB38EB83D61F1217ADE26690071C261257
DB07A51EADDA3CD1401DF855BB1C64417799ACC8A848DF64780963C13899DD35FDC407AAE3A8
1C54FB41F1A2C6B34BFFC16C0A0EAA222A56C59E0AB1193F6EC6B2C0852336D2D8CEE3DFC7C0
53751B854C935BB8D21D32E1ADA0B48B5945411612ACE856CE0E861474B4024657C497589195
1DFF710D7511FAAEB6BAD63EC3F36041FF5516203B6B2C5ABFEB00994AE40084148FF1683F78
0C56DBA09E1BE127112F4468C6AD34AC70285BCED586977174F13F012CB63842D3FFA0AB4CDB
EC99C10E33A1F15D1CAF7E69B969177FE94D14189B306A4FADD37522BC9340C375CA229686FC
6800C758EF43FFC6779337C6284333D73B19A979B12835781A00D158951EF761139D593BB9AD
1B69347DEC050360B7DFF66653416DEF71343D37CAA1FF34BFA57BD015A0CB9B844383E54990
E807F62649B36EF540CE22572BD22E9FE861C6BA4B26C339B3EAC2A2828573640B2250CA0CE7
439A8BF0FAA12AA85964AD6E6BBC603EA095DC4FB48CF077FF6390864A1B8E6C3AC0F8223C53
46A490E0CFF95248DCA332037B0C56FED60D02D966FDB7BE9C72249ADB192173DC0FC8963C9E
CB37E4EB31159FAD1D44896C4D532A1851E57833ACAA39A3A01E73AC57A909B9FF03E3118E1D
38F70FD37F52264BA2A8150409ED58177A1628730B36CB808217091F502312DF9A6E1B450752
527B66A5D01AA1E9DBBE8B3E1358916AEADA20B514D10D3C78603762B6C1F7BB4750FD851569
92D019D4590AF813776D915A13C497F419A2B42B74BBAC4E766E8D24F5BA68973AF85731B042
FDEE46F4555A566BE74943CD79425E7BFC09B47E4F424403B407AAF848806500606AFFDD5F2C
B21EC7D7CA81FF8E9BE1A977B0F6005FCA14418AD859536453D764436DCCA07C9F4D050C65BD
E3608CF9D32EE20E6E39BE92EE05D7732C59AC7095AFCF2A67239176E8EE63E3F9AEFE75DCB3
E066625DD695ADB5A1E27B6A1B2D8ABF7FABE42C82CB00728BA9F84545295138B5509DAE44C8
9BAFB03FF3A19F56C657A4A3A55C73F4BC1AA22D2BD4F2C0BC2D9F061C21EF49B9D65FFEB73D
72EE7E4EC1D5359F9EE57B9B6E5DB01AA6427893B738F0536F0A7BDE1B5EDD055CE8448096F1
77EA134C4705AB7DE088C0AEBB10868A2CBDCCAD3247216D8F96EBD87CEC606464E79A267D44
7267BD42B937618AB6D73507AE563655D412DFBEC9E4E8DC0B7F2CBC159708B04D8AD7C968FE
DF8591E1714ADEB638DB46DCCB79558C361391E2E57AA75D100C724E622148E269E8854D700E
C89BAFC0DC0C16AA85A6021DBEEA2D9C38E30D1B3FF82A8A7D2E72AEC1C2A2A32C1A25EC7DC6
EEB210ED6E919A84019D369D78790C30A03F3CCA481878B4A7443C2EB5E812587440CAAB5AD4
6EAEA42AD1C86383BF832817AE0EF873C8CF2AE35DAF6E1AE1093448805AD7A613580D6DDD1B
336B3024873B806EAD749840538DFC9B18668B15A76F1982B6F58BE42E9B342F869EF92DEFF8
8F636FAB490E3313755C233E8D2433FF024318F87184361CE55CDB7DD0CD1449602AD3B9C4CA
DA51700DFB232BBAA27BE151621FEC9AFFBAD149350B51580BFC493E157A5A00FF364F643FA1
E93F84C36AD023E9272CC4473A37CAD50693985966EDA44FBA58BF31FB14279EEBBCB5CF96F8
4D4DF1E8120D857F09C3F934AFA923EA4E8E3BA4D78AC901FDA3078F656F65D15383580CB96E
18D6FD80F2D20B1BC5E9C2C89D9C499EBC828209475F3566CB2134D16D957B443954D843C875
65EE463976673CFC62530AE17E0EFE6571C62DEFA448F79FBCA17B36EEE9E90C174AFBD10E23
1936F9A9CCE9F5F181DF77097DBC449638E4F5075931668BB63FA8AD8AD51B3B20044165CFA3
ACB0A8FB3C6D2C1BC6D328FB63EC532F5F8F7F9EF17AE2F12AC6D65C9091A07A5F69E87E15E6
5A1E3D15E90DA58A71D22CD9CE507E999AF6A608C46A228D8BA39A38E0DD96B4071208F6623D
BEE113639E1B74F8FAB77B622E219F0C3C9E9152C70296D4BFAC163ED0DB3EF50838867471FF
266697E96AA6CE7A6C58331B1DA849619646B14A25BB4078FD3EF0286C4CED8DBA5E45E64C35
22E82A84B2A4727786EB6D106EBB15CEC92DB414C06A294880993C68B6370D2138C27A5E705A
9DCB4D00073B4E2A4E49BDEC1F5574530AF8E82E6A5E2D6AC36E1D88FCA260DA00FF10648F78
D1842EA8939618B688473F49737C64BEC5B3F05D73B569ECD428145D726D463434D923A1CBB0
7F05A8EB9C6B23ED74D828B98FDC4A0F5EDB12F2DEBB361A70EF7743C0C5B1C770BFDB07A854
C708830857D9247B05CE89133582686EB8F71B16EF834CDCD66656BC360083FBF2A205ACED56
0F2917EBBA994EEF69CF2EFC8AF5ACE37FB3298611862CFDD0AD620E6AEF07E501D923E867B6
1600770E2CD443C30B9154C3F3920BD5CD975FE97FC8952889E248EE28B5DB749F1B01BA5919
9AC10A0766E2605B20082AACDD662548F0D8B554898FE5FAE77AD1EFB7E142CF2D17546C8E96
033B4FA92E94E846B3E797F87703F5756C8FE0F79C8CE5C19741281135FF5C76AC0DEB3569FB
C9E945FA5A97D27FCC7BDACBD2350B76802BE60B067B85ECBCFB10175777E50AAC34611F1B21
44453EE4696DB0A52C14BCB5224D0406024278AE84E28EE14E98C191F703047D56B6B24B9AEB
7878A79AA4257E44CAA5BC38838D3836ED1B05A426AC0A3381E730565BA15C613A51AB0E3998
102BC759479BF1336201EAB748517CC71B106C093E2DB596CDCDC40FC44EA0519EDCAECBC8C1
1F527EBF3DC7D048541571E27A523F57094E950C96B3A99446E31CD6176B692F09D82A442FBE
ADFFB85C4013C6A598577EAF9181765268AA028DC8C5B31FD6A0E8A8C48F6AC778E4E28588C5
C89B72695AF8AEA2BF7797DFE3989F1476A964CF1FAFA73E5BD4D9B341C1467D72F3EA6A5615
ED66172F58463C5BECA672E4AD37CDA410A341449871AB157F0467ADA1698D7DD9B2644983C3
722685AA1156727A1F7CA1395DC52378083D5A40C471615E419336B942AE41B0FC0F0077A0C0
1BFB3EC0B19EC128F9D36A51D8563705C415D61BA60F13708E9B5EF86134080EACA3397B9379
E6EB0694650B502B0B425D32A4B4E99111B7FAB6B11892D01F425BC4597322F6536D94BF3890
90585DF59517E6C88CC76B2B6B644EA34DAD57718CB3586C142359AFEED24A325A88CF3FC3EC
76CBD37B5205D5663A0A8D6F50EDC18CD8C92D0F208DED01FD724CAB4F79A02BD4836438EDA7
785DD29D24FB0AF677363D7ED6D18DD19C755BA1258A391EB51D4821DD03215A44A43D34A18B
09890202A92B80CB69F0F64C97BFC8F261FFDEE90F5AA119F2970A6E1C01D67BCA653ABF6DF2
A3ED7A30C9C64B16E18544385B95166ECD36B4FFFD73F7DDCD34DF1EC7BFCF2A19068E9F0A44
F8CA7D1D3889C7DCE67A8E4BCAAF416AE13F2965A3B72B4314DEBB291A36C58514DAF093FD3E
ABCA26A30915E602A88DDF2C2B6F8B7B29ED6A4DB2536C75139FD171F98C87B762B09723AC95
2EC0B9B9080CAFBDFCD466CC431BFE5CED7EE82C85BA825C2265FBFC545BC62AC6F63E9AA526
9AC38C2A4548A269001700F59A60F282ABF7C2B4F8AF872017BF39FFC09F1C64DBA53F05419E
0964007BC7607DFA507E7710981406D1DCA324B77783DAA1257217E7BE2A93DA6802C9A81642
7989510DAE63F60181060054512162D44B0862040EAA38BE794798CC1D1B46BDF6FDC2DAB97C
9E8915ECE0D0DBD8278F42EDCA0BB12115B5FFAD07F4342696AD250A8A439FADADFFE1C73BEB
42F5A6B0013A3E5225E0377ED332C0CCAA90F633BC744242A46C97A754CCC3D9D1F4D8CA32F3
F975C30720984166F31AAF5830DE17CE72056B7487CFE26D52EB9EFD97BE2308B405E63ECE32
19C68F8FF976FE916AA50FE1839CD8DEA0B509F6E0F9AE122BA78F01DB5D8F733703C883F4FD
AF01D339F402461EDEF7E38CABF062D3EA1C02CCFB468F384B2FD14E56B7AF49B57EF3197E2C
77D66DDE672037231B4858DA03A6CC5310ECA24348CFFFCAC71FB1E31AFC906935B78BB640B7
31506BA222B02CEEADBEE4419EE6CAB685114B3D79E16D820741157F047FD21D76F380712D19
ABE6427EF0E3C027FDD6EDC61169A8AA3EFC9B7F1C39F303659A1B5AA2A36BAAA83A191B4AC1
EF3EAE6F8F442749B7A20686BFF38F708C44E6AD8D17A84A22673A06056115D4F50C744D6898
002713353AB19A9B29D43687A380FEAF9B1D47701E02B831094BE2F03A8B16214EA0082F1A71
B6227D7BCF75373962D78BB3318B00FDCC5589FADB991E9379D81EE480B4315127358CC22A83
D132158C34E74D619615A54168A53F61679BAA37443087281D24EA0D59B6392A19B62453FE72
0315CDF472F427AE683D2CA79E5620557AE26C53D373DE697CE3C4311FCB57DD13A1E4CCC9BA
4C68D3B2630229277F4DFC5BEDDB54106A592964CCFE3CFC486788D366ECC29387C34564468C
8235FBD90350B15C937F6D9862F52D2F8F23A120FB6F6CDF1F25E3A71ED842276415262FFEFC
429E4AFA8A6C5D8AD8830396934061868B84F56E32535B59B95FA36FBCA7AE63E9BE9269ADFF
B22E9AF7A7B97959ED433326AE9DA6EB8F3CBEA4AEB0E2E37B4DF7A74681BB6CEC52A2A5EFB7
5701254E99AF4D485EC69C744D1572283B376E2DAABE876EC83C50C6AC24B4F6A0B5B9049079
DB528AE4A69C882CB79E80FD755D120FB0ADAB126B231EFE6A854217FF11AE8A15EBD2811C03
558165523396F4F0AB7295637E67C3FB90E3560B5B719962ED08A7961E752EE6F87E3189E986
49326ACC37765C5AD7EAC0890C67A2872B561D69BF819BC7C6F97EE04B2DB006220BB551B0F6
47E28435B93324CDDE178EF92516A7FDEBAD793751CCA2AB1E1A1DA1EDE78D7A59682F6E75FC
C43C89C6376A421988846183D3A2CFAD0165B939C55FAC8F3CA038E1D2300004B43D151EA7C7
4C3D93B0374A3ADC1785BA31DED004529C4FA6F423C12ABDACB909585E9F5A1461858A50D6BF
664E06ECDFEC6FF03664AC80DA9D25DD421585163FB72FEB409CBAD82E4366A3E5B2ED82043C
4093AA515AE224E374B41B0EAF121FCE6A79FC8FC5CB96655FC2F09977AED1F14F54A2438CB5
1EEB416941DF53996BCE6525131689A47BA5DA54241687B250DA4C3A4B3211A776BF6ADED536
C80C667910229CB4760AA504C1D577498BC79EDA582EBFDDAA91536F4F30476B7D74458D219D
AD67DE733FF9E4A10ACDA9BC0C4A3E25F95DE9C2EA8A856743FAE2F15DFBE1A67162316A8B86
0EA644C6E8B114BCFAE81E0EC1C9554F2330E0B143A00F11C1418D7C6202A1A1EF31AEF7B9FD
5C6B146B818589BB594AF95CDC6B7CEA9028E498A8EFC7CAFE350F9F486A15298AAEABBE6C4B
0805535C7FDEA0F5A96706893E82D8C59CA080FC20B415B10F65E648387C4F1667AB0EFF90E8
B686E81D992813950EF2F360FDAEC72B3A618A851B699BF97723928EC27053CDE81793ED67CA
7C5721FD0EBCAFD8F3B2CD647C0999E1695F0E4741B69BFFCEC94F388C662ADD9FA567182756
AB44742752E3D4B238F616003C33561C84C26286685C59E3987456C1EA7E767834B90D35EA5A
E31BE6A87DC6E0D11DC77F8E713331A693B48A67BC69025907FE02F14B3C8B3E8F4641C2846C
D92993A12962929D9A9FBC535949621E9F6E425394FE9298EC0E382893129A2B2FBAC1DB4F49
FC71A51B730B59F7264527829C0B54F321307C0EBD98BDFBE196369218418269ABEC83116100
D77604F2ABE89B5B9ADE2E38083D6E7C8A641F430A2403267F28575159740CAA9CAF74015A2F
4087FF3163797811CF5F5711E05B89F14144A792B2A446C4CE232F9D804FAF7F235131853260
253984A762F2254BA788E7777EE0734FBDF28EDCC9D15012B1EBD818060CEF46A8A6A443DB2D
F52F1F69CF4AA18D0DA9FE68B8D6EA47E1FA81AE6E33569AE47A887ED36EE30DDD2DE6A96C66
6633EC137728477C97FCCB8D38F3C3EA9B1FE8929FEF96CAA1D1DE98B4104F9CC8D1B95A5A34
8A402CA04239115D6D3745F3F9E1FC0637A107BB81503A83726D206DF81D69E28D79556506FA
3D153D61796E8EE8E52FDA8F0E2CE2BB881BC3306E9B223D9F90832BBA8AC82A46580E02A7E3
250690D3701F53E839DEC0C90E6CA622E27E059F631D277B70219A697E94EC4C894710F83B96
67FC43324D9E9D32688DE8FEABD631DC7FB85EB287AC025E56C4856CE29A9A075A61B3F16D52
E9FB6CEC7B68D492012C33EF6EBD51C6C65930A7DC3C1BE35E77D83D26E7E48F83E223FAB31B
99B4852F4FF0B6A9ADE25820AF8CC5869FDC38FE85C7BFDEAB2E92298C2961EC82B6566F51C5
FCEBE0A049D44743324D1F87320F32FACFC7F621FBBF8C928CF632FAC74FB9003DA35D0FFC3A
7FF280BC3EAF2293AB251F3A8F48FA0BFB59F474A41D4B2A5101B701BBE9A778F68246B594EE
8A9C5760E22C19CFA30DD3FFB32634E16380C0E29537F1DC212D2440FE040EC1D232DD3D7AB3
B6EFC7DB80F30D426E9BC28E48C9277E39B4A7A26F8664B129F1D3B11F0D5098FA59F07D23B7
406257EE2F60E9464BCB91E6707110E21A68B576679D67E54DE2FBAB0066D75B55A08AC7F42D
19630D88D6C192F8AC57509C34D6F122FEF45721CEB05AEE094F9EF1C3D996814DD81422E8F9
66B0CE26FDD3E4C441FE2C38F3ABC6DCFF121BFA1152A381AC865E7D698316376B95D34615D2
642C8C8DE79B70F02406585B2FA589F0BC5B6B9D81F50EC8DA414FA8AE9C4CBC6A4530EE0EAD
531CA27FADCEA01663BF7D3A7DCB9162FF478155E35CFCCF746D79F23AAEF385AD0C72F2C22B
DEECBDE1BDB72A0AD9265E299B693A7178438A1ECFDF229B241356C1CDE680EE325C724F0882
244492CAC7A576226965339CA41560358C1FB54A23DEE2CEF34828118ACBA9FB6AA64F21F783
B0DDB68B50E05E03FDFCE29B2CC8D00B949CE8D126785F8AEBA0B30D3D5F0D9EFAB56761C8B1
6BC9C2309787C4EFF217401B36316B34EDEB61826EFE3D659E9E47BC5DB6D9724F6F130015FB
875F825D93911CA065E143C76CFAD0107EC36F9795FF0B00DD4DFB4A47217D51CC22C29980ED
3030BAF1D385336E4CF006FD0C26101C6C7C7E787C698E86339426DCD804F457267626A5B310
8CFECF6C58E8DA464E0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmr17.pfb 0 0
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
 /FullName (CMR17) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8ECBC0F4C1
BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61A022F9EF8BC1F2F674ED
F1533E67A78CA29A612AA9268E113C5EB84DA56CEDFCD7A111403E6E2A8682DB04368889747E
003A124395ECF0C7FC81218552EE7C6F60BCFB4120893528670D0E8A4117EA5676915E3591AE
5652D003EEF67818A41A8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC
8344585DE104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA70268411
5872CFB0652C6B991407DB32EE3E75E8961D89542922948C903EA1B05CEBE72100293B917F51
550BB61E827CDA95270EE935A64A9B68688C23FD85C6BA313D78050C968EBCE93639627EAB9C
56D4D1D346EC2A24CA0B43DA264AAEA9BB91F1DF9A97AB301B4C4F496ECBB660EBE1DF7988F1
C2B7A119B5322185BD83323B1BF45116AC908A08AADC304F33A65304BA0374CA2190B0A211BF
98CAD7E4738B9BA0C087525438EAC6FCE0448982CE914641C1445BF0410FFAE12D57F265EEB5
611DCDE328C5A8050BF89B3F617F37AA7FDE318E47616E207AFDAF6D9D187E4BFFF530BD7D8C
117C8B075D78F932AC9D0AF963D870B9AA999D7F337D2608EB41B72721D75F4FD6EADDC8C9C1
19E1201E85849D84E90BE51F766393D16CA3F95B8011EA8CCF4A996F84659FE91978089A6651
731CB09FCD888B81459435F18FE61096A9031575C29231BCA7BFC7C1ECABF1B867A839EA97DE
660CCBE1F62B52F0CCD01663F718005F086B16FD7A107DF35A1EAC7A8444A974400E9238A799
6C4FF90F1D5A94C6ED3C9358C5AB664241922872FD549E4EF7030338679E5C9BB12FBC77564C
C64A8FFBD2E81C54AAF99D4F64D3A040B02B13FB426210C1C419CC1BCE69BC49D680645DFBD6
A8ADE5D4FBC1DDFF8A731156522B688A23D833E6B1115D6082DECEF241A28A5785FBC41B27B7
3FABDF4FD50FDCCFEE7E9B87EF97A06522572D38F59FDCF88EE7C085A5194F1B375C8FE4023F
CE2D1707A299F38568E8382752CDC9A9A286CDD3BB864BFB276C065D36F2E2C2AAF32AA5A4E5
7E4CD212874D9A691D030118827287316B11C387679C94F561DDC54C90EBEFE9677613D22806
7FE9131EEF17D18C5D0A769DDC1ABABA6FF8432CD7C0544B842D9AD6F913A7BDBDD37C865AAD
6949D93554A7D582879448EC4BBEDAFD7C2586069BF4CA4B25655BF2A0E169744CA2A3C72496
904758650703A62EAF65BEF819B596F46716C919612D64EF66446005CB9B8497B0649C8DF5E6
76DCAA08FDD73327FB6ED89A00C99948B284F2E4FFFC7671BFF52060B63607104093BE8AFEBE
ADED2FF195CF6FD2B59F2B42F9EF0D1E6509AF4D76A68FADF00C4099DD207561950FB9685C86
0929A103AD57C712272AE66D874D58209B79229691FB4A01EF2450EC2268E9D597CEFD12E4C5
9CBFF39E5063C42D9F2CF32C3654C337BD52E4AE83921786DB2FA206A67DD5568D1793BEDFF3
B998812DEEC922B84A531429AFD73832C5AC767B896EEDB061A593B9961039D5E9B182081F9D
C9A1C3BEBEDC750717F056928B3685DF10A8501BF1C6AED81EE81A1383012187186FFFF3B314
BAEAE0808B653EADCE90734AB16CF6414AFB85599739772BC5F126E123497B62C6B47F535C04
622693D564EF44D07F69685E932ABBB9C038C13B6F61B58C3DFEBB88D2BB9DB4E6CCC7AACBE4
64FA782DAE1056155F081829002592769ACB133D7F596912C5BA5872A4650F2FC65C0703240C
39C88EE5598E11FD0F4CCB83BCA4DB824EF99C79791B2943DC4CE4C865627E13D68607CC819D
E2E72529C1C5AF439B2ED095AF6633C8FF7C7BA59F68837934B8A2CA13BC91B3225307B095B6
DAF079A41C6FF9E545AA0A0957FAC39F52AC481B0B9974E7057D3081098E23AC91E98741181E
F5A78C514262320BCAC5D886C22C8426952D3E19C23A2497993234C554204DFB4B0AA869CC89
A4EB06CEF0C8B8DC079AE1506177307C60EC3238F045A93C14051B063A05B502B0E0F5144980
B085A13C7E1BEB5D259778F66A3D4CC2EBAFDB43F83B0A405D88E7962590818AB9E9F1C9572D
2AC1BB14A54C5E344792FCAB28FE8D9EBF2B095C152617414262DEBCB1BA6AC33833104548F9
1334A02BC2EDF8934F638EA88090ECB5749640A33258FB0368A80C7CD3A678427C706442BF39
45CDB7CCAA1C9361645799CCF40988D57DD3415A000AF612D1A4E4221FFE81F11997B494E1D0
4A5D0EAD88D2FC76E358449A8CFBAFDF5A870436141D271B5E712B8ACDE3901FBE2DD4010416
053A1D486FFD2B93D976D017EAE78D27C736F6FA1E32E8F1BEFB2E735F21C7C8B74C9E798F4E
73F7E73A90F1BE6370CA1E848A64F1CD8BD99A459BBB6E6CA51C6E6AE875E39694D17227C98E
4979780834A5FF95588F62626903304E86EE889DEE318961FCDC295BB56A935050298E7A7E3F
0A6D98E264F37720171A935B3C914F7DF5431C2FF6C48C230E237DD71A51B7DDD8F66A494F3C
AF693A42A280C5C6F4F657EE8ABFDC7A1CCB98CF678AD5E66267DC78C6DC1B6D781910340B1C
C8CFB9AA2ED6269857FAB492ECBF735CCBF804A0A0D59EF36F441F97DE0D09A11A3422EA70D9
27438F3B010D55FB5BC77B398DC3FA766550EEE321821C1BA1EB6CE16ADE9BBED68E4022A48F
E703505C7A5FF8722348523C240B15D7D4E5B966CCFD83F0DA09F079932A8CBAEED8ED69D952
24E0D6DB607BB725689C4F9331AC8E882DD668C88AA4F683444C210602986F818A8FA219E68A
970C10D2A8C21561E7AD8891E10CFC6D6DB42B0CCAA454ADC90A28CB81B0510D551F844ADFC8
0A55301C8310F9D103C489C90A44F84F47B6F1B8D474366071CA1522215ACE0D842767AB2C96
1D1C9B32BB886714945AAFCCFE513743F5F5C44DC1CFECECA538472511896C85B2C9126173C1
2D4B2B36C4B62CAE0E746C0211EEFB8A8FCCB473BC50FB48A3C3E6946016908E5F4F4914FDFE
EDF1186F12A39F13131629AB408FB2E0DD186C257CA3DAC07BE9A7528C725DB8A93D52AE0C10
E4D290AEF73C7FB2CA6BF922423EB71A8C59526E3D73E057D6279630DDE8906B795562F4396C
0869A20694370F2696B00FE2F96369B26D56B34A0FE7AD376519D1B8A50598B2D5A60004A3B7
C89218AA9FFC1E5E74ECC4885C517C0627B58B60B136F651C1D48F388FB9351FC5C46DD3C4BB
CB7DCFD01E6DDD4063BFF55A34D64C55599A82417717EB593ED428B67750972BBA8252C31507
BDD7435ABE4B4EDBE81B312CC5F91A1F9237EE9C278D11B51833F65260E3BD0410699D0A0B8C
613152578FAC985028EEC5F10E8B9BFD680CB0BB53B8E93AD0FA3A749CC223BD356319FB1B6C
6EC397D22248F0891EC1B60E84E89886212FE1B41D5C2B6345D4BA2340306EFC811586E06AB7
EE765E93C50B873FD48870769D1D218A10952A9856B4B51445FB82A7928DCE5FE1805B19B99D
5378CC9271C4722E47A09A9278FF244BB280CCA6A828CD0901AE75F5BA1F87E73253984D7AE6
6515141E34D90E770992A0736E3D042B304271E207DB1F282B2DFF4388E48EAAD733AA746FDA
33C9D9C7C9FDC090B4B2876FE4645C0BB822CE40D581C7625F9EC0DE5DC6A0669412E9712507
139FC3652C35523AFAFF01D3BD63A1E2C8A53B9EE0543FC505902E8FE0C23F72D824E951C40A
6483CD8A12A5B29F7C799309D17386917861ACC27C200AAA34CB2A104DBA07EB4DDF5E4099E3
57D625394728DC83E1D722F3CC1AE7598F169E9C9A2C1E7250715DAE8660AE119D8E29323FAE
A613C0D31C0C1D4005F2BFCC2D7913F8A0E18D1DA390E2F1D3E28D6EDDD09C93D019D608911B
AF7BCE79557B1397975E38E906B695B6AE1C22AF047DBC1D7D08744F182B2263E14A75B843DD
D8F990078410973D7CFF56E897245A224A1DDBFAED2D848DED109648D42DA10219FA6358BCE7
7565464AE52AF167FABC06C11E6726FC233D0144D35AB68C7269ED2778017AB4AC15639D2588
952FA22550E273DF724ABF514D1F0364A1E2A7D9CDB4E356494DE3AF6125D3CC6D2DDBA01AB9
2D36216A0505B4C0FBE46AD4674D8BB51E7520FB4403BBAE43BD6A69E475EFF0ED4F71D865F6
D3BF6E3ED5750807DE076C0B1F59083D488AD5FEFE10D1CB93A0F4F110E45A80BBB00BF408C9
6BC6347922332F3220CF474B66FE1904FAB3E58C9ED0B4CC7215665EA72EA2F7212E7927877F
E71070D4EBFBE97A375A8784640DEC93F6D6EEDB7224873E8FBEF31C40622D385F6EE43CC6C5
720D3DF72065155D58EBD21F2C93F323E9E0CDC35AC43330F9CCBCEBD9415173E5304DB65D3D
CC4A8158B8A838CE7E0BCC4F4BFFEB9333EB9A28CDAB15CF3256AE784884EB1FEC9B65328A0A
26D0C8EDFD3213384B367FAB9829A4A1823E223A3FAB405E51593700FADD42352144F1B648BF
7BDD217172CA43066E2632DDF377A535B0D855AE8120A97E0C907967C36E88B9DA5596676C9B
C1FE9449BDAE8ED6ED101CA70798AFB9B9EE1B357FBD0846AF20D3F4E64AD7793501A0F52CA0
710D5588C8A7900F9F58164D8E5174A413764ED0B2630585C09C66A62E3AC562E06F2572FBA2
73F8F2F62B50F2FB21040D12F607DB040076159FA283A42C653614CAC50F6D929C6D69B7BA33
1F2BAE21B1E25C2937B5404F6FF789B73DB70CD06E32F5658DC2CCD53D40ACEA5B19E4019263
058C333D81E6F99741A86D21BDA9C6A6680B35FDC036AE2379B16E7549AFA7EDE71C3E23DF72
1EA9F4580D8C516832677FDE26B79CE1A922467086E293B003C9F725663FF089DA8855C5FD23
2612FC0434C25B759DEBAA039A658A8F291261A11E58460247BD0A03D3CBAA7B005D605030D4
2DAEB1914EC78FFA012E5A416BA91A877872A489362909CB20CC859F032E305BE4E1E2510803
C3F475CEDA2C3DC8EF409FAF1E260240D9EEAEAE853DF289471F6206A91D7E7A24B3568ECFFF
34269DC13FB9CC71850093DB85BEA6C890ED3BA5F8220B7516353A9B9A7AE11BB69B37827E60
36602B536A8142D4524AFE7B951125C1243D3C8845A38AFB7BBA584219487CD88B302487E502
D5911D79EAB6CC2070AB47D5BD927B0A835CDCF0362C8BC0DB3B45AD85AA6434DE49B32BBB5B
D180AB18C98B8E9538089552B3600A532FD24769C35281F3D60585E75988A305F1278F6F2A5E
E0405D0F30B6770AF0364F4D982C07D607FFA4D55CB773D92F9B0E163934E801CCD9A23B4793
0A57CAE509C9E021D67C3E08BA173F8274B6B1FC1A53305DC998C6576EF045E84FC0BB391E97
1D75D69CF507DAF86967BFCA7F098BE6F9F19AE1B72C433826094601FCACAE2FDFE2773BDFFC
19616AD0E1DA13B6575B5E949BEE16F4198CE82DF7BDB5A0E5411ACCA8D74CFA1F7FB2F0B696
DE35D3810E090F2BB036BF80AA77D8E71140005A3014D736D4338EAD5B3CE7760B0008C418C8
0508C44B9E5E8B58B6B770CFBD7AFF85631CCA1EACB7836580F3D889D9055FF808F29CEF9EBF
F7FF904F89D6655DD9A7097E2A27C19A0C47E710FE7143A2EE1E642DA6AF5606305C2ABCA4DB
9AE966057C124757B094B5B1226702B1A7FA4F082F8F1BBF841ABBC29F760ED72E04746EC768
95D4D5D78D2E09B73E0B6CAD2CBF7B2583C1B6AED6B208DD582795177DF4976908582A253CE3
29AF84DB80D2DDB23C02C659F99C0BD70849B40C4BEE2C41C3118E5444CBE7DE1E57DA268C9C
6E0DA8F2FC33D7193F0F4ECB83DFBB9BEC8D0098C10134FC5C2700A90A9F0707AD75762FB063
F620B691C478FF88F78B486E7FA772C06E3F86B94555D981ED92FDF2AB8DF1B9C1F9ACA18009
8D876E0B5A1F44D53A4341AD0C3C0837B8A595932EFBECEBA6BDEFFBEE967E474E173F999071
689C1A7E23255D793557A022726053B5BDBC9C333926D714FF8D6261E492DF9C905DD66DD1B7
E17E714A44C1E073DEADF6A250B765872BF96E047B297580C27AD1714D8A2CE93346D0A972CB
A8BAE026BC1646F8FED5C9A3366E73A2A65FE7FBED4A8447BA4CEF3F25E20EEC13F5448DAB2B
1768BE14A2F1FE90117079DE58883A86E7759A3F8723901E70ED76DFDAB6DB2A2597F3CDED02
E1418E33EF2FC5EB86072BA97DB0B4A87BF21354EB8FA680BD07FBAFCF8CB2FA44A9BAD1EC8D
5692B12A0390E550E272449546A95AEA075538359DF87234050BF5B6FA86634E628DCE90F594
7772B834D3DCB5BBFEF9F5FACCAC5EA302813FA76A0C7E8D4A6904110E7D164FDDA1F2F9E867
052945E5697F3E7B3F3E44A159FDBB940D942C43520B6760DAD2D26E5568604EAF88278A7842
315D062BC8B723D19B35D5913264C3313D68F88A1F063D0C1B5D51296C7C2878C5A016C6ADB6
72F6148EA484B435647794900EFC313CA6FB90D3165695C194440F715875B1817B511A9255D7
5A7EC5343BAF3115503E2B7B7550688CAA306B175B35F1A17D821F4168E5F8CAA50058E5700E
CA8751C8446A91C1EF58E6D8DE3DC3D7F89FACF39E5063C470F80C7D740FC48D67A51EB34ADB
4BF49F04166E3C8CC5EDBA32684D760CF5DE8E3B15FB7C922BB6866719F75F5E4B35FE0BCFC5
0117E820A707A9D45377BCBB9B5057C58D4D9ED248BECB7D749CEAA982166F4E8FB3617654D4
6DA66F2766FFD0404ADC348BBE5CB78623985F7BFE0B05C802F028D9F4A944F3077E85EB1E95
3656F07BE40F600F17273A582064E98C77B6ED4F49B086E2E83E8E7DBE8CD9DA174B49171822
CA13ECD8ED6CADAD41E56BAE142C7EA81CE7041B17CE25ECC4E7B836A6D2831DA602B8E74347
810EE746CFF2019AC296C137E34D2078D6CD89D12714FA8056C200294B7D43A678EEC4B09C0D
FBEBC9899763B21F281A278D4A67701DB89D786ACABDE84A78A9647F68CA1F1D96237BA5496E
840C270C2DC9320668EB83864C340DC520D9DE1F6C6035EFD0273406A14DBA72D0D484CF006F
559C114020ACA0BC9E1822EFDFEC07866913956D0BF90C5B0F96B6C17799153E59603FB415CB
AC3AAD5512EDA753DE8EA7B4FFE9135A8C70416899F5B6D1765B03ACAC1F8F970BF2D937AE6B
CB694DBD3DF0DB2B53FCFDB8EEDFBC7BB80246F7173B3193C0FD9BB5C1F2C3B3A9AA1B4EA166
322660DD848C4922FA4FEE272BA1AE64BEEEB19CC875B268712AFF8D4F245C2F081EDE4E6193
21F341B217198E7A7B6B39B5A13807CB970AD03277FDBDBF29235C600E20CCD4D4153A460124
8829F857509717222C2C9535E05DEBDEDE4DADE6DDCB343C2E715573B2182AF3875528120B42
DFDA773CED4E091F4E99FC1C8F33832569ADB8233C781B31FF37868723D053307300F1E113E9
08473FBE39ED75A931C290E7EFAF4C89D4CD22F63852EC30831D61D1DE3815A6D18FBCD15F28
EEA75AE50BD0B237E8CB0870CAC5DDC13DA58DBD060D3193FC92E6C4CEF3BCFD81CE6B3679BF
C5855796CDFA8A26D63A659A2FF7A1A7E318A7F76FF80E846A2D647D38E827FFAF54BD5A9221
EEB416A475EABF4EF0409B1CA55A851C245BF7207AA561CF2AF19D6FF145C884413A4015795E
89A494F32D78674B9459C7FEFD38163B355DBC5D47FEF1D6AA91940B5230E47AEF92E526DDBC
4A2C16762641FAF1EDF50092203B05B19E2609787023B59FD3AFFF6E32915CAD9206027739C2
DDA28F18BCCEAF2AD29C826602033327589A7E06813C368B09C15D29F784CFDBEED0A9BAB681
E0E7B26B484955D1156CD7F0D671D1594AC915B467EF15EA704353E5B66F298465E0B1B56FA0
EA242FF5FAE98BD9121F52279AE360B84EE800525372BDE229F1347BDF6533396D270AE09014
DD5EA550AA231EDB265A135CE41B0B5C871E5F50CAFB04233D37BF80D6DDCADFBA880CF560C3
0D8FB7E6A72CDB6BCCBB2972F4064C379FF941F4DDC8743EADDCFE6E15D063DF73CBA7DE3518
75FF1AD16F3EDFB240D683186F29A0FB16A3307BE57D903A20BB1A216554D779625498AFDDA4
520E1CD4CA6C375C212393E4422FFB74E68A513629D45D47471C66862526CA5CD79707DC8097
83AB31CB4CDE5FA5C2CF1278324234290489BB39908A4480EC20895191F411BE2F7CDBD23A6B
CF8D30DD3D780E6CB5AA71EB33F13AED4147E8E0918F557E2DB504B398306847AE267403739F
21631E0B79DE385CA7482C03FD8A2DEFB63714587216001D313312EC7651255DFA89FDCA628F
CCF16C40086FFD343AC0B6D43601D74FC01748031C0FEF0165273557DBBA9AB3B8B04C7B57B7
75F889B9CE9C92BF90765BCAF6AB8F5B958FD4F520F9E5BA7AF30114D9E004B708E39E50235E
6316AC516E9D777D6C653CA65529C45D5756CC52CA9EDDE67E36D438F60CBEE32680BAFC8043
8DDFFC5C6C0CADA102AA95BAD0CA5D20103509F358B95F5D5FA27F22557C8C403542739CDFEC
8CD1A05A448F9B520EA55BF8D748D16402E3372A2A58AAEAA824C9A1E70A2D54915C4B4A5D7C
081FD2592E248A94EC29C3224A25B254E947516F3CEAD3D6C738C41D88B8CF1BA197789C9C38
64B6A96E7A366F4702D6802B5E357EC3B220A9EF78F39A2003D98CFC53F71E2EAFF87001DFF9
057C1FE0A04D24AB59C582B6B602E74C6D6F95E056DA9F17C7B1653ACACEC48B10A28BF09B92
6DFDE5462AF6152D793D1568E521C3753A3ACCB5637AB1C5AFCAE8ED095BF8987AFBBBD9B058
B3A12D73E33290D15D1C441683EBF2AFF222AA8F2A57630499F04B9D09B493E42B9741E88048
1DFAC9DCB3FDEC334E0E97D2568495664702B0A9DE2E2F25A4EF4782B37D6FCE852980EF4514
70E095DA86383F46C0F39B4E73F2BF01527C5FE1A6FCCD2AAAA48A79DE5044ABDB75242D4AA8
B080C8741FE5474C7614B162A74F5F409F15257C90E1A48D70F72C2E8ECE686FEAD6EE5C12E6
BACAFE01DD8EAE3EDC5B92623081FBF3056E5FB353EA240AFE3ADCAAAF3649396BFD236842E3
CF8136525EBFD71E2070AA3A421603EC73BC8B22274A911A9FFFC3891E5FE32A6982976C339D
F51FEDF5E69455FACCB3E30566F3484B4C9104FCE58ACFA5EF787257DEB280FC5D8D01DA8925
FAD0AF4037BB2C5138714F232FDCAAF126F76E6108680086CEC7B1335F335E44B7AA7EA0C5F8
D5D5F3B79A123A8C6AB5F407D3BA39C47BF8C081C09908FCE1BAF0662B93B209635574AD533A
628C874869BD645DE307E3D3BA7E15D2D6C49EADB305C869BE3A535CA1B26EDCF1397E8F7371
50A9DD391161CA8D5AFD20CF5AF9DD987B96C6D401ABE0CC33E519C8012617DEB01891437E61
9267C61962C0EBDEBCF1C458D6700F61358B17F443110570B86466DEF908FF9E95D5C32BE477
174BF7B37959A4B392325F8784E0D7587234DA25BE24CFF09D1F1E36C9AF639375B2B04DEE6D
F6AB1117569F4B4BB4794BA32447A4D55AAF39056C23CA7BB074CF652BC7ACFEFDFA492DA01E
614D73DDFF95F564EB7AA7FF77F808D7E71C720BF053F90014640B8ED2662F539B4B3CB2E913
FE23CB5395B3F0514E3D4549486525C2367CF5ACCB8F43362EA1AC358F27EDD73D344237947E
1F47FEB6CE16A22CA0A71DAB76845EA701325016C7D2D5EB41A4EEDE55CFE37E66EA4A20363A
CE9B6AD85FD397C47B36B7FFB0E0FC81B29BB8883789F3E4F0BC5F9A83CDF3E11C3D76C517D0
7C10CC29AE9C61C765BEB416E2B81EDE4351A7FD991E3C926CB5AADD1F28145D1DD08EA5DA0F
5C261FD2DA3C7A311479188D16044BBA7966787CA901BA9196D12603B644CAE46CC854FB11A9
5D574E88B44D8F61A81BBC202B199CE8906B82D71D17FA1F1B20A0A227643BC28C5E48EDE7FB
04DA6742CB8A7A3E2402D72F96638450C16DEEC65A580057DAC486612AC8A5F38152914E6FDE
0CC8766336DDAD0A74EFAF3B2741358346374AD533FE04E0DFCD0955D50BC42119FDABEC728A
451B10BB7B148C1F3E15C2B1D73E0101F19B49E77F761ACE159510AFEF16587B58466AA536B5
17991789AB37FC5EFED0B046A78D47019DFE0986B3D99A12A836B51F8832B631AAD458647743
62951A267BD6D12D2580197D08DA24653C95F9A77E208BD237457C230F4FC0C08DCB777D2EF8
22E61880CAA3CA87AD2CD05213E31DDDEACFCAF8E7843CFC96AAE90B74CD1D6E3CB2265D73E0
745F55351F167FDEB6EF623A29A8C5B4A648CB7C9F4957A494B474BA92EA8F2CBA54010A9DF8
7C786F19A8251B9635F487A0B14F5DFD49C4E78BA6FF4F799F94C95CE33765F580E6BF95BE03
1520FFCC81DB4C325E7C511852C185B488B8719FA25F2D5018D016CD88F76E8A704B7D2C2EE4
260D5FAF5FE6BC6E908E99AD0BF4A8698BE19F61E6FFE4C438B3BD3F78917F5C7D78BB681C3A
E374E07302AA5413B597626D868DBE49ED0BE3E8A3502A7FD2DB97DB1DCFA269D5C37A3301D2
A9E9EEB612033EA16252FA78A39625C1F1E36EE3BE688080A55CCE0348D255679C13A9EA26A8
F12955FC33B3A360BD06427B88C841057E42B5160D9428AF1697DD903F39E35C6120D9A2B0BC
641E493CBD137ECA4DA7B05E42259F8BCC03940B8EC9D013952E2353C2DAA8C9D5B8195145F4
24D9278B77A7AADB0E352909EF3BD002CB529A07C73520B2BA2A95128706783647F1D447A731
E488A51ADB9C242922CF29F43EC4810009FD954E08C1CED099BAC9D1A1A21B238B14CB71F68D
B82B96759647D575C624EB3E2E455AFA86BA2960F2660DA24739B574EEAB9E74AD913C1599F5
4D75473C1C56B8A1DA545343D57839635338514B66C7B502EF4A889A76BB1EA09554AB22275A
88542FEFD00161A1CDEBF20041370788B16459F55D7E714A18F968037381E2AFFA4A42225B76
AF19C12DD5F849263DA80721E0C7F65ABAF9B7FF9A142AD9B631276AF57D4C63F9DA734CEF0B
298C2FD722D09D39CA44AF7FF5DD5810A824DDF2584FAC8857C94FACCAB5F3379DFF54A5DA84
AF082329484E0CF6D0A568939B78C6E624D9FDAD0168118809591012DE45B1110438D6CEF4B3
C0B8FFF478A9EDB835D0ADA9EFE069504672046BACBA6E1FF23841EBAA6293CC776D13F453DC
C7EC6461F7C5B952F48C5B863A8AE2AD5DD3A25F21FDF6CA3FF7B96BF29928634963D4075E66
F941B18CC3E64A559FB5E1A485DC07A2E4269328764B201838FAEDF113B752904EAC320A7D87
A72431551DBCF1C59401E760708D9B0A0F902FF8B214563EE54F81DA6A447FBE81BAB0E949D8
6B0021015F22E6367185D101DA431A384FC4F9B01526D9D71A743C53F85A3D1DE8CDE9D09578
BB1C401B9FCF64F2F82632F8CE61B458C5584A6229148DBF2E6DE3ADC3B33840EDE50C87384E
D7BD1721A0CF7DFFF89A67C58FBA380397E02B58DC32E43F2D925DB562A1DE4BFE28CD2106FA
FA35CEE98FCABE3FC0C2BCA8B4BD9F7BF2AA30787066B8499AE7732513959DB546AEF4BAEBD1
C1C064EBDC7F090144AA2AFB74E5B56AEA4CBFD70448BFF2D18C109311BB6EC6956E6A323639
E33762F0B2B946AA5F6FF7E7AE5245A77B4F636BC2CCC3B5191022C2D9B38AC75D7740E99248
B4F1E6A47DC363FDFA56546FCA90206081D3154E5DE6B3B98441290969A5A8F1E421E4541772
2709C15B5A46420F9BFAE0EE84BD69D39EF0FDEDB1FF867F3A3DAA95852FFA3E20D795ED9532
9B2D950E8FAEE30091ACA63E969C160D64F2189AF75AE5B5C2ED781B780F45A5926371A23F27
FE5E27181240941CF8F72AC522B6E39F826699166FDFD75DE279F68A7E73544F2CBBEAA78350
F1E82FC03DC19595BC583D6B00F21A6173BE7BEEA9BEEAD7A7C727CFB556A1323DE7D5FE8738
E651897DE65D8FF33FBC0A61738F71C5F96E0120140957E8E347C38A552C356484928289A0A6
B8C72E103FF308FA9A3ACBDF901DC666D46BC823FD6E23AB99410940EDA78C4FA475888A3006
E33A630691D09A2B460A7114E13F2212B1F46004670AD3A01F3723DD126D13477D9EEFC54C05
60C36BC39021290620C633689E03A55A12DB74CD395FBCB27EBC178BAE6FAE1BAC9D01AA8390
503E9DB14D5056E6CED69C0544FF613CAABE85E1CAF3912092DDF2345DE08DBC3AE889582928
45D30B926A2E58950479100E6A05FA5B4BED9F90E51028D2CE83FFFC2A5C6733CFCCC3F0209A
8EC3A0A7E50C1699E1F474AD36A740A29751793C7C8CD3F387F7F32799BA3164B9CFD2358E24
96E938CFDD6326A5D537DBAF899E30D85C6A39583B3BEC6B6963C5B3A92EEEE09A1827FE7881
8AC6A48E6F23FE734C40F20B5F731EDCEB3D9F2AE7DB3B5371C1FAD799913F4072013D02D833
7ED67E109A4CE13CE1FBA21692948DE24F4C67BE78526892FE4154C4B7583E04438BE2CFA84E
B953584CB2556CD574DCF5ADB89F6893F4A7677DC63AFC7F403531B298DF6BBD4A53646DC706
8C1D5314EBF0DBDFCCD63F5B4739E20D6C0DB0214F7FFDDF61E17046277C2B8C530736336A75
86481DE38C8874500F768459F4B07BBEB42D5F08193F54E05C9292ACD4F65D4ED04E3A1DCD3E
0DE8FBD491CCD909AEFFC29E8A279FB8D32B6A9E349DAEE5064A58279753140F0B14F6D7B6B5
71428D2438BB228951C51BEDB782C49BF4547D3B1C883951AA3CDE97D4468ECE0E6F7C2C7922
AB97BF512ECB300D3593C41FA4A5AF7A016DA976405EE37429009B4F13CEF0FDD925C65C9BA6
D06834F21DFDA86737DA567B47BD9B36E7415E285C3C71B1260CBD3F82040C5955C1AE4FD2BF
BB32655E380F14EA293B4F42F11AFCD82C9D85C377D9CAB6E729A7B6C5FD31D288E8800D27E4
01DC66B011FF0BE19A1123AEF02835C21B06BF0EEDA845984E6D84E64B97A0C3851BD307274B
A7A156526B8CACB0F7EDC120666254FE6E7042767E9526170B20EF76A41C3147A30FEFA17228
23896BFE93E5D50C1379CF76111BB5A4145D615B90C163117A66C22BA3A7B7E44FA3604E8FE1
F1FF2BF5430806FEEDDC21F6F34035FAFC927D202333112645A9290F14262A5FB3A28325CB45
627227CD645CD2A73FBB0B107F5F9B5E6E7CD8C0DFAB84A61A293B842CC1B3FACD8CB29CF847
98739D5A60C172E327D487BEB3788461D0B18705FC76E85BDC06B7FC967E0AEAAB6AB036A56F
916E44543EA6DAEE294DE32A17D50866963BB99D5D2E7AB85C1819F5462A13E3A11BC7F4245F
940F9C3EB9C7CF65476F7D16A648D59D3BA16145609CDB3F17FAE5704719EB225D4A2AAEB0A6
05F8D86EF1B061CD40ECDD84D17EED0E8E57A7B6E1E0C34EAEA7231201A83290BD6174FBFD6F
7A38457CE4BDFB9193599905E49F101348EEBE42B560738D2CD70C1308944E3BCC98A7677F23
5EBC97C1F67D6328607C1A27F0490E0413CED1589207D9298BD0304FE83307EC1E9C706DD161
AF3B9B201A54CBE2B3B7B73431E888B0B03BFD8B0E82AA119C98363E6D1B488276C9B75B35A4
5B72D878BACF0BBB39A83936E31D069A96937468DF608C971EB49B482AD9D7A0A909D7273197
45D924B9C2DE9556DED57C53DB92E8703C6663D6565AFB51DAD4F83ACE6157E99BFFB709CA34
795E601664A57150295A017A08BA6262290DDADF166BCCFF091FA074CF10976CDF9C9FF78D0C
3538D0F62AF4E933945E61E967316B81EDC2BE257048E6D34979FD89FFCEE26C272A3219855D
82D9DAF355C8F4721B2990A23ABDFF59E1AFCEF606C420337418398DC1516356A5E77438D1AA
4D058A71EDB55F0A1D41A2B854305924BB71FA7500FDCBA24CB7DAAA90ECB16ED728FB548BDE
BF7DA57A96A5D0C5787DA3ABD3ADBF13B08F3AB39F20F13D53B603F9B82535C3E8E6C230C73F
F75EB496980BF67C672C311CB3A8B4621E2A29C17E611B048B3FA3D665731F34E308F89BCC7C
91D56DA4DDE2B7D9F83765262A67530B2F73EE801F398A0ECA464E6DCDD8CCF3CA64458617C7
D9E642F5F2D156254B7DD71B1EE7225250D3241C450FD2D421CF37C223F300504468D94677A3
6EF33A212FF6ECC19870FF51D59D1FA956D5AF2000BD53F3E292B0BAA78D71150F605385D8B5
DE106435BC2534CE436503598B28DFAE4592A2673123A9E8FB2B8F5C12E34C2028E1FC668555
2302C2A73CEEE476ADAA5ACF10C065F0D1D5F964341CBF860897DF1DC69A9461C71B8EDAFCD8
CB992991F1947AAB4A780DFF6981181659B62C37ECE76EC38BFA937D2226D2D5688B8D6DE502
FB786FCC2B157B19BB30FB4CD006F30271F56BA73FEBDEC4165E16223DC7A0ABEB585CA258A1
2046D338F25D13E854B35D6A20C60658D61E24ABDFE35DF0B612932E3C73D25933F0C6D8177E
FE69847E97DB124FDBBA188F29B9E811D1CABA05DE9190D9B1C6A3A1A7EB5DBFE7056EF963EA
3015DFDBC47660E4CBC3A3F5DF93EA25C2D451FE522EAF6D9B923319251D2F1B3A85BAB45BE0
594366CE4C796B6B3E710ED294E7F213CD28AE7296A3AC0C49799B8675FA552E5269B7ED30FC
FA1023C7287C2E8467FBC333B32731AB9D18B1FDB18E1A2EBB41839AB225AC3D51AC8638886C
1B2C58792D4F9ACD92ED5A850C2D7DAE748ED91CA282099B923A7217B2DE55DAB56317F28C60
28030CB96A42D4382F78E614F4A488F58572F846BC5BFCFBFF6389586AFB769115B7E91CFDE5
8A4B049B728C147E2C10B061956BF261B21A2D0DB16615CC18E10CAFB9795DF7FC691A6CC1EB
AF62D4B14ABE91CAA0F4B624AD921AF8D326487AC339E90FFBD79F3690DBC3DAD8E2812C51A5
FC44302DBCE56282486A80F86EDDCBC8E1E0950A67231ABDBC441992F6A12EE44324F0B9382B
76854CC29B338A5E1BC1EDEBA7A4D0B1D8BACBF8D9E9015D7BC170FA1C5CE1239F0DFE786965
3B765AB11B13210F0697C00CF514CD884479AF3DBE775D53E92AB1E04A1C362A0530DEC92064
4C868104AE838B1B72F255C3DBB0C80FE75BD8932B4340EF77A239E643C5EDE1BA1EA8E80266
644DAD34F4BB85BE408EA27CF825822BBC5636909AAA8D02854882215464962C7F666AA36692
4F6245C12F0532447682BB8BE9EB3A510F4634160E8FE7C5F728B00152347177C787520B8E7E
08BA726AE8E7A749C92327A609D119A5FF826B0D3CD5A36B6B588ED0ED387871E04E71A7AB1A
6517D142DD34FC9444556236DF1BC97EB42A05D6A167379CB46AD22A6E71E8DFEE2ABA0F8D96
F024369DFB48B5ECD74DE13BC95BAF1E52BB9F78A063E827CB969228087FFE40BE710DAA4B0E
09CE2E0249774B9C3D94614B8926CF8212E104678D06EAC73783BE324F01C88AECD3505A273D
78CFF249B4B1740E78010052202A7F461254A369A9BAA9C4C9BF4C8FE96E449CF78D0DA810DC
FC74E4DE8F68FCEFC93945CF9AEE7C539651C78225D04061EBF55F5822FC9F9A2D12ECDC07B5
4B2A8B0D80A1805584F46CC992CAA2158B6E81CC2F0621C89577E7AB494E1AA44CEA515B341D
CB2E23DE9308C50BC69B27E32F24839655B6E798EE0D01DD056D32CE7E23CC85F7320A52FE2F
56B258F0E8BF627231C28DACACE28CD4C628F93D54E538A89EDEB83A6EAD86EEA395E4C46A6A
D7EB447904DA3ECDF315B894F12C69045EA80D0E0F9BEDB0C222D0795FD7A529D0EAEBD7AFA2
FCA159C8B0810E20878840C9C40AE445E2ED79B6270B0FC6C6A446D0DB4590748610366F07C2
35234F652C2D70F86D820D14BBEEF13F0EA2444BB2694E59F1E6919F48D90E4E0DE324F6EB6D
E58D6023F2BBA895B45CCB2367B0EC140D862788875A7B92B2BDF4384C9F64911326F57D1AFE
AD9784B36F59F574A9D672D216845BDBB40651B0BCBAEDCBAF7CA00F22018CAB853F1060C886
FC0036130C820F35F3F4DA39DF81125FF56CD70D3C15818FB29AB5F142F5B457589B537D550F
E3D3DB040235ABBF34E4FC8E82642F28ABD8CD2AA6A4BFA75506A067302A8B4AD3F6880A76A9
D2D1B22C90C9824A35E93692EBCAC0922F2751BCD5BCDAA6A6FB8E39A1562FC1D2EE8E3A0DE2
18AE8E3E0C10256FD4FB97FCD865D375401C311DB1703F3EB19F14430501B3AA80B232F39191
1AA1C372D309A41412D3D3F8FBB22EDEEF0B2D7E7AA800DB913A632E3303A2BB0E4E5BAC1928
CBD3329173344F26C3EA65C8BF021FA196DD94C077490EE6CB38F6712C1885D00D0DE5FD4529
EA7CB31C6A42A1FEDBD4BE591F6B0657C362BD6E5041ACEBC51B30E35E89D15FBAD461F3DDF2
1E8F23F2C824B747E953DD23669348BB83A8FE53D3B9E45A156F873836EA55F5F181DF772ABC
6289743F087A889420CA64CCD687F60837A0B8F5DFD5F894176687EF80F35E97976FBE76FE19
5784D22D876CD8E3ADB2D67B0161CFD6DF6E0EC61F783E678EA7A2DB389852AA472B341F2705
1CCA7BBA7E6F906376440877DD3C8706BA6215EC376067E4925874B5589F1461CF1E9C79AC81
FC590F4AE9C6B5AEFF3E905B42740B23FD57E69206EC5AD0CD3760D3B213B49FBFA95B1A527F
8BD193A3CAA1A9787BC96C655F2C1C4FCCA36A1A93ACB2ED14160E3A345A761BDF5F93604F9D
25334F42E8888694EB7A0C5E504CBCA8B57B9EAA8D68C18944423A26013CF404AC2E77E5E378
08779D1F40A1878460D07AFA6389D3147982934CB2F25A38C5BE0F09263EABA13AC322233D02
4EE5004922C2D9C709F7171FCBBA03CBAAF8FB208C0ED9971F64BFFE3C56CF13483D8896A1D2
428F66E1D51DFCF1DCC59E739A5B0426305C46B8996E42A24CAA8149790618E97CEFEE72FEAE
A28292E262E9E7E6E6785526460918FC71BDF50ECFD89CC3488C15B24E7BC3542D9B29A32245
0E0A496588BC11B1C3D4E38DD301AAA69044E5FBBAB06B8423EAFCD1C47FE2468563A83C9AF1
F0DB1F648C7ACDBC8D609060D583E2BF8A26FEC208F37ED0A8BE0C071E4C647E2F6ED22B83FF
0F81AF0E03DDE2AC5C2ACE0921392CF680BEB7705BFEA99AAA931160279D0FCA99195CDB1531
A1E7BFEB550FD148178AC5B2E806E2620824B392DFA166E295E75863214CBAD23932D0EEE373
2661F780459D9932AFE74E30625C70F8B3CDB33E1BF61ABDB916DE3606BFC503D6AE3E14965F
8407FD47594A04F86EA7DE85777243CFC0FAA4A44E652DF6A4537FC2522B0A14FA7C30F6D69D
6E87BA7DF0B39447A03CA979EC0C10656C91B8E94CCBDFDB8029E25C26D1E57AFA8E3F0D5C85
DEF6FA524C450560FE6D286AFF5E650CACD51450FD5D7585F1C77A46D5ECFDE6E7D47671EC98
34143054023F5A072A7427F31ACA4E7CE87CEC22579A715C407D9F2E1298000151718E4D3DDC
478E6FFDBA840FDF3392A62CF1F3A6C6E2F5E8D35CD60A5541CBC37467F627C7D089F3E702A9
44F46FDF82849980B028C4C3DAE38380C35BD014EA25F64AB45445EC704370F6ABA4A45C85B2
6BC08B3BC1359100D5D198AFD7B51634BF01060EC75E97356ABCE2059BC3BB847E77F3A47101
BDC517B6FE98E5FAA8082C5D91442EA1073FD4274E5739BF9138A11EC9C4B1C7E4D3DA9CE232
0BF20B4FE9C778804B62C01C2703AAE8542E306E0501CDD62D3525ED62DC43F4A8DE651BBC5E
5C3B6661A83079D448A0B5A8B18120AA51BFED28674B0E54327B52142814BA561D5EF482D79A
C78FD27F82323840A4FCAAA1CCE43107F4D18B40192D2958D613895358651C967FD8B3336292
0F251E4E2F739D0D1C926456FEDAE1C2FD50F495ADC62E0BD68584A1D9BFE965F0A50D45283E
4F03FA8628FD5D86CE3121693B99720064B1CD6037891FC83D1E22767B28F09940B80F108A36
A9837519436FDB86BDB47EBA603BB44694E461176186033644770E03B0583129FB837AFE9EEC
E7A58091F948E73291DE390717155ED31BBF1FDE7FFFB0E0FEB083A261A5338272154FE0630E
3CF3624C53052147612C1381FDB005B6D08085FFD620F086C0AD2FDF35FBC5D621391EF26448
302166ACE138D09698D85B5BFB4510A6B28C3F093892436C67FC661888823B9F978998AC6BF6
B28049AEE2A3B9EC9A04D1BE35B55409E341B744F7D9A24A95C0EF3E7F42DD6BEED003890684
C7ADADE3EB37D65D08689439F38E8169337C3277B67BD901F8BC9FBD6B1C2EB37D4D2CDCCA72
63F451656214B3C93C183D3BB6963313CE70D065293604EB440F39C27F0D82CBB545C2CED00B
CFEA96C6AEF8773E6055C28E55E40BEA3578113FF780F16DB9722D9A6CD441CA45E49D95B25D
6EAA856D871EAA860EEEC1912C383A6E380CE7EC333C84B201B5398BCA763BE49FA9CD0AF5BF
0E0F533D5010F67B4B76C38C41232912DA20DA359D164C5D1716350EC9F6FDA4E12A044950BC
EB1B9F77CF5BC3F21BD02F959A0A3A3D4412FD5E8649C4EA15BA9ABE88776451BE8C2E23C74C
5D56AD51703802A7EF4E05F71210FE107964CF23BEBB44B228E672DDCADFF1A64B38753A6B14
6B28A81C89556F7B0B8BC0B88CA7769F75E9143799499818329137683C0298777E274A81350A
4FB3EF27B024552EE73D97896F92F45812477BA9ABF82B15166F6A83271187EA7C7FC5918997
2C1CAC90D0C144723F5403453E4FF041987C5E2D64C0E6B9F0573B8E0BD0719DDE7A4AE767E0
E844E3053425D60AF9A53466ED02BC905766ADB2EF24EAEC42C77C1113C1915CC99243BD0012
A0C4D933DEBCF3B52E6E5A729916A5A3C33EC25EC39F3630586DE9DE26279AD1BF69A8EBCDA1
6E86986085D54F2894DCA647E888ACA0D984D75C229DD8AE63DA1314263B3017B79062EDC5AA
B4C6D3C688794ED5F379E2C9DBE6E85D905602879F70D5E1865E9E0F41E86F2D4EEB9934F540
BAE3E9A8863C56105162E7C35A93E0E01E593929EA5A05B0A392A6931F1C24E3DD811E2760D0
5E1233B8E3E9DBCCB4788D5511563F23F5EBB51B9EF05F83EA2A12CB56B7662BCAE1D2818446
30366A23F10E01FEDCD48FF3A71376CAF6DA9E5D40F96B2CB651F8BB68FA2D0A336319D781FC
E0AC14D1C5CA1FEE8EE8B1BD04BBA16B63588885B3D94639513D54B2FE0662D2CE7E023346E5
383340B74144841FB55CF07F6A8A691C88575E2D0F4C6D969EFDF21006EC67FC38590B26B313
6946589767FFFD6A699F7B744F77EBA5D00891AAD570A67332647DF4D5164880680CBD4C1DB4
C938059E90609969F7B61B467DE99584054584DF8C90BEE16D7B2A2C2D02E68F3BA93EF48AEE
962C0E7428EE243CE7FA1E9A20208104F2B8776940B51EE1DBF801CDAB652D68A9863A9D6CFD
24B6CE9C80A24BE8E4466DD92FCB0D2CE3EA9857044CCDF47C9322FCEC0A7D4CECE8FD921298
2FB6E1E8D9EFB7CE0F93EE0555E0BB725B3177D136B6A5105E8D9F995348206D48D9946F53DD
D4F8BAC911A3ADF8D515F5649261D036ED0ED43E2720F2849E4CE81309D9E95B0B9C880FE15E
C56724143F320B144F3797EDE29D3FBA0F3EFB29EAD6E5CE8636C7048D2F93B32596A654AC46
738D06C04A860C05765E65420E518A8B2BA2637BF8AB34D6EBBAEBD23518D49C7743CA206D7F
4B7CE7389C563D95EC877CDB62B0E98265BC5F1F93EB22124D7A991557C70A07DEF1EE32E68A
939B367F550F0E79A5CC21229594EA28EBDC82A10BC09611112FE3FB52461B82CB79BD8B74D2
BCCEB18A4B0557CAF36574CD669B124A8333287043C4D671CD24B8B0E4BB423F250AFAE39233
E24F8400685B7BCFAA8782C30F4FBCD501BFDCE32B3C5FE159958CEC728D77B345080031ADE3
BD2C9A965F3AE26E52B8C702555A0C99AFDBDEDEB41F719B780E77906EF27A21093E8D5F9C83
3A683B9DD2DC470D0A29DDCE4C0912B308F9648A7B4D05F3AB9FE13CDE1F1FD08498AC8AC764
37287F0E9753C61704A2ACE398183BC5B9F354042E45562DBB9797A5537A497A38CAB1C6E9F8
45E4D0F202E66EC4DB05C66BAF27D3433BD3A76B51CFBCA7211F0E88F4119688161F1DAA3F5B
0FE19628A97DE6A4F3A7084D573CF533D029CF6DF5C0E9FF412C1AA7C5409D49EBD923213DDB
FBE56957E04F1134458A1ADA73051D407818D55CF5F9C6C96FB69B3737E2912513AC5E94569B
AF365C982E706B9336FA6BDDD132A6F6F3BB4CC46C1C1F43D1A8E2A2CE47E95586CDD26C864A
EF7F035CF119E81FD2948A66903B18D26823CC74D0A0AA35A332EEF2AD20525A284D9F44F6B9
3F8A9DAAD3CA43F020CDD3CBDA36136DD6FD093F40521489FCA2D8D6ED0C46E6277533C49218
B5C264AF286663B2E179AD18661F73F20F55E5F522179962DC196FA9834045C86C761211CCF1
2586D9F04FF1B4DA31018D13FB4D3DB28F1E862DAE83D43B4FF480C408E3FB2C081373A94FB9
05140C5FF6F40C69C8236594A45CE8F929BFE22977A26791EA1963CB3B8E1C896CCB48EF86E0
6B15412CBFB61425E639C1A9CD8AF7CE751F4ED17AF8E811982D02E0C31BF221645E9E273384
DCD6CE75C43CE060D16043FAE14E6232D2FF8EDA67A92B90A9B4E81CB63E2C2857C5DEBFCD52
3ACFE4C57B59789D47F04F26D0C8EA6E4BE480DFE37C00258B7B1C18CDA84BC23881B971F614
9405B1767AB3A8C8EB2995C765E3D3C81A85E1260C56F813531ADF9262065D61B8DC7865FA8B
E2FE32FA5191138A6E2FBA743DC95C8B91F540F8806A70615E96227134C3625A52220713C6D4
897A4E586EF0362E385DD0A8EDA4F22A6095EFC300DFB194FB9986E70F2FB573E857051BE415
FB4FC61B708A94578FE1915DE0EFC1E35F115DB64702A81A0F6A367CD805776A23D1FF9BC1B1
29C813B72268365128A38873986926EE89944E760E1AD4DA8FC21F90A42B08A060A9A633F568
D5B7C696B13F13B9A4F19C373596C29C16BEC2D27132229234E10573D6AD86B7AAFDFD3E0201
19E7BE79EAEF03AE57542059B6F06CA09C5B69C79E0F630E8B1C4FC39EE509C81626C6F07F66
6512BA746FB2B6F334DF7CE7EC5B0BD1070F2CF5E4FCF8370A38E142AAD58B0AF4A2C8F2AB4C
618767C9D196F6FB10D28558B32DDCD6A2DCB5D72D6D48A19B4527DD1E904A122E72FD0FC4AB
60F53EDEAF9342277C3171BD6AD9A04B68993134C12578F73569E3F01A7F2ECC17A4A3381E2E
48BA8C33E4CBF1DEFA169466FE10512FCCEA0ADC772AE369FB3DDFF0CE15BA05738BE2E15786
D38A2A76B3B9B7F2647B3A108EA6246B47C6A75560C737E1EA0488FAF4925B8265214DE86FBB
F15916D1ED6B0F68030FF9F0D7ADB82CCB1836787E6CCDB45EBD46ECC9328876871469148456
ACCE89DA82D800110795420320607240850EB4D5CAB9F757671B101453B030F8081312CFFC3C
526B0F298206F160407E8B360267054115CA5BD6AAD4C562E66EB0CFA778B7954388788F5FD3
AB72D2F01DE7EC1C14ACC3953290A3A0950D00F6875DEAA92068713518980E656775CA8F079E
97DFCDECD02AB3D886D27046C84C806B0555B44C90BF66DDB7E8E63493FE974C630F4998803B
7C0BAC0869FE3C73252204E639E3B76A28306EB1C400AD787EABE3BACF8B7868F95DAD4DB10E
D6E93B20802818809BA922DCA0CD16ADD8F5F34EF91FF43560323D78A4CBFBF7BE4BDF683BF0
D8907C5F0CE11F8AE82B764BC3E56A97204B8367B87086FC58DCEB2B3707CD5D36F878D182DD
0BDF296709E961CABE81FA01A0DDBBD884195B9D928548D2849734E5F9DDFB592426CBF1AE92
72AF52F5826836B74EDC379A7D392D80BAF90D29B5E652ED96F7F6C79F2537588B3B244CD951
CC1BCBF7FF03D8CA7E64F7DC528E497493713405CF1C357CC9B0AB80E35A3E497388C041EF24
86777FD8E621CB093875A4A084650144B735FB658282520BF90E76E6F7AB3DC7957B860FD2D4
7B12988F8181EE31D79E404A306CD204236D50F91FEEB12F7B2215571AEDDD32E0B2A846BA3A
C5B28DE44383CF3DAD94AAEDE95213C80F1DF50D7AE435EC4FBABD66BE8CAD3828D5CC074C47
53955F8510F2DDD7646A039B1382E10CEC30D089ABEBBF210FBB53ED91F0ED7A97BBECBAF7BE
CBBBDBAB965D711FB60D34703E7838C860F004DC33D798A74AA8E332368723519A376E334084
2155777EA225B4A4B54DF852EA47F29111E6965ABBCEDB0C59B5F14F96240017B85D3B7FCBBD
43FB2250C48A0024449AF753A6F94B62D766B257DB2E9D3C82291713C52E2693BBAC64117005
B76D69F27F1CDAC3F98F6370DEBB8502609A163D969C6842038064F955C6F90995E1898E7B12
B7EC477A29F78BE54CB9D7CEA4BF7E93C219B5DF6C6739D03304E2CCD45F5AA81A6200D1BB15
EAC25C766630A1485932292E7000C87E960C7D6DDBAEB643725301FE9CE7EBEE0ADEE6D79DCC
0D66460D5E69838D63B9EA12DD81D336572232EB422CFDAB189DDBC61DE9C576000FD25D182C
8AC6FC9A794C29C139B081054855F74CCE2BF549F12528D9447E516F52441035856AD906C2ED
0893BE4C3CD8B5ED8B7D9FED05A3F7F1B9F67E4BCB49BD8A345992AF992270D65626BD49F337
8AC283E881057C5B7117CD35C2273A6F7369C96BB2B742953E261C64CDCC0560A1434F4DB691
858601DC7BD7A82FD742C3ABB187AF4DD77B0FE45141C4A8D74B83687E16D79637B606B07CB1
6299D7E51BC8CBBD91F1299CDDF6C4238A71C1F351AD6286FF31341044636FC0BDCCF863804F
155628A95D8EE1617C1AEECBD3F8558DDCEB41D46571C167B1FE8246E41175703E9402E4B49E
423EEA926C4D2CCDE9F050FCE108825E7527EFD24EE8D6C7FFB35072C61B0F1FD9E1D5CCB223
C725D8689949F5D5E1A658B7FF2C6AEDAE1A28261E4AE1B0B008F49848537AD295F6C644E8A8
D82D840C5F8148DB5A287661882F79999D0D5FB2D1433A80081E8671E4EA99EF342B7E1AB66E
8385E08CDFF034A5DDAB32093D3D99B3F2B0E20126E2DD0EFBF7E647D2C6400104F95DE0E89A
891B188BC65A83B36B91E21C53EED4E4FF1F96E2B539E6B5773705881C271033B4766F66381A
B16DF8E0C17D57133C2CF32526DA8A28A5D6D3A960293D8E221D9D5683003E4D989F432FE77B
BA1F3683B6316F4D03AB746B3E6A119B0ECE4C3DAC50A6991821161422A8249961EEA3A7EB71
1169FF1E5C3EC79A6FC10213BB75E202702429EA76575E871E73DB30C57F1BBD9CE0C23276CF
152001B8C8E4750FF00D4126AF724919F10BA8F70F56AFCCBA63A0B36E720A11A32A694676E6
224185C0EB28E9A8DB07514A87EB6374E7C6C9D4ACD5DF290985DDA1EC5925D9EE411493AD0B
C5B2F1991124C417818E7F17930A77D590A40360796D041B53526CA0B0D47E1FE023A43BA386
1176A0144EC3D1D82B581D8D08C89ED697FC7C155E6D3D258D8456A1B5DD86213E3F210E5A8C
428E26B7D3C962A4FACC0F38BCA76D9DC53FF3ADE138678404688ADAEB3B3182E4A53153E122
E9EC7C92F8D8DD00D279E76398A21F001DAB1708F1E935B9C36EA01FCF5B76651FA0E04B9E92
84A7EFDD62488D9BF2EA1BF14FB9E770167EE37DA7A1306F07B6EFA289CA9E1DC814AA773531
AECB858AA185DFE73BA8B5CCA39F1D1B4CE8E336059181C014FDEFFD3595EB6EFC5BF9E5F74C
11D796775243E6422532271CF2C5AF49CB239124BC6D4E0BF063449A3883572DC94F577053E9
C34AF8D598A68456E86E6F854570A22C4F0569783C5750B95B4FB298463CF7F55A6994ECD125
CC42AE3B113934825388AC5C641C868884D8E0252586EA3D5A4C993290AE8C062AD587F6E16E
34EAF20655BB4620D51D896AC2B9C6CA8A789F8A1E5D1022D382CE70A2ECB42DCDC2F9832912
0AFAF6B0CFCE84F329107037F8B4F2C29EAE05E5F95A1E324B08CD4F47EA8A20E89AF2646BBB
02C6D4957A835F0DCE8496D1B688B5104AAE163A0F51C83A812819474C76FF2E9D726BC69FBA
1BCB1C87D77F53B0E5EDAB5629D0D26AE41FF8DAF17D45D9824F5D313C69F7D09C988E1366C2
8907E5A3BCB0E6353CDD691D4A47061FCF0E7C4AAA1C465A2B690ABA601F35181B699002F94B
466F0D78C1DC5CBCC1FA3E5B3DDF0C9BFBAE618324C43D9352A35F47B88050C01786BF58D9CD
FFDD350A7E0CD0273F327272DA0C86DF1DDBFB07226C68496EAB987FF911CEE9D8290B18906C
E6C8CB1867664B6C3AC2536A304D3C62D2CBD836767FF1EB97FF16F6C8C3464C225BDE8D7332
CC11C9E9D4418CF8EB1572DF082388779241395F8489C3AC1ABB7949F81088FCCE073318BF78
B82A9B2E33A9E31468EFC5CE61C70C3023FFE62B3DBBFEE4167DF62A4E05D59A3F8FE61C66FA
9FE31AF96071AA0BB3172C24F7A4EDB57F388270C024D4E8FD6F8BD32551B650DCA2F0E16417
8426AF7E6647987F0F1B85519CA8F1CF14BFFDD020C9C49468E62A7D6A49FC623936088BA8F3
0C324C9BFE7678E661D0F3C94C1A9C8811A2819BAA8AF4C844CB3BF8D10F485D9108AF03CB25
19A16246661C561AFCE3DE884DC04F83686A465DADF7ED68F363C6776F06A16F4868A55C217C
35E936256218E19615CA317372060AACB11F576B6839EB191C9BCD4342143201B3A5A8ECAA21
BB09DDC4B4287014D4EB4C081BFA7FDC85815A486803EC0BC82F472D02D8D84EA92C557D9653
AC97DC1744A8BC6AD3E45DC9A2C2B299D667BA3102B50A5C64566078FBB6FEC17ABDCE410024
7382EE360085BB459D5CE5C242C17F17E9F061430FB1425AA325867A07B83B13FBC78DD3D751
010A6F6149EB8476FC07714AF75292A16667E0EE84ADB5D8F2978F16ECCEF737A7CECBA18CB8
E189DAD694CD034FC598A957AD120404D3C68CEC49D1DD56D5A20AEDB3FA1DCEFFB584300BE8
9ACB2BEB4E6F213B37E8F46E3B108D71F7ED6E8F09FFAAD3045394D403CAC55091988D1E01D3
6033434EA3F50313CDAE49AD76927D48AE866FDED975424ABEC206B67C40585160EC5D8FFC65
8215497374C39C1DB12AB4B49C5F47DE5F82F8FDBAAD05732906E22A9A295D4D733C1A311EAB
8854E5EA6582333F04569FD380841EABA29201DEF4BEA072CBCB7A3996464C12695494D8482C
F929BF45CCA13C3DE03EE61C774D39E147BE198BB7CD8E2BB0B093F05BFFFE37367661D1CC3C
DB95AB55D4758C74001A6AA261A2550AC4D71F12C61005AE43774CD83E470D3E3CD2E24F0FA3
9ECBCB5219758543D48D7C07DAF872CB5F089BFFAB44E96D181C47228FE147BF8986C26063DF
36E09CD6E68824E1637B7504FE9CEACA6B2726261A19180FD4E59D2B95BA98396C4B028E7BDD
F0D224E2211D4024C93A2680025317B6A12945C513071B6DBFA78E988280A2FFF5A499B6D049
76032F0B9D8C3968ED153CDE93FCF22512577F7555539DF7EDBB95E2D25C905B90042829E257
A3508A45B0EBDD25EF5B06DD59413F4D257996B7DF01B192B5BD261DC516284EA4DA6CB2AC5B
FCCEB28F30CA9FA22208DE29DCE7F9A79257EC609939F5484BF70E6AC3B2AE18F736E1D48A3A
FF584398C5BAB2DD04B1A7097DD790BA01089EC124B42B6A42AF331ACFA4538E9818C2C8A88B
268D3EBE788C5C0350BAB8D4D45206B3DE877492B96A16F43683784CE90352C6770D6691469C
5A07B045D23EDE33FD5C5ABE980B75D25564589209FC9AA485A42525DB0BCBC00460446F9EC8
F60790E761155728E0EFBABD3CA57154F17042AAED67E4B8BFFE290A922B634BE5E00530EFF6
124F7DCF7505CEBB1F36234788CB73E4B343AD74B01986DF92F536A9A5A2C9B67C2F97F67C70
0798B7876E08B1AFB0E374E7838CF896B5F6EDA53BB728F598F0421E15C323B0214900E441AF
F52F76063F53EAD6A2FCF112DBC44688439DBDD15B1607D70AD5C7D6C29ED43FCE31E908FA01
296006B995700CE0F4B06484856E17ACAE4F57938B1A57AAA44115E3D3C477F00156DEDD714B
1F7FC913B79FD6FF553A29B7504A3029F73CC9A7912D7BC346C6C64AB73A33FC4EDEAAD832E8
26E27063FBEF6078423A6B2F5391E3ECCE56EC7CF4AFCD9A4D43C3A7227B90AB14199CBAD110
500DBAF62A016630B249F55DD7A563CBF83D335DAD9C45BA8AA5483CFC8860C431619EFF5D89
82D3A69AAD79E514D9E406DB0C68E0CCB9433545872E344051748B1033236FFB07105AE5BEC1
2528FE0DBD6FEF89BE9F3B99E953280A6273DAC879CE95A3F5A4F46C3754F832176BADFFDF50
A189EEC0332E1CC3CF87F03403BC58FF00FB9CB23E9FE7CD2E896D9F9DBDB0A5CF78A2D948F5
92B17BE8FF43485FE1B5E2ABC88CCAA97129B23324E6B3C7CF0EC692E49A02D4B4B7E8797E8F
8297661592787DEBF5A0698001001D99E071986935CB4C20A6B1E2BF8359BA9F3C099877263F
4DD3E82840682AD641DEF2AC626F06B9D5F1FD1AD6C26DD26AFC83127911CAC1DD6F93E2CA57
2D73946C90088A9D2E5431C06D2C1CEE8CFD8E2CC3310FEEF15583D71C66C1ACFB91C21A0944
69CB474D1B2C1A78927F7DBFAE5140F28BBE006227B4337268E5A9EC2B2857AC7B1751C4C1F2
7EC3AC3D289AC92B7ED5822F0A3BA7D90FF6C8DB70B896CB31C9AC03376EF75182D6673A733E
2FF57ADA889FD30FF84CE2F42817FCB98804F70C57CBC5522D4FE37CA1229401BF634D8FFFBE
0D0921FFF3F066AE4D2FBE874E6C4244EDB50D0DCC0C40ECCB1F203F74EACC3348C237C22402
36A3CF8F8C6478A7630D8369650B3051816D4519ED00AA7347E630CA27270EA815DE07C8C6C8
F34A82390A7B77CA16400095E517ABEAA77A9EAD684403DEE66F983BDCCFA5DEBD9A83505D61
AEA65E4BECF0824B0D2BFF9F0550BF186E08C17E9984EC61BCF39724E5A7F3E2E315B4689A8D
FBC56459627388027A0B6CE7CB6A7D161AC0515E829E990C8631F3CE1DE2D453580543D4334A
53BD2858D16A058A6554E5D489C8BAF89CC5D976ADFE0ED57DC24CEC1BD7E5B1726540C0F614
E59B395D1D9896AC6B11B40F4A403BE7C928A47F2B43F345D7CB0F413F2529E471E0393DF485
1CDA7637D4296F252634B0B8BFF1D9B1EFAC1F29FF098A138C30EA764FDB45C98B477CD9F718
ABE6A8A24888848BE4B44937322224DB9C88ABEA562344C99E05E9EBF856C46BE732ED599E25
2D4E77109106AEBD6226F295CADFF1475D4F9AE040220D433AD74810D2EED75A7B32584D10E7
3BB9E95CB2BDF2E3D85D3325A55EC47BE6FC6564895B2EDE95577572B0804647391DF5C4BFE8
E38711C83256EB4EF6BAB5852B8BB03BEB0CAEA0D17FFD370FCBF53C18F7D9EDB546365FFF59
39D2D1DA3F7616106AE7A2117932DD42989B24E668AA21EDE0C202711B390D5023C8B1F95691
462F71D27137B7D63FADB8588B73899336CFBB372EB2EE6CCD3C28165A9563A3B3009F375CDF
9E3AB755D7BCAADB825551B88C2650776841816E6B7F19CF7BE73BBA6C71F4E0D6F26684660D
8E1110B9F304DBCC5BC75C2A97F885C0E871D8266D33E4FFB820228B2EA41DCB93B7052FF604
FAA9A579B18DA1969E4F7B17BAC214603CA759F74481A9B9187DF2BD6F9FB2A083AAD7A163F7
00FC012216BB1C57FEE490FED85E129D800C8C191534E7443F2EAE0704101471B249EB314169
8192EDAEA80873166CE0166E84222A805E0A74A5356FFE5CE39401DA3623CF12BAFE94024439
FE6FDBB7A3E8B6A44BD51439EC6C6C9B862E8B1147CD575B4086DE44054FFD3B1CD3F9C66D91
BD2453991A0CCC83C2C70CB9D7EC8D813630CEF871C4F002D73DAF520896E72CB75A2C229B1C
42DB38690C89BBC3BF87A177A6D4B9BE78FA1947626ECE0F4B82FE5EC1CAFC3C4519C35A0A37
3D32249C4BE14B2DB40EDC05049075C24B3E1A3B1958060A20EAE2D0E54E6EB9E723EA2D430D
3D8BA4872738929171F1E2C7B7687E71C1DBDF943DA36F6F13E5131E4E9D85F482C9C7F3EAAB
DCEE7EEB18A15FD5F271113FC012BACDB22E26D1F1CC2431216FE374B21F503DA895AE1A52AD
192B3CDCF97B59325304A29240A0BC81B727E58348F0DF141DC57C144A24D0912C010EA1AF7A
3727C6E0BDBBFFA05BDD95E4AACE27DE47D4B7C0C4824C1D39EB41BDEED7843BAA753268A939
0CE20BE8DB262A894CA7E6614D10400C6FE195490EC9F1939742CA864CEE79380521865CAFEB
9E9EB0022A2EC915856B303F88B5DB46ECECA18275387D25863514A342F95CD17D3598A0685A
E4F6856BA7458AAAD3CB54DB8F6A0C0ED86B27402FB3D29D0CEB630F1D66AA202C6A2BBC9E6A
F3073F3C0030441C7F5C3240A1A721C9929C12239F59A6E315534AF2D59E39794360DE399701
3955E35245AC812FBBC7A9A0957010C0B10C8A6C5E9D1980A7B6A5AF04C7361ADA29833D18FA
E2DFDF2225BF6AD37A4FE82F430A5888E870ABE82E1BF23A24FFA178FE974C1C5246D7610675
25337F281DF0FA78A56F587C4C6B8E14B2FF37F15BEDD9EB892ECDA6FAE1DCF103B31AA8304C
13CB2AA361D451396BBC41818F39B7FACCC93662364CC4AB73CC52EF6FD5AF2FA58130C56225
29F97751B1EA816359C9C40B1BDEB505BF174531B0EAE0A70CBE467374BDA4223FCD1155FA33
10E52B775E59EB88561093B2DEC40542CDA872877AAD5D4912B5EAC5E91363C40E0E47AEFCA7
7B5A77F2F10F08F00C4D77A9E831EF2483AEC150B080EA66C5BBCE96F849F377D3C5DBFD1CFC
5128D39D2132932B950A0EDBEBDBB00C7288A7590BEE99CB8BB2377FE3FB3A8684A3FAA41534
F18F11926B08947D7DEA51B30660A1E5009D6886DD77789A76939A2A4C2EEB74877343D4169E
8E8B08D92EB7B72BAE00B7906E7631B822FF4480D14AFC35B210116968D1F2336020CE581DDB
C0155DE9ABFD91B10D4756B4FE01DCC780A6E279B8BADAF7E1ACEFB121FC9DB84154AEC6E780
A83956A24C488AA7FB12B2ECB311EC582402C07A13508D972A067073D0068D792715F36D6741
DFC21DEB75999A4B7D19A2D8DB629140DA85C3DA3840597F28AF0118B908E5EAA5F1AE9A8D09
F82A3A23B4ACA642EBA5D39ABFF3A5C0450035BA1A239C83D4E28CF4A533B324B983AC2A4A1A
7CA87ACD0A71AB8AD0AA6FCECB639C9F748CCF4746ACEE6873117E712D0EAE7E59853896764D
D360352F80F7CB51B7374D44B0F220C99901BF0E67C884DDCD9F6A7E599455227C01CFB6B170
A1B4A27EE9C02307B1F4214B52902E9A9771A9FB4AE043B9A0F6DE7BC17458DF1D43FCCE5105
E9F83433A55D8C8C4F8C1461EF3374C3E167AF1850B7919EA1DA5D2AB55A230E78E5ABB61F7D
9767E2A7A6E8340DD07ACCAF1A8F05AFE10EBE5D5325F69B9C55557F0BD80CDB377CDA85E122
468BFA8E08B494468CD44BDACE20CC2804C687A574C04C50BEEA3F8A30D7ECB2738A8F847D3E
07F23F94DC211CB2CB943DC045C8AAF31ABB68C0254F1D7452ACB8D6A926332183582C7AF8BD
142D905AF4471B115B3FA739998207ADC8350F69C8E43F365957442B642E811CE9D244125189
83678C9E41FAD80D1E5205841731BD7101E2CF1C990C98F50C79AA7F518CE5A47987C40544D1
764B3293CC5703652778AF80A12E0DD3AFB1337E9937E04ED716236F63EBFC3F00A55D69E077
35CD16D3AEE7B9A766A0B84FC598545BDFB9E5287E808FA61A8B710C29D154DBF69E8864C6B6
CAAF3AE64EA17E8B773836E3085B890BA40F5BC2D77A2E45389BBA42BD268CC1BFD7397ABFA8
BA434E28D3957AD939D0AD9115017B304463A751BFAD63371D56ECBF0FCC429B4CDE7AFAC0ED
E0DCF4D825DF59542F882254D4FDE8B4FA89462E9B3D609287923823DBA60320BAF15F2E3697
18205E67C343A63FCABA2FAFA2D800065F6E156C4A311A0C52ED0041C47E3DD31EED949BA919
5D5121B7333D7BD7C2258CA93F5110B2759094379894D204A8A842AAD011DE9778ED0012DCC7
545F54BA72559D168CC75C686535306F4558AA2420048F67CC33A15A24A86D94CE3F2D7674EA
499865A3D470DDAFE45B21A1AB42D9F4FBED96AE996E53764F067F010B3B969874BBA867ABFB
821FFC22E824B53D2C19398E9E8C9D1F332944F47894F591F12666A8ED99A2D11E3A3468D85F
823D8CF7E467D03B9E5FAF112D15D0A90024CF400CB7F764F2794D41CA22402B46C62FDCF720
82398AD677D5E9C3B8ACD109BDEFE65C9BFB8FA172D28E2B14756BD4842072F1BE2031DD34F5
C5E699FD87196B05C4A63D09CCADA3EFAA7F7BBD1782E65D015DCA6DE19257CC12202C92246A
FCC8C980342C76F91F939E67E9B90718E164AC2BFAA595F45494B75528723ADC0CBE89DCAE1E
6D1FD352221EC1CF6A6BE3BDF11205B3573218DB61F8FEA01BC77991544738C9295BCACA058C
DC9120009DDF70520C5DCCE98DC2940F23EF1957C838B7B0F7BE3437FF21F9EB0F7A8B140847
EE5C1EE7778E1EC77A60F5B0AB3269EFD7306AB0F23E0F000E09FC2D41E6ECC064527C1CDD83
A6FEA566E47B996AA70E5D44C2C98983C5848F72DB6A6FB6A85D3C398A1B8626A9F790D4AC39
531D31EBB6423AE8392C338D03694CFDDADFCE5CF570D1C2852A23249CBBA22410D949F15DB6
61146830CD25DB1EE0E4BBFE65CB4868B1BD3AC5170FEC25D64B27CA502D0A1782DEDE3893DF
52BFE8E65DE81F8B5D0B7ECEC922AD6CC92169C9318B68F0393E336765265533FD904AEC8703
1C8AA90E29F8F26941D417C3D0EB03DE3E4BD74C1CA889A8CFD3D9E824AB29868BC365A6F03D
50E50616197D4D3B5C1E7E194B926263DB5DDE22107372FF58F68BDBF5B1358BBB3DEEA99CD5
0D54447C5EEB9D756AF983A32AF90059A913D43498BC65FEF4174EF5FED63D28A1C18BDFAB95
67C73A0485CB557893508A4040E1DA6DEB238A87FDC4E4926BACB535B2F2FA4DD68B701774A7
583832E4AD89B01FDC5F46036ECC75BAC079D06A104C2AC8671E0BCEE877DEC0C647DB6F2D3E
147902D6720E8A979B29BC4E93CD319601EC7CA51BF9C8C1CE7F12032297A053460AE9E1EDD3
39522DB682E660AD30AF6B3B51EF91D58CD721563F0BDBC6FE7BC8127F142339F566E1BFF0D8
DE911145EEF12C22FA3DEFF6A919B6C187E3CF39342C790F0F35D0BA0F6C370CC8A2A82A1DF8
731DFB05F376A977AF454C651054DAADB79F1D5339774D00BC0E228F144616D58E5E90A08422
A385956247B291CF779F258497EAA689D8C35A4FA5EA9A6F9AED50C8125CD14BA5307466E153
BC256788303FD1111D72E5CE1A373AA271F2A75A155AAACB21FB5003B6C5689112C8A50FF61B
2A42101F09231BE10603CBDBCCC7AB123A0C52A9CD824E1085FBA0EDCC3A15A15DD341B449BA
ABADC3963013BB88EF442EF8971CFAD9BD03895DF78B7143981704E805DE85B56F95B678993F
A94BB7CAC4B73DBBC2DF54C4584ACEF83ABA23A54E06C898CA265B19FE14CCBDE6C72F0FFEBF
24D2A2A9FCC962D0648617EB45EEAFDA4044A03B518D00F22AB8088DF17BD14A4D9F0E6DF072
6F475AAA22831F8B1A498481A264C6F1C060C5A83B60BE6C7E0E3678E973ABF7FF1268DEFC9C
011475644640F1B51ABEDBFA676B1B2DC2253B01B6CC10929BA22A49E72D2B897BFDE9FB12ED
4F0A77ADE8E331A891F032160D96546BEC32B497BD2168F6EB5E40C1D709B7CFCD8F6344A4E4
F9E5FA2905FB26D9CA836993F2BCF8BBCA62EE3D7656665D7BE889B4E26B1FA16A05BBC604E4
CE9BE3A5CAAE3233013911F45E54338CDCBF677FD757BFB2A1BB32DD935793AB206D9C8E4667
6E95EF0EC1ECAFCF04FAF3A9750D4526907FA6C303B798258A6E052CC55D393BF73D386E9C47
D64B082623E4A34320587F2474E9FE5571513BE925DFE88E34ECAF5F6E49003CA83457347938
9D1D11AE7EE0A291A2C8134AE4BB0FCC61461A532B039EBEF05A385A4FA94DFDFB3F2FC1E021
0B625FB3CADD180ACE647870773B452215D02F0DD0DF29D876797E3D117A40EDED8ABC7BEBA3
2DAA35AF811ABB7109C6DDBC70B861ADBCE33809A13476FAB08450363BBFF6FECE09B4A3F391
3BF5FAD9C65FC81D90CDAEB07D15A7BB6746ED6A0DC34FE67167378F6543C9C42989A6B42237
CB6FB1B806DF38F904D6CD209149AEBE1E3810D628D0BCAA9130DE99D1CAA69BAA721FD42F00
1F06ED4C593FD7271BEE90B56AE96C92827DE677706B4606E8752194B854A1A5EF48BAEB9282
A1122346626D14B5FB1D10DEE6F00F51735C976EC0975B8D5B740986A9667EFE800A06BF42F1
E6C91E3588CD5AE6CC30DF83ACE7BCB22F06C3B4C3E396FF4FABCE38DB55612FEC157E4C374E
FBFF9C42073D18983E7276101D7CAAADA1F185DCFAA1311E6632BECF07289A4611876EA0C67E
55D82DE70737413956FE36B1AE228F0439CA6035C9BE3ECC90EAD9DAB5F01A51A1115C59AC20
F5DE0B87DC5DEAF638C0B2402D2133AE9350B365AB274D0F5342DD838CEE7D08EE6FB7578A1C
20BB0ADB96B8E2930AEE816352431F420D60D93E2CFFFF058F4E1B87E4A39DDEE0C50D44A278
34859458A02E69CB7BBE94E565EBE72F44DD580E558C71D81173C5AB8AC1170DDDAAAF360FA6
51E683BA731B5B86F9C42E4609849738EDC0CF259868DFB3DE2140D4816B50CF7E4E7313FBD1
AA138CD6DB1708D0941778A1F52572EE736DC970933017FD9E461046CD60D946E1C9F8D7EB52
3ECDA5DAC98BA26E7911F8969F9F161E42B07E794854738124D77BDC5D37584CBE5C204C0A57
E06AC77C853BD52FD4305F583D4D2D62A98844DD4E7285D3796E453A952D30FD004C80E145D8
9A885EE8CE2653FC85E15A649B908183D7AF95643AC980AF8B2D89D1B8C8309E67E1DC2537EF
128621472006C4804B160DDE366F2DE2755A018FB51C38BAC483AD09BFE70FD989CABCCBC5F6
2FD558F5B73498867D8A0ADA60DA5B570F2A0D7166396E881CC5DB56CC1D6C0A742AF634DD29
915E8A85AE10F8514D5C6326F22521E031C26EB4A93F69216FB340925A9DD17DFE9BEE2BC2E6
6601E74610238C01A8C057D1DBF7B02CF2B7961C260C49AE68277E8600F6F7996DD8564A3879
427B755EE29148DFF3FAB2C928795DF450CD1D75885D773B78E96FA6897210B40DBC701822B3
C66EA8ADA94BA9A86B3DD87BD317816D80C7079A29D5C6F3899391B24AF42286CFCFC6EE5666
583729A562B690AD39A78275ADE6AD6CD4823F1C2F9CCEB782347DFE439CE558AA27FC0AB860
E89ECA381FE262F1DA5693D72E109DEA8987A8E13F667E148E01BD409C704217DCB03D7B00D9
E9A1119215FB6E3CA9700B42ECC4AE383E2356F43A7CC29CC6D1A58D941CBF81033A4A4EF72E
EC6B6EBC2DF18586E68E5643390EF92C0CB699808EA5CF743822569B4247FA399829A7CD9CCF
E07E3B4D52919E83CB529AC3F11A162A48903C1690B40E58DBD62CC4EA386BB991BB6E6B1891
54A115568D372B33591656AC851BCCB22261620CD405BA21CB31FBEA148C0EBF596FCBA79DC2
3F3295505B1F8768FB56B3F2A8D6E481371C9B8ECEF11635DFE9B7FB67E30FA14D9B3E3FE26D
975C5FCD75FE9836FCDA7E5D09F6A454B1C92649D03CAD1E9BD43C7EF66B963EDD23C2AFB5DC
1DC02A97818BE7BF1CBC8F6FEA495D8B48A7FDB07E9DBB2965B2F3196A5A0FBF06C64660FF78
62337BB4A2623C06D7D6F52EC1A9FA4B0DE0516218CA4074BBA7094E7DA13104633A1CA711DC
2318A8F9E9DBF4F47FD4A476EF701DAA74B2F56592D08C1719A3227FB7EFA4BCFC30845E0362
BB060B4AD76D39E0AA6F140E08F9EC513F60F3CC500088C5436D8F450DF6E5AE43D96BF5E658
2FAFC6EBB6C3B1D0BB383DBFFD7E449C13F11CFEB31539C22DBED96132E90EE200EFCD4E8AD5
E9FB85FA30FCF886DB04057C553E819FD1DFE1FA7C0757ED189DABD943F91A9770D097F69473
BDB34854C18BF4B71113F2AF1824AFE9D2BDB7D4DBDA4FC3EA6672EAA102483AA6AFF4D5A34A
61ACBFA6241F7266A3CB5566A4E9AAE8FB43D84299D33673CDF5FB04D8F63113CD89E8324F5E
DA1E8B47E7B8DA5284A6FEF8855AC274E4DA8FBBC0D2A3A82F8475048E669C913D4846D4FB13
15B2EDCA68F8705B0B9E95C5AD2B89DBAF485A128DD85A7CCAB5840DCB40C3B6CD978F98DCB1
E3A63D23D8DF87B6408DCDDB4D382F584A2DCBCB0C69718A32463A136B4AA3B951D4EC5E7168
50B5F0140DDADC80EA5F0E88652AEE93CC58140F87031BC3A2CEAC525E9334EDB656B95AC3F5
64AEC382584C64F0E7A320F33DB32EC077F326F1F25FE702B271BA8C8EAD42C6E1C03908ED79
F3669873673B041FE02B706B42CAA2802851F56BAB49AC71DD9A22FE26AFE940E1160C0BE3FE
DA827FE39ACCED64B6B3C086BB7AB4E31BD830D8C60CB41FD0FE2E439795FEAB3A4556BBC518
3D392CAA5231E3A41E445D8E5B4FF089C7B53B5AA6BD8D2FF8EEE81EEE1F21468B9BC61CA01F
3F81C4A92161DEA97FBAEC3488E3EDDDA0FC0EC2E651B6E75245B4ED2A91FFEDF4675A7E90F4
3405DBC1DE71FE02DBE5E2756E65382582FD96B59278ABA4ACB11ED8F48E2F307588BC1D350F
D74177989B8A4E33ED8CE8EC9D5F5EE841083A91598B23E3CC84B5A64FD21CA5575BADF4A7B4
B72AA1514E3ABD8D3060F1E585FE88B8B4AB0E102A3F680B43FA4E1528C87FE1699175D951EA
B4651BF8F273025C6088A956C9E3C27B85DD58A2EDB5F93EA54E34350CC0D22D498F7BEBBF1C
4004E1BEC68025BA7C5EC230C73B9B9D4FCA55EF1D41FF11B0052689D1BCB987356AC70D2F2A
34DB9E6559E2C09B5E5CD085465EBEDD0A8C2CCBB204488549E43425F148813F8C97D3AAD2C0
7572A58DAFE4320DFB4DC81C52B48EA9E904476F761BDD8D791C5F37C5AD9DC77FC10AFE70ED
53B492CCAFCEF39550CFEC6F120D9B04E3B8000422FE3A67B7939E72803DB2C96A9B1AB16D79
8729223BC425B47C9B12B8174E93A709D2CBC6C7E6B4CCF260E3941A5F5F1CDB4EDA1CB0E59E
5EB1CDA79A44A22930187BCFE76E0769A9FE205523DA6BEF2D9AAE96C1CB31807C8FF4DF71C0
4EF40B1690BA908ACCCB82C88DD8CDE84A85196639474614649493FD2399E4B87B3EFAD2CED5
443C88ED095132CA54896F61093B99592FB8330461453D91CF64AB4DED323B715F3D466A5AE6
1A0124820206FF48B2442062BB4114F7A588A37CF9156496525AC629C63796074F425BED9AFF
D4B19DFD180E3EAD341BC5ABF4B772DCA0F2D323A923D43A91D03938A44EE3C318ECA4773B13
893A97D77C350FAB1425401D3BD08B3AD573770B8F6F9C34AD7AB680217D864FC4AF401D1E1A
948058246B1463158512839FE3318090282153C9D5CA157C73AC246CA9D2D4EA20B7986C3FB8
9B48DBC071CC915AC1A50413D88CF21A3F0971B4A6F2AEAA20D5A462F166AAE2A904EC4D825D
3D9012A07B05BDC806F568C2C233A32652A51EA5BA01D9B55FBD3D5AC80D824CDE3095F9DEAE
F8EB41E82550D90BE0C34935D7668F2B605084143E4E2289C191924511056F17E3A07DCBA3E4
BE740F92AC77EAFF4DAC64084FD858A58009C649B3100922BB099E35FA38C2095DCCD44A2C91
97C1B13257D328B9C8DE70903223CA854FCD592354A375574583CE8EC4F60B5F250A4572FD5C
884B5199E5BB4D280B3677D6807E8F3523EFBDD26E6D15E3B49B9E2AF9615E702E85C1CA3D56
67AC1046F06AAA5CCA9C1895D5F1D27D97C94CD1931F952F5AEAFAB101E6F7E58B0201EB4D89
9A35206ECEC3079E0EB88D5870B673DFC0EB24E63C56097E55AAD175B5ECF8F96019FB2822AE
4DD02BCC5041E5212885AF022891D583B17BA54DD2FEA9480BBE9E127A99A5935A71DA32E35F
1991BF38EF4211AB78F4CB549F1AE54ADBF19EA7D9A33BB5CDB38DFA3064BFF1D3B4E513EBA4
6FEDF842456E2C97C4BC768C46890AE586CFDF0F57AF72476B24EBC9A8DDF5532A1F76979CA7
01FB60711AFDCA3A0DB1D38EE73563491A562A2A78B36FB77BA2E0D31C9A5E5BA7590849C586
78EA120ABDF65F23EBB80E2FDFF0336D0A9376BF69DBE58BD9B09EAABDBD13DF940ADD73293A
75D184E2800FE0A2EC3EFDF91D6364820B9A2C2972E77A4FDBC0BA1B8E8C15A1C48B8C6626F6
22B3A234A85952B745E170502FD8593BF355E1F65097FFE6F77A104BD7E711A30289B1B50A14
F66E0A3ED30B287542A4723AD3025FB2BC502D974A708CB1CA0A899C18E6F4E851C2F2A47EE0
A51EC18186ABF3E991236F6CFB969EA2B760DAA0F62805D9434310B93E30B0DBA1B2058C93AF
67FD59DF180A2F227161BDC1FB6EC68F1781285461B3D51967D4E5A3B20AA6DE146464CA4F15
B5F8D7C1164BFA7C3D6D2ADBA2D830B461BFF6171474A9DA3CA36807E2AC95C54520D3CD4486
97ED68B347DC80ADA3665253F3F14DBCBA2FDA6882A7A62180060466EDCA8D2AEEF192F64ED7
DFB4F3ED4A24E66AC720A8B6E5D3DE1D43D8B5D554FC2ECBA798DB9A1C01A79CB9116097F458
1BD6ECA1B6077DDA8B379BD04F42FAA549C57E665918E3E5410843660B9BB9139569275CF5AB
D741D6C813C39D7D90D03D0BFBD7B3485B1EE893E92903EFFAABDE2A5BCEB0E138CB1C0C5879
E0AFE897F06F24C5D4FDB5FE5A15C44FB392EEC375108A61FD85378ABE57FD8F06BE66EBE4FA
B89A4345FBAFC7C82CC9FE3BFDA9D980C13674837E71B92D1BA8C14DBC512A5B49CCDAC6DA11
FBFFC86377F1F3AC6810424FD68693BA58167DDCF6D404FDD1457309027F3A0C84C789A26824
0D0B152F3D218D49B71BC9AA438E4B858E34A01EBCB442B9E96B46CA236CEB5F1C58C4D021AB
E4A6E26F98E0EAD884AA96B6C242DEE33AA7531EEC64E5D1D76B7DF9B7AE57FA515B1143A37C
9FB766C75D73CFDC058FAF86FA544C5EBCD7B5843C0AD01BCC84A6C7923DF7B26E874504C050
3FBBD52185215C37FFAD9C8BC988FA0229785F25FA4459FB3C6C8F52B4F4151CB99FE8581362
13FD0A0147E89D297279CFD629C2D8F9B1ADCCCAAE0938B319C7DC4B7DAEB8FE0FB839B062F8
9EA9D5190784CFAD7EC931B87AE0DD9C2C868F8C92CC23B098A98CA9F909A44436E5CCB2BFA4
80D85DC9815263EE631BE20CC1717611A8560DBD4FCC19D5B68943F768CC9150D426F1C90800
804000DB6862938D02ABE4F61C17564B624610777CAB4D05007459ED4DE059355580CB8817EB
FD49DA7BDF3840B0EA971F321B4575A0157450B8A55061845DBA84B47CB8AF8A817D656FCA67
3C6D24ED6D868A526FC0B9543B3F94AD9EBCDECE74BB826D884920AB7CB46B02F65E251937AE
3349F5DF3E6AB9A823CBFD6F9D770084854C2B6F49F3D5A90F0924CF907B00215223C87E968C
52E5F979F034FF5259BADD5772543AA0F38AB87081C0DD8AE4BC2E479541B6C2A38E9FF5B646
58A7860FEC813CF00816D7314A9D55ABCA7C4E659DE83811709FA3F7D09A84886CCFD65FBE14
F009F2863113EDE5656420986151DBD485EB62EE9A04FCB08119DF3B2510EECE662ECF56A6AD
9BE3E2E3D7B5C24E2CD54B84E2328905FE6DDBF8B37EA51716D8C988E95160F6865C4523FE10
7FBDE57C36264E4F85F3EED15B5AA506C17E5B0BC25F89AE1AF3146CF20D3AA88E1AA90C6B67
DE9DDE7711689954155AED3CF20C92FEEB737AC6392CDA7B7093284030970C7A906B67B3DF29
4F3866626BE4A2DC16FBE1F286364C8D43AFA8DFF69413B84C2C59FA73852D604E44D6C22D2E
6FADE5F38E6E76721C3E1861ABCBF59F513BBA90E7418CC723221D2B4D605F745E71522C8E8A
73884E015D831D27DF59D23E3F14C0D62CC7EB03E393CBCDB0600EA5102675FB49DA7D51169F
6EA9D36E10C4719456F95B415C7050848B61C00B502797A65400D13CE9AF0DB21F831C71F5E5
521ACF84A6325C7282A6848DA9F72CE4D4C792A476A790BE70607DAED215684065F5852FEAF5
2D82A49133A36600722DB3A8F662DB36D71CE580BCEB14C2D36F7D4D7A89891DDCB128E9C4A2
97386A5930F1721F4249383F59981550ADF34A0B28E30E4F0C4FE68E60DF286471D7596F9335
11CDA44C5A389632EEC6375DE727E3E4A8E70082F0C00B445B4833089E70CB4BE1799F842981
BD133C0ABE4545D22FD6002AE579C8CC487A4E28336E3D6B7F4BAF61516F52BCD27BBBE0A861
DAE5DDAA82AFAAF62D28D98E48C871AD31BF52A1D3C2A0315B5AC1F6F90C9A45344CA000803F
EAD9E61B5B11D5B16C6497FA5D75509A85E98C9EEC6464B2ACD7F12FC9FDCBDEAFDBA3B4465D
843A1606983D72C55A4DBEE6690572B3886AEAEAE9BC6DFFF567025DB6EDBA5B52242CCBCBCB
15C5BD2F85B2BABC18B217D58707BB5CFA69BC4F9A994003D030766880D5800653F451C7E98D
6446B00B604320CBD386F468F4E051849285BED08FF8545AAF101953A8D9651B893AEED12724
40CB4D148752D8C39AD095E0BD9530D5F35252B4E969634D23F0961DEE72F6D442B26CE0A33F
2EB59BB9CC92CC0B12FF30ADD5CD26EFAD8564FB268AD98B68352F479DBC6AB016B6326AF1B6
48AF626559EA859353858F393FB5CFA3437B332E904266FCB2F9604EB4500DB97491A49F22A6
FC9044838191FC3EE3CD9F5BA711737BDECA62E298231D8328795C286A62197AD433A41D4C08
4CD77E3BA31250FA21651F3CD4C44437B083C19AB942B16AA421EDB67721CE6E4136925205ED
EE6171459344912453F3AEEEF056E2632CE996E366788C379DF426568F1AD399CB5857550C0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmr12.pfb 0 0
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
 /FullName (CMR12) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651F6823308
463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224FD6EE92A38075CAAF824
47C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B8BF254D91912D3A99557F5427907A565
14C5A3EB961B94112077FE9417B70DA0B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64
FE36AFBD4DF4E93F6B1A966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB
28183E6ECA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD42C46
69459704CB58A7966B77ED61AA76BF4E05B2265D494025FEEB45907060243E63A418D3B75EA5
B4CCEB47C9F70B67AED130771346015EA6EE1C0595A1DABC630ABF643F5AA128F1BF37464F29
4398D9209F200532839CE6DB19ADBD2050B9D04289B484B58C76BACA8EE8C1047138B0814FDD
E2B31392E886ACED278CC23F2747AF994C23FED4EEC7FD6E51AF55888144B1B7AA952E0F759D
61E50040EABE9ED9B44CE3AD9449E22F020ED7769691B8B48895E89CA46FA02D901EB0C1B953
DE426B56397967AF823A12138C269F179F64D539301A1BD70EE84C75E6636D6B493CF86A711C
B32F6C7D9E6C0502871F46A63803A1FDA4BE8B7594C9DC4312AD1364ACE7692061B48E60FB04
989375A429CD633A209ECAB364F24AFA719FC453C3190CE91C2470517836240BF053E0CF0834
D27F55C93F2B8A7253F59243D7D2BEB359C63C98DEFA90A89DF6C420A007BAA66DFE690EAEA5
20BF0A94293AA212EB66CE7E200103B7D3A50FF835557FFC1AD378916DF5A142C5F3F7AC6B0D
3776D67EC6904A7C649E16EB3FE53E0768BB921F7B855EB5039C3455931B55B0849199688012
627C184A245928E7FA04EC3AB4C2ACC2FFD2632E2AC44A11A13EC87400E04A8FFAAEAD6073C4
AF55B90930ED41E4D59FA33F2EF4745291B1233B9D8EC44A72154DC13A770A8E255DC9E3F2E4
116F30F727B56A5EA14473E68B4E90E37A420E9CE6269DCE4E1623A395EF55AB983380D31B2F
B2821090B5DBEA5118A3B2C46477FC0BC7A81E890C88C0C396CC0CEC55E7A39A649CFCB8A2C6
41E7582AE35A82566F40800F6B5FEFD747C83FDD2F86B2DA64DD35F85F686A889FE24D24AC85
19CD2C45ED08E2A9B338EFECD678B22840B8B1D445679FEA9A72D3357A2598167627C0B4BC1D
C7CC79C707DA791CC3B49A30E6E6F31A934FD029E13DD67B5155DD5B95328A6FDCAEF3248D77
A9AAC90A32E0088BB08BD179379F0A579F9B3E647DE8D7865E1AEE6008FDE83AE3D63D109039
623CEF2A58F2D7853AA72B0C30BF833134E453AD3048A163E83617D55ADE3F34AAEB25459522
9A2AACA7FA87E77C025B3A46D726EA8FE8F87DD110EA55D23A7D0ADA1FC101400501CE8D7AAF
3D1673CE3C92B7B696CA100FE741B61BE5CD3B6865F48E84B12A189932CDBEB2A48F825A81FB
F68EC4C1BC7B570AB0C60AEEE63B856CA2230FDCC859C67265118AFAAC011B863B2675226A67
E5A3B6C93F1E29A9CA07F8CDBE4EE8BAAD320351B5B2D8071998AA594F83F1DC671029B6FCA6
7F717FCE3796CD9470164F4432C31F5A6918441A8D3690575F34EF4ABC1A7FED623D7A97F3DA
989F82ABB18D63F42CBB02EC54C9851965E5546558BCBF684A74E4166E12BC5AAF104E64D52D
A36A78E345EE9111C28FDA3984D6DE92D1A6796610AA8AC067F5A9C6BFBAB4BA9BBB0381EBF7
F15CD9FB0211E1BB82CD037224C0362C3983EE54D252180EDCA46C85AA2C37E966B432C20989
96666D057130D3F2EE60B1AA8904CC7BCF64E17810C4CA8F714E5EC717F75C7D50956B2DC676
C1A3118C9C56510BC97B5E834D452FC7298FF2C6C90FA81F7D7D70F05A98A92482EF7CA80459
7577BFEEA5C00D50E91F8B038C90B3472C4E29D68BE6407DE4058C9C7070415750163AE4B150
1537E88F3CEE95100B3BF7F95CDDE74D040CD28EA55772071665061ABE13E0FD1CEBDBAF1622
19E98FF4ED414C59007386A405A43E84B9A310EF63E300F8249ED864849BA877D8A22967F54E
96B2B71F63DB59F824F62E3634B710410C251C825094AB00F3A30D94E244F7A6B4380B9A66B0
AA575FEEDDE97BBF70D34382464B5509BA9C4D927BF854819D1F44F807370DC7E17187D6344C
DA087F067E7CCEDCD290F7A2E803B2B19C7FF3D1A65877AB8674F3DCC3178C8438E626490E8F
21DAE3481D3CDB1F6D64FDD357DC300016C3C6ADCE173541348F0F6EDA2E56406E759D301BD9
DBDB9D7A14483D0DB56520E3B9D91DE8D9285E3F7B84769FFC375131C15F7D825CD9EA06ADFC
1DBCF8EE9160506374C74B2D147FA0897B88CEB026BA4566EBDDEA09B33CAE5F8A59528D66BE
64C5A24C4DE4B5B1BA49FF5ADB60A6B52BDEA02652266334409DF24F1BA044AF511DD7E59FC6
5A82498C82E18BE928FB010973E8662B2CCFB8C7C59C67BC36E7318BA08BB5CC7545C9FA532C
31B1156D2635F1ADA38197AA88D90DBD2811FC340289CC4ADCE6C5A7DECA645F7B7A9290725C
4C67289F901D7B94346E06CE95C9C49399E303F595CE0308405129C3796106DA12DE9D15B364
A9841DDC54ACA8973006E66826962D46C5379763CCD808BC7D532EF8D0327A0B84596160FA12
C9E462CE744DA3777745E01DB27E1677871290CD65045F996E97606A68D5E26389D39F28110F
B9C76150ED96E25408346D24AE0C057507B10E39BDFF4B12120B529F1DF468BF1344189FA2CE
8AF379805AF044FE67A11BE67766A734D1409D1B9D3E50494F3D4DF60826A5518F79DDAB63DF
523C604A656A411385EF7C59DBED446C38CE4D39314C0404D03A3901E8E93361B1D38F65D8E4
61F5BBDED078757B671E2B12C03B78513C1C92F54E8770FA2447A59B56FC777154E7F50EC1A6
52E7F33A52781EB51C5B0479897961DECF517CD9962CCFF77B7CA1F81DA81E9AF4C1DD4CFEBF
74728B0AABD710F9F8747C64BA565A582C19B4943C956921CA1B1EAC0B883020C2EA90006DC5
97EB91E82C7BD6AF70733E79DC30E30EAC1FD11DFDA52AF101D705AE9ECA3154C6433C62397E
57E4DDBAF657CE73BDEF2483DF3F0843F32A6E9B39CB9FBC36B3B8F0CCEC356F1B114057E736
DBCC4DA998851167FED692BA3F8755B4EFA3EE8DD6B1AC5C0631CD3C84389641A44BD5A6A41E
2A4203A6D45841458A346270A956A1E1048C4358F5539C475A81A2B800D8104AF1F86BAEC7ED
2E1850BA951E8872AF4D728A31D4470EAF98B2798DC49C9DCC3886E20B01144AF70F3635CB47
3A574CED6DC4D9A7413AC30DFB9E48E52FAC4ABAC7B0ECFC2F4082DEFDFA1A41567182478E60
95F2CD471405E173721E4200E406D8F613FEB84CBD4AD0BDD8F8B0A4F01F30A4B93B26B8B57A
EBF96322C15365B230EA665F443C8C8B096EE98B3ACB2ACC89DE91F4FD561BBBA14C610ABFB2
E8E868F2CB3CA7DD74DACFAC6CE522F233258165698510F548D1410F5AB8F99D32884C16CE55
13159029A98E8B88356DC43FD64C280BAA4D5A0E4036B4568298FCA54934546ECD5D1591ABD1
C4DABEB638535EC0C0E9A69FC6E42844FC39329722864DF4D35191B87063C3F2864AD471EEA1
0E9FCD32CA1C748DFB0551712402865B3546CB524CA87AD8DA13B420F328AAB486BC99E3900B
978ACB4FE602B697C8FE5E7E2C00F06E53A12CC5A6C44CC62AAF2923A95DD7C5C381F501C52D
D281443325F3C8C0A52E1815E78A55AC34FFAF46208D374C4200BE0EFAEFB18C94C371B98A18
92CD2CC5EA0ED6FCA24557A9353AAFF55A905F6D1E3FF4B0E4EBF73B3296A2C9BAC51DBA6486
EC87E8D6A65A3BDF1F002323D07849769EFFC48EA242CB891D44FC8BFCB3BE074849AE93F2F7
73B4EDFEB2FE0C0964D71AB9DDBC2E3198E7F49CD60BFA9DEC9D336A67C73D4BB8649AB4E5A1
8483763AD4D4706418F41BA151E13B51A665A08DB5B199FC00B4751DEB142A8BC086D12F411A
7042C041A1758FD4920A26F610833F8CA5EA28266AC3E1D416EF1929FB20FDD02B697315F191
9F862C40E18278CD70A87A352593C86ADC0CF028B575E755C52C5CBEB6FA83826623E48F64FF
E680BBBCBA829E94BC443AA421A17EB6E519FFCB6C3E0D60D4D4DCA93A82E4AB87AFE4D90ECF
F609B3E892B7A9E5583C48322DCEA45E5A101B5CB1B2F23B42B106B1FE61E803ABCE5CCFD84A
3ADD55F28674612B9F6AC00E136CF43EC910175F789A5FC7E1970683D98E4EAC62A4A9F90E86
D80E42FD497579C1410E728A71A87EEFCC3A77849839A30EDD6A5B7DB6621A6A4AE12ECDAAF8
EAB5F870FEE8010D4CB6A6B49C496F54071694C17D658A43588A71D4B9FB704976BF42762712
9B38FFB22C957C37D85608803A3894228E2BEFB05B3C84D16A07216667F04737C5F3710960A4
1188BA0956D697AFAE27BF34E048CE1F264FFA6E8DD588D62D23A321CE6BDD9D3B617B0F2B1F
71FC14F5DC3C526CC806B7ED33D1545B5CAB8DA9376A6562E26BEF39EB306BC892EA5CB43DB0
93F26B109645008A6F9BAE796EA7CE4161B981ED4F39CF384C9415BF4D5A0CA6B66D87BA2402
3539B15EB46DCD3D7F12E840DBFF947847F2EAA9ED40413111BA2D3E73F27143A7F2FB2008B3
FB09E5E068B7AF093676F06C99187D673258F1E000288AC9921B253B136F975B10044729F339
B1AFBCE4B9E2EE19981B632FACECCDDE16B0711A2D9E99670BF46012E74296F17000B304EB4F
23980E0ABBA23984C6D4E9DF23A80CC518EEF9AE9E072BDD5ED729D4DD860BCB276B3C85492F
E6DB77F0BD628CA07A9B9BF21DBB2416F2302010AF9D6DC484BEA725BD458B1B36D3FBEC9A0F
BDD697A278384A8B63790D99886A5E02223676B39C9674CF3BF883314ED0C84C9DD709712D7F
DA9D684585DBF71432E9A964CE75A87E08C5FD525BECCCC91861620605F59C8FAD69483C5CE0
F58D5D783D0801BAA8985A3223B20145E6C31A5DA673BCC5F803F698EDA6FD1145107E9BC860
4CE20F3287C290A1E9D6073620702C6124C5C683AC95B6FF9A16C3FDC250122B36D3B7D3CA8B
A897E3CB693B9974A78EEEB9684EE4B506D0D656E5193FE4B41B3C6AEA8730849F944121A1FA
D7D0C0B39DCA129973932461019F0790DD0C82C91D3F58C3E6321ADDA75F03728E029E70B3CB
91850408673A30066CF62C3843C3927429DA88C2B6E2DF5F8A77939B8B21B448456B86C96317
ADC0E5B5A11C522337F74D8A44A62F3AC4B6F8A4DDB94FC46CFCF4A5D4437C46A4D2C61C5F6C
E24B15FE58ED8F3B599A8C922D56C84EC8D034BF4BE92C45B515DD3796587C45C04EBEFB4E51
4313404B949EE91A9A4F8DB6E6E2537B5D4971CD68895A2BF88E9FAE27266810A13C8D052556
A3CEB72AE0672187DEA63E0DAE0BAF7B06FCDF55128246206C19C3B99636D310B77BB4F974BB
74BB33A45C439B71B2F7C52CA1E4897632FC36289B2A4DBFC1546C1D87DAE01DB1EB0D226799
65856449562CAF69D91F3AA7FFE056ED564632AF6D91DE7283C168AED0A04140B36810640181
A72F35129DE103E8F926363890D7606A5D2C6DCAF093695AB3DFD56BDD34418B01F11A4A806C
DDC210F91C02E30EC5610C8286197EC400348C80B353B458E2DD9789874D81954D9A6EF50342
D55610D08D2FDE84C2FDE538E5FA2B22935FDEB22552920C7F831B898678FA191B1655FC21EE
33AE74E494F7353A467232D6CA50E177017E99C4D9802A6BFA17EE9A6D0A0443F11914170D87
0F6173A4BF304E91B0E14FAB97BDF29C46CE45352D41EEED1A4252CB12DFBC33523E9B04E090
93494DADBD24360C65BE9F6582287ED54E9F0F0A4240C1B3004BCBE296C03340582908C44EBC
CFE30FC7A812131C81AEB9F97827A5C8217FF4169196FB3049B035F45D1C1EAF6E6521D3F567
D780C7F40A64ED3F7136714AC6A90F044B7EEE580FDB0F5530B4A6B84174A5FBD590A4203063
CFB58E24DEFF51DDA3F3DB719BB148D00018F1D0B133CF7D85D51E62B048EDE3E2ACE2631D1A
13586196167BA1A5658A22C0BB7A627C55B3C6FC12080681B0274727A916DBAFAEE6A7FB1D81
57AEC270B4CD53E9178912130810826FB33600DB347EE10888B97BE1ABC14B35AF58F9CFB033
CE1594729A3EE013691592775581690CCE4A79BF03A30B1CE08149D91C0BF89D0125D4C3FDCA
E1FD6240B831660E3FDA7DDB36C6707CD89F84F2F940A01398CCDA2A3296B879BA69356F3050
6937932995CE8A94840853882449174B5CBC2A26C35152B3E8A2320CC925D5C6A9CE6BE30BC5
7988CD58B742F79413BA15AA354CCB247B356A0A6310CC9C13816BDB472B2D32EC6BE5E4FB8F
DE6528731612D0275C9670633CEAB3584CB1BFCCD8DA19B895FA76A815B077587AC1C535D2B3
E14B8DCCAEC11D729E598C972C0A7F07C0444E8532238EBB33808ED0EBF23BC8160062286673
B64D248C6D37BA8208F3C2521DEF11FE55699F144A237596C10919E9A88AB96FE52810FC571A
52D444AAF63DF72EC5F5A823889DFF8BAB0ADE0647EBF4B075E78D9CADAC8645638F21FB9710
ACDF91365011EBD9F6CD154D23AEA1381A997ECF57C172B4BFC013F867751675436FBA117CB7
2B69E3B1F647AA3AACAFC64477CE435A1DD7276A278CEA4EEB12CE2CF36B4185E84BB0D574E3
7D5D13780BE4B187B3C46E56396E6303D5FC5FAF4A077AE1C0AE0ECEEF94BAFCB6B57DDE6C24
D93A702733E8D9123B67DB112602C641B13BCE6CC30FB5373FCB91938A536B67ABDED56701C3
FCAC393758F06E046BDA92AB42FAC92DA1F877384A018B8FA4CE155DA02D940C54872FEA9016
F6ADC15CE52328E33159A80730EF28E1C3F25B2F7748EE83A30A0B8669A5BFCC26B25B4265D6
225EFACAF4D268837FE6992FF3BE510AABDAEB90266760E0F3C0C36A66A8D9F3F89FD00E2939
244FC4334FFF3F549D31CAB0BC6E9EC5A0FCB4F43EDA82E04E262727F58428A4FAFCD46E7B1A
9A92DF9A094EB9F801D053D5FAE0AE5B588FB06670E33876C8B17ED2141C9C7908F68263AD77
F2E8BD29C01EF2A5D3552D1CC8CAAB6E6B6A10B80F5E2D2C16FEA197E4F03A55FA5E8098A6F4
A3C52CB30DF2FB6F6519E91B610E01E48FAB546F78BA9003E17977040367C1E4EB638DBFFE64
F2E9FBE3343556A73ACD12FF8C1ACBDD4F4AF44382A24B95FCDFBCFA1EFC4E239C98B6731405
CA5ACD64B49CC2E7B9DA4DBA9D6F65C109AA98176FA88030C5CC629B1DCC30BAA14619521076
298FABD1831ED0AB9B262976B8AEF1299A8ECDB5ECE21019E3D687A6F6FE37BB3782E0F14376
2E3E7BC2B2CD2F30A055A5A957BE9A6106DF4440EC0934A5843BBE929C46C6CA14A38BC0187A
CE6DA749639BC748E32B34B95F81020B9559157B9DC148E520B6A497E7A06EB02D31D3A30A95
CBC2556AE9875C5F9BABD08DF31E54CA40ED00D23491FB3E4AF36E769B1F797EF2C0B2C822B0
1ED624E0091A1F7A9B690B17BFF9F490D0371A4AD7D26104C56CCBA1E026ACCB72C19711D794
76E06F821BBF2E1F5497606C657DE5B30CB8EC2E6B5C93A31FFB0B297FEAEBBA2823E7F51238
84FF18C918F7956F04972BEB2D6504E91E2E7877DE4BE964AB5C97C255B7E53504F2B08A8087
CCBAB662928F5F4C2F16E8763505A9CB2A4103D5F478A555F6A585C527ED6B5BF9F0750DC174
2349D4DB9C5DEF381D0456CC203C348DD73C1D387ED6A9EC81170F40C2ADF3DE81210D3C3148
D6BA3854A60A3676CE5C906111BB58F03A57E074334100EA728D97AE525565D637A82F6AE21B
6B1BAC1799D88F117A79DFEBA74634BB65BEC416441356F36BBC7359B92469971A18879ABAD2
56889ACB1688A3D16FF251163AB7AC47CD6E952574D3E3570C8DB66373ECF77FA9966806F92C
D07A2649CB4CA5933429C89362E631DAF0C89B6F586A7888B4964C83A4CEBF6BCD65DCDDFD47
AA3529CA0D776E2A65C4A068C3323BDD562052E5F49F5E9934E9114F01D403EDD517BC040B18
2C2E148564890A0C766CCB79DC1AF9B7DC576959286A0C2FD6BF3BA9493268067E16107A7F68
3C9996DA8B9B5B38E5481653145A3B75721F998D129D6B284A012457DEA4A97F1421190C761A
63AC861E5E7DC355BF0A83A1C4698C66A8C9CABAD8EC335A78C4B67FE8AD1D722E59AC047DFA
470AF039E3CDCC6B0F942C25A6FF197731E3688DBEF84D3278CAFF386C2E10F0902C743B3754
A3A2F3E332E7AF598ADA081CCD14002E027EB0D2AF277DE7DE5A96B6F793342283BF32C2BD4B
1479676C9FCC9C894CFD8B5737198450F885151F0383F599435883A3DF1605A43A9C247F9DF8
F8DACD85C8660BCFE778D690430A6F8ACE33BF365C71953B3977060915E803265E25326E2369
D497800D04A47D261D88FB05F85D20C2807B3CE00CC0FD3F40F961831D276F2F2B25860C4B08
79901CF792A49536586CD367FA092D1BD03742DCF28BEDEDA81A4D6FC7607378CA6632614F6D
D25C0726A3E4CC175E72662CF577F70AFCD5AFD66B716DB4819F394375CF995340F5EF6518AF
FB8219B57BA723521A6ACFA12919007DA6DDDD57C8D7AD298F656C2A568C8868259E72C40050
5D48363C27DE6DF4AACB983ACFB8ADCB6317A9B14DE64B02268129AC49007E9EAFAFCD3C8217
169B678F7A29919B2AE0F16BFE317C3654A050765EB24EED0CCC874A890DFCA5A7FF9A2DFCE3
AB9D54E289DB0A170CE1DC342E32B700B998A468B6C7EDC1B87705CEA23E64B9BA46331064B4
BA86A5B4C4DCED5B5A4550FA98007C305B18AD86BBC893B504070BE53C58D37C535B686ACFE1
30E06C21B64E2E2AF3D42C3C3E5E548CEDACAF00AF6D367DB450455A5F358C6AF10D16457478
1FC09599BBCAC9D5AA2297D4950C80ECBBBD72F14657EB7C56F3682CEAEC5163DF8835D07FEE
AC3871426D72F9C19B3D0E7B34435C58EB6C3BC99F8EA48AD0761C32D9134D161DFEE0BDED5D
BC8AA546EDF182510E12EF9AAA10A7D151161FA37EE66CFA167EF9662D5A9124BE06C7DA3B6D
F116EADDF587889406D4539E5A0E4379B1A26238B288B8523C9D6BA5D355EBFB16CE7F6F6A3F
8D52612F6F4CAAC67E1AA2034EFC539440978500EAA4D52ABB7FB4648976A1634AAD0CF00824
D828C872CADAAE8B302E5BA75034F239DA241A0A4FE46308F0A45FE90CB255FCB021E64295D9
BD844573711132860316864933BB2A01AB1858AD1F98E4A5433FD3EE97E75578A5AC8A9C1CD3
52B91161CEBE55695BCAD9658AFAA2C092E79D69D0F1CF7AC6AC0A602CC52927923D3BFB8B3E
E6B839A18926358074347F5CA6535598347A3469121A8A717703D5A76266E6C497743F009430
C1FE2F4ECF3A08C4F3C3BDE1C5A0BB5E8F9E9CEB753A36A6DEAE4D51286736C74EA8D7A4B8EE
DDCFBCBA8C0D7100AD74BC31022BCAF73DC00870818070AD18EE422F47D969566459030CAB8A
06F6E369D36D463E0E5760D6358A7D3C7BBE867EABD849004523A486547DF2173DAC9410A00C
06DF970D59C285CE67C655B0FBDCE6A5E569C528EE9C5ED64AC6CA4E5AFE4A255F262B101F8B
329166875D193C107CEB26E82EC8AAB1C505A10CA9CE26F1AF9E21B451B86A00B2D057F25BAF
54A113551382B9A74504A07400C407CE960F2D4ABFC305EF2F62E0CE74454B6AE275F6FEDF93
FE2677FA8EB9C2EDE60B406983C38170566E089D01A1E24593C4EDA4A7D222BCACAC6B2846EE
9F6459C88ACD1158D30B7175A8B9A01613EB46F3422DA0DDBCA85D22E9D1B7E718067B45578A
DBD6A06A05AFFB1E968F35651AC39735EAED2DEE24570A6E8E48AB9B82C9B88680C03FEBA823
B75DD4CDD07BB7DCE0A46CACE0ABA85A0E9DE044C955A5136D214673A8BE67D3A287203CDB8F
275A1968F5CB1AEBB7183D4C4890C122666C5B396330A9D7FAB30B931AF22A925A16BF037B77
170588799BFCF8A0E7B4B16CCF90960882E8CC7C943ECCAD65194661E6D6842E4491E60F998D
8B4CED7692F29EF7990BA00B058A1C5CFE62F7E69C74DE74E2FEF6000187E3025302554635C4
D696D3F061948FE4D5E7CB17185EA874D54363CD3BBBBEC8E1CC3DA95545F6FA704EC780AA77
B286A37C993C10C29E5CD5429322A5CFC776D6F7A93B2438F15594355A62FBA70D25AE1AE30D
F2C3F80FD017918F30A6CE355A6A6EB6EC6D9B56BA60EE1254C87C38A1E8AB45FFE33453E5E6
5A3C0BD9D820DB63D8C508B6D773219C2447836DA5D9623C9C0ABD1E2B9F57AC7C186BBBC5B6
24F04AE04AB0693EC38AAA42B960DF9DC88254D5519F2D0731E031FD42A65620759EF9728031
CDDD896BDDB27C9647CF83C7AC9050FC838A30B640DCAA7207D8DEC1FE132C5C00FF3893FAE7
948416FD6F080F00E59163C6E26ABF9C39D0A0765073C6E072010685AB65CA6441AFF6313D63
8EE52E0095BFE26283AC8AEDB17654CABDE60291F7644BE3C40B0499C27B400E8FFF44731B6D
B8007783F2AE3CB85D84C08E8C6D00F35B29D4DC57179E2240DFCD9EBA9329789C9099D52071
0D066FD9A515C7D77B0BA673523B1544A4394A1A811E72B21FB9EC3F9070023230EA1060DE9E
91C67A89188C02734554BBEC90CBB35A971D398274BFDB8CEE12A73A4AE4945B92B67D084046
D1F1F56A64067B7CCA89EF399D47F9D857C7CF27AF530452828E6F2A193F94566D485F84EC3C
7D2BDC02D62E9835886FA0AF41074BBDB78F3A72F70899E48A31A6CAFAC4607C9FB90F0B666F
C42BD8B2C4E49290D32D8265E2E0581B635629F302216488E32462A2038E5F9C7B1476AF8316
53C7768FE0F09E904CD073246CFDDD4B8DCC0D3451A5039FA47A673B770BE11B03E46A887C53
B1B7D2401131EFBB1D28FBD1E61DCFC9600D38E6F5F366F1178A7C1EBE3EBC19319EFBF069D7
4188F42BE356425C593EBD18CF244E3B35450870F72FD899A695AE704F9E5CB31B813159720E
E80BB6C765121979AA38E8CFCEF6054ADC78956A2CBA6F7A491711C81373B526569A922C7124
25BA5BD448013490D459C0E5D42258AE54578F510C01AED34B50C4C15C27BC0CA7BFCC1F8FF7
3D63E6F396C949973C12C0D295B348BF2180FE5C9C886CADA54C94BB2629506D3BBF89019E0D
71DC6B01E01C52938A785E91BF5F8BD6275963EC11E33DB9F0212FD72D24E17354072BA22B4B
6B96E57BC5B8763EE96A812607A69FC7E17C1D94F3FA7BE10C235BAA3E6D261CF3A4F4A75AE3
0169FCDE2620DFA298EC4051D48A4928E009E5ECBF7626BDA1262AB407C9EECC72ACCC137022
1772F2CB22E8A68F26DC83A467876416D9D73C5A8831AA0E2E7D4E5E6507488343AF10BA5D8F
8264895730403BCC32F4236C1FBEB5F65919CCF90DED28441DAAE07970463BC9A40FCAA350FC
8E7EEE00556E0074569C0F6ED83B3BDD3A0AAF7A7C619A6BEA9AD1C0A7E9060255F63C1A6F12
1742806924B033D8DB7D997F6E6626F1586F01338AAB718DC8709EA4ABFC7F76750867AD1088
AD58D5B05FA54BB54A4B58EF33A162BDBD4D90205EDECD0FA04E65618CA640031CC28C88DFBB
E35CF17F68ECE807AB00601F8EF71AFF61AD5B8830E1C676677053E7CF565A4CC1984850A5EB
7545F8B04CDE979BEB5959D41D82F2C0DA326A924E332E5E8DEB8D3A3173F65BA6DA3B798E98
7F7EEE9E0BC14C565D6EF0526143F89AF7232B5C10E0B8CB0798E2FCEB6F6303DC39E8C141A0
9FAD8E841D6366405C728103F0C3CBD1DB97B5C231427091C7E8607EEA4A96836A2F16DEF71E
C9E086691FE559D8B03D79FF8494B6E3EB6123A1A9DE674B924E18BF5B4433A9065A1CB0420F
9995F00D6920A62BE78D261F7C184281CBE495024595CEDFB9B58D951A2A217EC298D36C5338
9419FB2AD9AC52224B1CEF86913797108408BEBBA6BD592122C4A4A7AB50E08F1957455D0A5B
69C5EEE83950D5B8FED11367A693F8712CAE4D828AAB1A49B02F8B4BD3FACB1083D8001D8717
786E3E2AB1BE9D2EDE46BB0A11A44750B00BBE7B9E0810B531A8B62515D44E5C868AE7D8D440
09A64D4F4F69B8B04091E1C7F047A8BD3D335BBC17B29A508074AEA9D4A5AC9D3BAB1BF1BA6B
C580D5F15B6CDF531BFA205AB15E2EFCC9AC9BF78041C9DE20106E83F02FFF06127B4E756C42
DE99EFF6039BB76BFFE933FE4F7B9ADE8881830CD99187B21898AB87F7C1B81D2360822F4B94
559C9C7B0C4C83FDF746E962ED0C73CCC6A4EC1245618611AF487B08DCB6D1A3B5349FF90A90
50FF02B505FD379DC76F1B14FC72F4B8095283655CC9165E9181599165293368AF6FB4C3A676
1D48BEB953532A68B7D5CEAA54B121B80FE9BE72EF26632456296B2F85C6CE60AC08C89F6369
885FD695B05F7A7F945388A54376F95A8CA5BF3192795F36F87DC9A88CCF5D9A5EA854FE9781
1AF4269D3654B1D47123DF18FE26E89DC346E4546530A553121D3861D74C7A564AF96938B0B7
E25C3777B964E069FB13BD6D79EC07C152546C9D3BC5B297AC238A1BEEAB6F965A4FD0234BB7
E1B31D938B2A8F8FA1F08CAAF99338A790A9C9B26899D3AFD0A95ADF9EBC3CE6EE3872931CDF
43319B5059C4B5C68D8562F01B1880FBDCD988AEC0763F8C6E73CBD6111CE22C6AA4EDDA4D88
6E3E7EFE96F8F4D55A45BD2FAD2E68A719D2EE3D05958FF436B01AB54EE16060DCFDF10C73ED
5E6CFA3074DA884DE5C8BDBC04DA7022197B8C0EBE9A617C21064867FB1A13BFBB677EA769AD
46AC075266EE0BA824689E3AC907795F68DD7CC20F3BAF05C8CEC4CE5752C9C42595CC005618
4942EAF8FE615B6E12CA5DE4930EAA2E8F27C39709277526B77F199E247A5142E93E74F25033
CB87BDD503BA8E10A5002540A4778351D4E4C42C4B003091CDCD07A12E3D84654D3DCBE457A8
9BF0B8B76C517A0DF60514870D806FCA80FCE5E7B69008F074950E990D51CBB5A57196B38262
B9C45B8A00BC98D39A3A8D3C8E4210EA7AD5B30E0307D46E5252767B52601E4E8EDC7DA14124
497DA4A365ACBCF5B55637E7FBE50C3A7A0B1DF50902E851D54D45C9389D43118AE93A2057AF
24FD9C9AEF6A32AA425E06B27C04E969532FA9A00EE7D518DFAD5E15EAAF70E97FD66DE7592B
3E4A356FF8EDE0DE650BF1AC2FB390A4BC5381524D94EDC265CB58B9E86410BD141B463EE9C9
F2AAD8F2D4C395D7E83F422DDAEEF4E97027E5DEE38C377E448EDBB0829B7A5A1753D63A068A
4C97BF5CDC420063337B7B49E1FD41197BF9972DC13C368287E5468C50F984A942BDE0F8AFC2
885B9BF1AE9F1730676FD19C592F919B9ED6EE19752BC11A69425D71BD9337C14A4C37C26ECC
74BCC3786EAA038A529C2BD5AB6C9978F6489A48C3C831340ECEAD2F347A164CC8875E6C6EC4
4956B2E57FDD6C7992443AF2738BFAFFAAC1A8D1658C4C002A2B4E6D8AFCBAD0ECB4AFDD026A
604871889949DA140B49D8E72550D949ADC502C431D23800D6E3D86D24BB8844A0BFA9BF88C4
C2522A6DC0542E62E18FBE3F3A7F25C280EF6C5B139645DBA268F31F4EB42359EA18D8B81F58
FCD119330A3EA56A1C61E4CCA02FA83D73A12E8D55DBA6B53AAF572901A45D5D8D1A3DD1FB50
F54C7FA919D189FA8FD304B55F48ACEC50861D9E7FE2ADE5D76B976CE148D15169846B79C29E
F4810B5D6093E74148E22AB8A5A56AADB45E0A7CEC3EFB05BB88536DE0D6D41FD4C5C6CF6718
32F3B76B1CA49C94E4FD29F7130E6525D21093B758A2F476D7B34CEAF98963FC566AE8080969
CDD8606A192D9F2A0C1062BC18C851F766A6CF944F24A5B441F74BAE79A3F7364D00F2225C1E
26B9EC6D3CC829BF47EC292F01BAD260C13BF2392C88A8E7ABDBC6648E614E427AA9523E6680
94421CA0B4501034E660776729590B49AEC1C0CA3DA6DDB62513CA902A9F53BDC54749A357A3
7727BA42C65AA68FD827E746A70C371C788D433D1F7A701A3EB192ADE13B62421C8B5A02A7D2
F99D6DA857EDE182329E67C7C8568C7E870D5C78F370284E8B1C006EF8AEBFAEBA8A4FFC2D80
9A8EC1AA4F8372EBFE758291A890461761523AE5AF8DDD8BE77E0BB3C9A3DF06DA9C95EFE57B
84D8B2A3E7E6F791D2C6440389D2CACA33830B1B38844D4661146203CA817C8751A2038C9065
DD36D1FD48A8A1061352569C662760414C0140BC990485B52A6303449A5E5923BC41B0A13152
38BCDDD9EA2A3FAB99B484B0A2310F279B961302FFC8E241730EAF793C0BB77703723F95DCEA
9A5A832E8DF20B7FF146BD974490F2C2A1EDF18D869653EEF09C88ABF6B0EC4483F809C7C8C7
B1B6D0CC684A37E70BDF1164AB6E7D97E551236F658363C45A4EDAB17F67BB1C3183CF321192
7D4E8BCF6DC8C81FB39CD3B2E6A5F1BDB9EF451B503267CAF913CA6FF8D441DA6D164E2372D9
3B97A70B1DB122401E1C082CA7EF632E6521FFB3635EBABF7DE0CBFB4254F8CFDC045B2BA9D5
CFD3F5396B7266C5ECC0D5E45E07EC32D272AE949AC2E0CEC471265CDFBAAC6CB4DDA1F9F993
3E042A69A7E51D72ED24B70A451B58DBF8407122517939F3EAFAB63E2F8BD60E4698ECD9C262
AA5B29BEDAC956432DA0E047F7743E78A932AFBEC339BDAC4ACEB4267578A90D1E15BB0F1293
F06FA7A8F3BEBB82962D78BD77A7C79DEAE0EB352B3C2D7E97EB832C4C485AA946B559ED49AC
7D7B9C69DF3D3762979CB7BD40CC9D4ECC31EA7E681FD7DAC4E62B726BB62274E4D4E7CEC653
6DF4BA4339802D66C7BD006F348ADD9C3A46E0AF113030A2AAEEDFEB0F8B8560E1FF62094916
8D108B7CE405504E61E2703B70E3F6C55849707D8780CB7E25C92DA7E29E2FEC62CCE873CF20
CF6B3983D530017A3E24624A540FB07B08732D913BF334923CD79C139C2A982D7AED98A8BB95
E8CB3336924BDE5C598FB5D1D66863E8F4AA13043131706C9A8427508F81572668C6D6DAFA5D
06E81701E46E4BC632A3D091C96CEAB160C219227D4D14120DFE9D59E7369917846BC87EF5CA
966B2E89F4B1914702FC55A4F8EA070BC1AC126E95C1334191784FCA7038A34B14B3D191F772
1F6098858EB0BBF31C49DC9421E9B1F5A6A65D22372814DA0191D78DC4590CDDFDF20DF3E486
17E6029A21094E03BC64FFA1AF1CCAFBA58270F6AC3D34D85966E19B59C1561A98689896D3F5
CD10A7B72634911457E064583318E9F4E350B16F16D8497B10DA12B8C1E7E16D3D4BB12C332B
90353F1E82284A79B9373D60EC60C7CE1B342BBCAB1D9F2DDC1749CD503309DB6192E0C34F3E
F8FFE12B98605F99E804F256766E94E7442839F29B11685C714799FEE2C9EA7046E914BF5A09
E12917B5222EEDE8BDAA1FF2E325838D8F32F7CC6C0EF7F7448B5F6C093336591126EAA00532
A7713DFEABF3DD7363C6E792709B4BB598DE938B7D401F593381581D98D9CCD7BCBC4392F15A
70E3ECE5D2768687CC471ABC49A410F0D87103E22CE17E52520DB256DF5DE2E420F4E8200113
99902A5D027CD8E31D78CFEED0F268C26E1A7A98077A72DE66AE25EBE1AAFF40AD291F92F06B
5CD6FB21518B4D4BD72F948DDDC723A4EADE19EC5587ADCA1662122FC79A241FC45B15096F0B
A97AD3E001E154EC2C0C22BC3856EF5AE832ED101421F8BE7D4EC8BC0BFA06F294DA2D4F4968
11F472A6D4F51E85EDA4BCCB611CBD3A002B87B6D3704A9D80D15068ABC49D2D0D4431E09942
E7482F9FB3883A9DC2BE22B8BB778E308A6DDE916F06560F6AFF0F93845DBAC3FD16532447AC
0C518DAFED79472541DEFBB6D5DBD78F46E3F49C91F79AC0D0F99B0E588A1E551610E9B41017
C0BADE5BA416D130DCC8B129429B28375A2EDD0ADEFAD091A11D04F0642A233F654628D4E70C
B7869BDA9A28B0E4AC99AF29353DFC156AD72A1056331117B28BD4329B0B938744747E0DAFEC
04033E1CF8B05419295F1F5774310A6AED85891FFA054FCF886858D7B1D1481E02E7C4B6BCD0
FD1E1FFEBF8E9520CF563BC402453D1E45D68918AD785474D26434DA3DE8149DAAD1E983478D
0ECD6C4DD77474A90B60B41154C541DDB1FD80E434F470D9B21CDA4D4FFB592C99B00BC5940A
764EE9E6D0725B81014A9E7A44282A87457350CF99FDD279DB1DC490C731993F2FC504C6A8F7
34515D1F46087C7619FE649A11C58A090D144D451198F48B73BFFF82FECA93C6360EA8FE0555
3F57CE04C6288356118CEDD21D8386672619A3D748ADDBB29F750B9882CAAF65959A4ACDCBC5
740DECFA87592CA5079F44A8560E01255F2FB9F029F5F08A4EB08B9A006B47D7D1F9C85064BA
F76B7572251659667060B79B67EE7F7F79C8DB21BC8ED3011D4E2E1A187650CEF2BC36746CC9
ED796AEA866648299A8E6FCAF055138DA3C388F76EE6D85EC447DCE08512F09D9E7F85A57FEC
09963F099DE6179013ADDF838F40B6EAA6366BD5C3950D75F95088FFC45FC384CE5C002F3B7F
05CE3B86FF563CBA4657D2267F9BA87EB95F4D4D49F5A7847BC988578164D0171C0A6AE8D256
57B91178EFB221211E04CECEA5BA4FF34BF98DDCE3EEFF4EBCFBF1FA8DB4CF8346961D5BDF90
8377087FA832F6F95004A16060CEB455D603FA97D8DEF73F28BC5F5B8A9B0F690E0E0AFDAA4C
86ED5451CF58F4F017212709F0087DA5C2B728F14FEB24DA608AA42A1678786DFE8ECBF9958B
4BC927D771660DBE3BB0054BA7F3E1F96B746646DC1F8E6690C4223AA81E8A14DF5F894E291F
199A47178239D2DD2C9721EE4C2DF640405B2C027CCCBA21F0FEBDDE3D777F01F151611F469D
0548A32FF5FB61A8B13444C12291AAFA2474A84EAD955A516D7C8FF15CBF1733342AF966987E
50ACB96642F1ABD97A2075A800DAE4006C1ABA2A6EDABCA47D9D96E1CA077D5088838A026824
50A9E1F05AA0399B8E5845A4C35EC8BCDFFE20F1CC61BA1D6F70B9A159A5B4B06C119DCD3E71
CDDF583B24146F6D9190D9B1C6A4DA302AB56B6346EB74742B76CE972446A8A83699F7E0CF18
0DCF6E11E9E8B8B4493800102D584D21CBD13BFAF935D6BBF54D37F266F2F963406C094E3C5E
1E69BB7144C9B6E9E288908E13B7DE7A0CF8222B1D924F4B34C2415B5C0762F640F7E0FDC811
2BB54DA961BEC6A700221CB8EEB10744C61378070B44DF0CEA55EB6A8854562508CD79DF49E6
3F46225E4F1A1ED95B204189163AF96BA13D209CF36F356B06A02DB88A78B296F2EC4E446CB5
7FF35E85ED58B83D11B56686F1535FEE6EEBC67F5A512CE71116E1F3619623E3B79D76B3DC26
18C00B1B4B640EB1EBE8403D87C7DA2C903AA7D7A000FE79A2A9998FB959E536CCA8D797D52D
95B7928FF4C4BD4D9BF8598FE2BD2246568003024C2DA984577ACCCB0126D8565A2947D20DC7
BCB977ED8594E28EE728393E1F5ED4F85ED8F82B1BEE9C68DDFEB15819B86E1C9860E7CE1E63
4D6B19BC1FE8523644A0036DB45F158622F355957B9B0B3755BE02E26474CD5B88B71BAA51AE
F06FEB5EC508D2452109340EB357D830B3F622A79914956AB93699DB85051447807E45631D61
5D04728B4E5699587E9473FD6B35D84DDA46DE779970D6AC5984CC039C65340FF74156B6D189
4D4E5BC824004978C790645D22C0A2E1DBD1E87E9959CC1D89F920F7B631CC44F751397C28CD
A0621ACE51390AD044E78B76AE6AB36CE6C3F08C4FF6B71D8E995BFB2B00F960B08BB3F194C3
5319DF5D1E630F1DB3E680BE444F8E713222E672A5B5FCDF8F0476D8AB94C64DBC0CB0984354
7C1C230648D86F38E2102B7F1BE5F9D3ABE9B88BA6E9B86578074969D07C5F3F7CDBA1E17B01
F1E736E0EC5A6BA6A452B4D27DB5F09B0BF9ADF879B4DF389656495B2DA3A40FB574BE94508A
EB1DF666440DE5153C073FF55018CC0E937B377B50EEC7A6D03F76698B2AEA9C883705693EB3
E641A81C44CEDB8322639BD02BF782F756C1DDD99CB09A61575D64D32D82F33C91D3506B23DF
1BB4475530D12A61512A55E056C11B29B3B95105F0C230631DAA9F5EE01542540B47FF32FC9B
A00AC3600513712C07A14F8E5D925687DA0E6165FDD9ABE00079D016B80BA45C72393788EBCB
BFBB16F54D4AAE5C922F9B4AA8CDFDB84112D0EEABD6BF14211257205ED5E3D459FBA0FC946A
EEB156B480474BD087CC6F0E3577461DEEC3FB4C6FBDFC42663553DEF8559041EDAD0935E7AE
0E72FA568766D61DF49C56B04BB3E9A9EE894320F72BB0112E9BC299B87F0CC4B65ACAF787C8
42A25D419CD7E2157358AEDBDE5A2FD4CA42EC1DF2069F078BF389DBDEEC9374B1009880A311
DAAE758A5B8DC42BE8C559DA724864E92E14F2D535F14D6CF47442127F3EFEF8F302EA4186DA
DFEABA53E76C87E6E6CC7467495485CDE0D6B760374AC8FB2CFB003FBABC323AB8C53B09E3E4
DCA438B9EFD3BA3B64317AD77711DF2534319AAD523E72EA9C46B074A094E459D1C314A90A8C
35C12221434EE3AA59AEC2617772354F1C74C90C4CFD9D80904C2195B94514A1276808323DC7
3FE091E413F6CF2A2F5D43070D13EDA092243577A214DE4D92084279188BEE95903227FF1F74
FA2C22868AE5D61683B1040E0B4C399F2FCDD87D75CD4C0C08C85D77AE5BEB1CD06B246B3DF6
4E4B6B641BD015EE3980163DE060DFF28244E31193EB37687B60BAE853B8680307E26978121F
CD1218158F1DEEFC669CE67EB3879653E8C473C81E150BE99204F72443BB2698A9F48FE3BB28
A561BA087F13C97941DCD47149FFFCBF4181A86F0AAD918CEB2A83C162FFD95C445301A73A39
9F7966855A1DBA6E96C9C5048067EA5865DDA7EE10F1AB67B42CE294A6A0191FBAADBEC0D69A
5D9233C5E07B32FBFA815F92AD86C60E59D06C4FCDE5D96F399A2BF54478887ECFC7BEEA3809
DF19680E809552DB4B0332F65A8C1B80EF258260B2F40D3CF0C05C0E30F0B30D34407A23E091
D2CD0338AF4BC010B5679A4A610B6E0B961315FAAB86A271CE50577A8C27C801ECBAA60A96DD
241D01102F4F01365E9921C1AF6738A92D0ADDCC514948216A8F660F803068E29FE76D1C3460
BD961C0589B88A465D6DBD097A711BC0AABDAC1F08ED439A11603E92858F75C167BBE68AF105
D2AF9B2264660F9C2A2E4A8F7CEF83BF1B6358ABF033A5A77A32F82FE5ED680442F72F6A00D6
E010F14AAE45E514B320875590B94A49EC661528BCE703DF9B061C729B2A12B3CC473251C44B
C51C3C17171C90E67A3F7130A47E63F69910EEA4BFD2E434DC3280E9D98DD60F0D998D0BF1BF
62BD4FAB7D586533351370FC617D3BC91DF69D231736F7D7A3F32B0C1B581593774AD2CF457E
97A08A7BF06E7C2C1E6EC0919A5A8934359AFC5EA578A97D8381939651E431255566F16E7877
AE07A27A116C80E83716EB2C41C65E82895F06A84BFF6CB3D47C3336A849BEF80657B8E12012
0D2ABE2834E18898DAF75DE9A9A62D4F6D471556A1E29DFBFE3FB714393E174CBEFBF6F2E554
7147BBEC78B3BF6F4F41B7B646CA9FBF2FB10007724674FCB5E4643B47C780278A94717B2F12
04BBE94A35F4594E1831B871B1FAE7AEEBA9517B8174EB02E491DFC22458CBEE7FFFB042BF29
6C61FF6E31AE2B562154F3703A326C7E333E50A7BE04A456C053CFF9D7B6FB3127FACEB2E944
4D62B8ADB357F515D115A594E26A9B412BD67C03D75FF0EBAF9195672A78CB9D2D12B30E81B5
B29A7BE09C9603FB5345A8491FBF849D43F4A8C7E0E1EBD1FDA39EC4A80CE9AAE79F06DA7FF5
26B6C887E468EC66A25377BE2E3CF3629672F7EC98780C5E9F9EDFED1ED16A0EB0525FE1A4F8
02194A41A2029F0FF97FF2BBA44C27EF231E9AD7D9A5979781F5E6260015A2DB1E51E1CEAEAB
11E66F69A78633CDC2A5055C7BEB5888EB5256B5ECF65071CDE59A24D98E17F7921EA080032B
DF6F44757F7C4B7F27EC6993511CA5CD4B1CD64F5779E423D99A98500D75F4E83AA2BD5D64C1
FB59231708AAF92541E013B83132B05C88C8DCE24FA53BC58C24698617C2A0C86C53F6963248
B4DDC5C9FAF7BE56F6E3EB375445D2058E0388080AB9A7732F6B72AEEB093CAB2814451A13C2
0C9D89152E7163F1D8712BD7D0A7F6FA893047231B2B0FBBB55E2B006067810C69C81E1DF174
47A36C198EAC9A5548E66ABCBCE607E58AA1672464615FFC9C5F04D0642F08203C81AFE01722
B2AFC927196DBF17ED5411B11237096A770FA4B723142BB0743141E7830EDA2BA2B10C44BC0F
62550EFE38C1FBDC9FD82EC23828943E3D52C8750DEFD37CC754454DCC8FC535956020BDB16B
22B8082619A9CC09C72846BF18DD29C0E685167F2D05512CF242C02FA3A38C5B901B3A94F520
7621DFD2027FB5EAAE793C215A6839B6AD2635F79C73BD541EC2B9B7E53D4DB464095C01AE4A
6A86F7EECC229B740D010D86B454AE6DF8964E38C511B6770DEE0BDDB673A5DC97B7194E0FD3
70D08BF83DB25E41EAAF0A03BDD03A96E0F5F93FC1A09DE60616E4ED40BDCE87673FB17BA7C8
4510521A233E0E440BDD48D68489FB175572F83F8AF8EFE96408A11A491165E4961511B8BF63
3DB86BC7D535EFA5EC6D2ED684FAE4F9C6B4DFB3996307BEA8C42D6525C3518A5422F5B33620
9C225484B8E5BFBB43FAA8100A0053AF5FE334651C5C3402F31A20349BC98912EDB274AD00EB
BCF279EA71ABB924277CE58CAF5689DBDC9C84C6A9508CA7A034FDAE98C97A7EF3457C6F1559
99AE90FEC79872BA6E7F84F6C305356C084A18C86E1D820A0972ABFC39C2002148AAB55723DB
9691E6F761180B63FB07740F1C37DCE05EBA401AB7A81A114DB3B1A20B645184ECDCAE8F69FD
92908F81269FE091912316A08F391FEFAB7DFFC0EBE17F42AC080ABD31CA950E98A1120E26A9
432F7FA10A4FE6216643D3465177D6D2AD980E49ACC9E7AE94F45B9F5CB3DB7FF64CE4553F14
0974D53D0987364145E3B3D314F3EE84C4DB41C504CA857A666034EE63CBE0B2291E5009A1ED
E0DDCC091B364D09FBB6691C2B5CB07416FAFC75F7A0740A20DB38857CE320C9789F4DE2C683
D5BF43A008043B992EC418DE5CF67710DDF23D0E41C987D5A923267F4C982D6EA3E2E75531FF
ED9C34150BE97DD3E427B4DBD515988EAD773E349162948A60DD6D964AFC237B4E181D3D5B16
997CECFC545285899851B42DCB7D7A86D736476174FC407D8B579E9927ED72A408CF8F5268F8
9D9EDD823C5C706CB88CC63DCD3772949FFF79C152F3D70B40BE7CE75ECA2863E3F2E5FC31AB
5371AA23708561B0E7B7B212F7679BF6678D8C462EBE359A16933D0D677C37F17B4826220005
B2F3158DD3BD058761EB21204BA41B85BB3F94948169117B6E7594269CC6B342DFF97876897D
1073536365DCF04FA7CB4965C0F2C64BC50450828347D2C3A8E498B0C778579D13D2912859BB
BB8A6F0EDDAE567F6EE13FF851F46846FEAC42C20D3A10C66F7E1B6DEF566FE30D03AD09D49C
1E9FC6D7E008929F294271CCD10D69C8BC677479EEE7F541DFA24B1E0E830A475C17032B29EB
60760062772CDA745D41DEF4C69D7860CD1DC65C9C1E258935A0F53CE5D73EA80B43D5A944AB
12B77BB462ABBC291B077DBFBE7C7CF07AA9476D1E1D51BDCE0B26C0FEF1A11A867DCA3A90BE
E0D4D3A18F9B7D6498A0F0C355338026C1ED78627BBB3F2D768E7A8B1C6C52DAC5638F8D150E
359F37C4F11E76B9E47365014124D072CBEFB9ED0481FED2968AA7FC275256A041918CE49D40
6BCEA19012BAD4395464AE4784D1AF90223EAB3D5E58B311C074CC6090FA247A000177BD3126
FADE485557CA4CC6300EC2BAC3490528087EC5915B85939EFBF6A4A79B3732821EE633D4D378
3791D9C0D526BE4B8806CD3E80BAC6E2B65D712BCD159634EC4E5326A88FB16EE1EB59880365
0B35A28397EDE99B05FEE76F4CC5508520751560F7CE85163068B60A29969200FFC061DC0500
E68341A2D69F448369917C2E18E0BE7F89D4DD5240E6A7A864D9EC68D8C3BE8AA377EB7FCCC5
EB9898A244A06645E9F61DF261CE06C434F04CB82EAC10D6F9F78F44E628F7BB78EC749F92E8
3CB07CD582B097DB03260196EE438B5BD23902A651B3CD071039C0C6DAB1C874D86BFED81772
06CA0BF1765AD5A000D6C77AADD6470CA380FF6D8130D90EC080E2DA8B96F4CB7B51FFAFBEB8
D2C293E98BA6DF0C3BE128C4BEB20917E72CA6E963F4AD0BFE581C1DCAE5D26DA2F3DD6DB331
18C4210ED89F08135BE439ACB3FEFC0C6614B112C8DAC76BA1DBFA598131D5DB6D8CC9407B69
49C33C2A898E2A4F51BE311DB67D0136E098A3C1794C01F6297D31E6BBDBFFB250E5234837FC
418150C7C8E18777D40C1063585D113EA26B8D16BBE9079B09D77B795FAA9C7198D8A8B08AC1
493066030F6E4A65F9EF4D5FA6D6E0DE4B8D94B331008D29FF53C1D47F53E56FBAD44030504C
B897F6DC29B4BA046C48EA48B75276256967533F7522F6E86C430FA3B30240B6F662699CB284
B553F0A1728D84F45931B46769DBD8FA9A0CFC2DCBF69FB624E83C1A06643D45E40B685518EF
2E0BC3EF47417FCE41E376AC9A14A6D458024279637493F2C50B44AF9D32521C457583EFE408
3090CFF73C0E382C865F6995C7044B5DB397B824F1049D7AECBF3ED9ADC4FF9D312596A39957
F9CF8B20AAC012AA6D8C4F01AFEE283374998239280BB628C54227D6ED9FF6AA64C966AF1E2F
424D25A1A43D77FFAD821A7DB0EADAF7C3669B55AEC7BD0E74E4B314215F341001A9C405B6C2
C12516BF0E9C37D0742923156CC7D49F86A8CC33C8996E093EC3B15D6682304985CEBABBBD77
91748BAF9DC3CA738DFBAE8C20563D903E9EA56A56B3EF62150E848E6A34D80AED8B7F480536
7454F26D4D4F139C09CE2B8984374B85EDF4B88A7071614ACCF5ECC690CDAF14A186D8CACC37
B49CF19E5EDD35F480A979F91646B9DB6A24B54403D730F4AC18E6879875DE131D77DAA5624F
78B2FEEA068F7B2B756528F96CEBF6A7645D15384DED954588C66D41B1EE8105B473DD237BED
D675024003300C3D9853D0A027A443A909154F91BDD9EB5D80D30FEA2E13F3FE6F7DC734C01F
230E8128D0983BA520CF0B6F9BE89F4EDE86FA0A287123A6FA7C9AC4E32B6DBF715F0FDB69D4
355DF7A13B6B482F0F8822F4E7AA98218CEAE2E7693550C43B59313AF49E4992B54A84660876
F78206A031069D620ED81FB3948BC42C7E631D0C0D667CCE4717B7070B5923F0BE182699DA22
8AE48CEEBE585FFDED8E8436D445F60618A5EC5059E49DA84B82B3822E2C5105787B58BA9C60
577EA75983723C83D8F3B3AF575D58C207B662E168EC0AF9E9331476C27FE7E8A8FD41F61CD5
674AA1FD75807667FF6654369ED6FDCB30852DC0687F2CEE8B306EF5E2258B877D06F04C7E69
94B1D14972123E1FBF21C781A643E9CB840CFA7FD3295A7AEDB1A2FDDBEF058152C517B952E0
3E1A7B5F9F70CA6353423AAA27F1163862EAB3942CA170813F6610EFA058209F3FB0C52CDDDF
4934EDE80A5C40AE7628C857F16C21E2D09B763D196633B47C1D5A081B2A78AFB915545C5BE5
AC87BDCBF231E098CBA8E9EEF4B70411715BAB98BA6E9418178D980B08C5667818A707478A3B
FF4C0680FA4209D35DDF7D0954D8A420E5D9AACF8A9E497921099E16A68C687E58AFE687EDC0
7EA6F0E4E4F99DB9D732BAD6DA1ECC10FCC658FF1D24730AF2C59A11782410820C0A3066E7FF
A72B848C897815EFA89F384DA5A5B9A9A898CA5C4D4DAEA325F8F3DE29883524C64A2054B0A0
5AAF07E7EFA900581D0BF810B31F16619FEBA8B868C26B63C3AF09FC9733E2D5243D15E42FD7
A39C6CE81EB40675904E9EF0876877B34E50D7354E4B6AA9BDE2ED5B1FB0736D2C3ABA05CC5E
A489A2CA590D51BF0BE006E0FFF822621DD0FF4CDD33315242C343B9914567D86070F984AF58
9A2AE620CFC618542F7BE6927C798A3A948BFDBF7F99870F36108722CEFE84B1C3729E042B02
E9714CAD4F6BCB483A5D86F431C481E941254F953569184E8A9435F72CFCF8015624F051F309
6ED027DB6ADF2EA4C21C1477F67DAAE88A466B53DC95CD8C0FB16317242F86D9482DAB615591
B9E90F1CB7AC3F3B07F883552B006D94206B2330F9675A1CD9B73B14796C2CFBB3CF663B0739
A1FF6E293E15F1FD2118BBAF0C3A7CBC8D416955F2F341A650BAF91D4FDA1EF465E1DA5EF37E
E424618FA13B6CD57E6F81A9622038B85C12AD37D7A5AF08E5B705D70C13B0425A9DDA40FF03
F6B71B4C6763B1B974E7DE96D97F815992FD6D52C58E7746F7F0F4DF9047D59BC95C78C8A293
68662892E764EE75E95FE7362AC1BE2BE7C6A9973DE446263240F1E5FF66163E07A9CB349843
4807E0844385B28E19672A21B5AE8FB884B37D6CB516DBBCE0C16D3CA743C82FFE103F4F3465
538F91514B5B3728E90D1CBA4572360A8C7B9758A1259D13AA15B27CFCCF7725183B3D613743
B82D6CEEDB1DC252214E2B2C96B48AB392C95EDD8EA5C3D90D2270D85F7E7603E0EAB3F40E97
E3FECDFADB5C7D401F7E1837E7A724DF0707645D62CA1018F27BC9568B729D933C5BCDED90E4
BB2BFE3B8D778CA29C7CDFDB9754668440DD5498190A6EB0D3A92575DA74A343C75B8FD76F9C
1CD17DCBDDF3AA0902E15F21ABFFE960D3A0DE2BBE966E14AC6F92F1877E046661038CF2C93B
EF32AB9EE962298845673B0AEBA5BA583CC7A1CEB769911DDA93CF0D7D3BBE05B13E5E0A036B
309E0B2C35AFFF81962D690A31EB81C5F7AE0009D2470F3F8B0359AA8C06DCBC1C9D2F18B95D
32092A3BEE89333626C50DE255A1D6BB372D6F42A889B94CC0AE738633ED506B06290AEC03BF
F8A408362C6DB908BA796985F45FA27F22BB1E1020AA36B7166C5633FFD4281949BA5B64B874
BD0BFDA5307BA5846BBD6B0C6F96E819D05B97F3CCBB74C5F57B6DED908725CCA7BD4AFFB7A7
88C82067D5D756A299AB8EE0D1654092F9846F69F85CB491C24879F7214FA0BABE4FB1B1DD92
40048BA83114904842B0953A568D1A813F367D79E07079F65089DE8BE87D2888C2AD177B0618
A22EF0C38FE0F81DC0969DB1B32893777045481EED7591618CF3C804FE0BEE805596C1822E2D
53A34E29DC5FACB751478462F06348EB870D1AF712EAFD412A49CC3C519A231FDEB2C64246AF
CA61C4C43D11E1871F02B663EB763364F9B423F46623506200EF7CD6D65F8EA86B916E424DE6
5237FB22C8FDD1DF7203CD9BD12A1F4D7DDD2E8C7F5974571BD5DB09DBA441E05B208034AB1C
82737104F128A89685F8A93EAF975D36FDEBDC62A77E79BD35B9EB06149F8DCFC2E923B2906D
79E7C964E10D967E9DA5A625BE3D3ABEF77563AD3A903CBEA12DEEDD3D178C147E43BFDF75BF
F96BA5EA00BB27FBFE03498D508801C8A4D3B3187BB8448FC2F9BD95ABF7866ED9B62D22F896
F15F4BDB0B5CF2FF798700C1A48B4D02C3ECF17E9B0B024949859318228E676967303053200D
8F7E2F4D7A31D7FB47501376D1234E59B72265F3C2E2640870AA4EFC8DE38F334474CD017776
51736A91105D651D1778F0AFC150A7DE7E46B513A5A45FA79F2067D383001A14FFC25A17CCD9
045B14C504A59EC9407B2ADC2A34DAB9BEAE76C2F2A6F5778918414ADD274EC37209F320FFDA
310AC168D176C94AD9F5EDC0723A61FA204411DB939E1BF75CD7F514388B5416285A3F7C5FE2
B5CC742B962C7D0D8FAE0D5BB8654C160EB9A0134A047A5AD68BC3099528F11A0648464625CD
C62440CB2D357F72DF6207C27D5572ED270C374EF28907E61D8F7D720E198CBA66FE65EA9BC9
3ECA05CFC78306F88746DD8A3E14EE8E411389BEEDF9B489324F0E7CD79909C50F0BC05AD501
E2ED9F881A939E824A70DBA22F7D059E3DB2B075D64241D21E6C67C0408FA2E878BEA4BC99CE
6025220C2A9FFA6E54E555E448D55107A233F156981DC65F9A0AE30138CA3156E77A6BA13DBC
C367F5A7D221C9CDE66DC282C4AE3751FB951B3C9412EFE0F7F4C211C1E75C3AFD7AF08C78EE
788020F645D41018A69F4F1146F1320914326F819AA6049DE34C457C0A504369FCE97ABE830C
60BD580F376CB14D6A84D51FFADF53BE4E8B6537E224988B3C1A62260184FC1A29943463F28D
AB00FE650E035E9E2737176FBD9B0BF98EC153A063F12229CF37FA423BC3C8C26C91F630F2CA
C7308B666B2CCE76F27FD26B6E30397807EB297FB59C8342678DFEA1A57D82D2B653F41068AA
AAEDD110DF224CE92ADDA63744C94926F7D2DF8D5FABBA08919DF4DF5A16E344DC6D7B4626D5
34DA7FEB73B1C69E9D92AD0CD0DD28547236ABECF0F99E1884E2F9A11385F0A67126F2838885
F519444DEFF3F914AFE52DD48F9EC3E09057D97860ACC29CAE2467399DE7ACCB4B5801394E8E
CB283EB6B0A5ADC5C41367721F25A0337A51EFB905AD2E2C2CBC5C2DC763EC1F844DB6EC8DAC
A2D90579F4F68A2B14F5AA6243D5A2FC356C1B2D53FC6F847ED64B2971B1E5C3B75287A674CF
994554F0292A06397A2C377B8791D0CEEE47F89752FB47AF925B376F201DB51278B9BB32F00B
4C8682845058F7ABA3FAA93E7EF79F0F18F0C6E031912478F16B0E37895F57B21315D5B1422A
FC802C95E3327F5FA032E51079949FEF0409FBB3B634EE24893F8D54DEB680F20B27D932507B
446B5D6C556A7BEBF5E4A67FE0A658196598FC9646AA9E0DD0563C7C5E8BC3D9C9ECB25ACA2C
3F0A9D0453E9B8C5BFCD1E88A4BE48E625A746DDE80F07D11EE24A6F1D7C8A0299BC5F878133
6B4E704D077BAA339BD774151620FEA58F9BD72F781EBEAD39A7E1B45A0AC05A0F03195A0663
AFC62A6DA39A1A782D79019629A58A90E36C01CC07B13139E2235E0C2F5906667EF55B3F80A6
898B797DF0F496295185E1D6DEC9A25E15FBC339D825AF9E3659DA75A88B2281A641797B7C09
AAC6EF2FF49B7046FE129C30B06989DCB5FF8A30FDA68F5E6C8F2F3EDE6D1CC50DD59B8F55F0
06D736A261EE301AFD3ED3D917657A509DBF2CE4318CDE9201D33DF6D131830CECCFBFFAB2FA
3ED7AC71D2DAF21F79E0013D922ECD8490B9C94511B3F65F4E068BBA1D14872120D676A962F4
3D2D48B6798CA4818A97AFA91E8D56D6DE025C066366C3F45F09194096200ADA26ADB977ECA3
B40D4E6B9D46E501E458B1CB8D87FE3D611E769F61866E111F908B6163FB6A09084A476E5C7E
7DB799186ABE1B9D0295CF9CAFE62F56BEFA6507EC5A54FD7F2DDB7AA9193DC1826DF77A972F
62436EA9B732BD9FF13E5AD3CD63D9D5F2DF7BADD990FC54328A79F358B021E7EAE28EB30499
77318C15C557076280CA9C7D7F9F589CA8333A9165EA841C288CD349DDC9C14CE84E45700C2B
10666387C36BB4E0A6B287C54646387C5CA9F2594FBDD781A2110E7D8F88E1B62773708B2080
0F61FF4594F151F2A4038A6C4DC8807DF53CA19F624592981CE48BA2B227242D7FD31E53B4ED
2883DB68F8861AC3125079F2A19AB1474542853EDF05DF2C8B86030EA36AE6D4A6A1BC666B3B
6D7C0CC5270D2BFF9DF383456344FA4E9D98842097B6CB3D75061936A61D928A98CE57BBDCBB
34C3E626F29C40A777BEE4C2BA779721F527ACFD1B904F9AB7C04E84AA2AF8BC85C52C377224
EEBABD3C3002E1FBD5ECB2DC9D8B3B6AA52B63B2AEB8CCFA731946D02FBC7DF94138441B7D57
4413337B0FC4B147FC2A50CC9AC6F9BACB9FADC66507426C39F8D6E1AAA48E3CFEF36D02237B
8276723D29137D67910774E7AA0B7E4E6E0A4BED38C7CED840CA7297AB14CD756C4CA372C82F
20159C8304397C43634D07262B92DF47FDF5CF44DFDE01318064612576A7318BEDCBACB47609
B78B194331987787B80034D5CF40C8C4BDA0B578D84459876D15EECB0F374B3D374FCECB7822
228409F5E86AA8E79B4005EA958B2E3CE0AB4FBABF3C7991FB2B2F2545B8EBB34ABE566CEC70
2D92516E68F8E7EF8F9115575E5192C42EA09A348299595ACC73FBCF337DDED714455FDC756C
F287F0FB21B35126091A5D2BCCAEB556BEE0926E366BE5687C9C994E75C448A11D69AEF8A43C
B48EB73BB9D8AFF4522C683AD7486012B76C6EE7F2C70025E15B198A549F30D2B9A501497074
C535A70219819522D2CF02E220B02DCAE953B992FA517DA35E120A5EE60E74CB12F45B0A6099
051E1A04B3E3BCEDE5265DCB02D302C3E0B992A44F7C95480D3163CE711CA9278A04E92E7952
80E997EC94DB64D12F3C7F6C4BC4EF0948C4D37421C91DD81F8EC34C3B4C40771D8B9ADE15EF
319F89DD97D2CCDC2CBBEFA5FCB5F2F65E77745801D5712924B4D8D420C6B74E7C22E35042E6
0C501187211DE5BB6ADA2AF018C0BAEB728546517D11C634983BE1C91B5DB349E2136EEEB875
C6D60A8CD91B203D94787B0F81B8AABDC82424046F28B1851E44F4FEBB9769ED5060C7FFA3FB
721A0721130B724CF93903925A778FCEAA8151DB30B6091A9E03581F22C0D36693B6A217F0C5
150B291CF2797FDD812B62BF665ADB98154DCE396162DC808A6DA66FA1AF8F9E4633274274CE
0E055492B27B0DF16BCB3F99D00AF27C09D8DC38E14EC4A73EFB4161142893CD6E7DCC054D6E
53D07436D797A329FCD17CD19F9C402136EA4C10639326440D53195BC96DEECD52B002BC5769
196B3C6AF694E6D0D7241D6EF6D39DFDD0B9B2F67ACAE57A898689CE09A75F69CC528FFFE452
490B46F41F8D4E5CB034DCD4ECB162B5DCF6F42BFCC570CD7D5B6717207A234D555831F91896
AF58C29A644F2F17A80250D917FB65DE01DAFB3352A90FD8D594B02C294337BC237F4F74FF55
EA14AE9818C0D0D216BF57F782356518BB55F3A308F4AE2D00585184181C5F5FFD5E509FE50E
2900F8F9B60250B711010AF2CD9B62D649C50F2AB058A347C23CCBE65ECD9739A4D2C8011337
11CC19703BA937A93BAC199783FFB0628474FD49EA6669AA8A9D8F1F50992B595B56D19E277A
4AA0BB758990C5A015B02EAA261D2691B4C90D62D4B252A1CADE0876544B886DE685A52F985C
A83D494DCA883972718EC3D06EE90AA93144253E780A5257C95666D09B2293B60E4FA2745C22
75CA21EBE83CC9B922F76A31D5560E0261706641EC3974529DDE111D46BB05F7076C383A564A
AD7DB458791A5E94E4255AE72E73EA7EB384295AD6E6A0332707C503136D573D0C9E2C6DAE90
98729C5E3AD709292EA361D8A6E274487C30EAA59CEECFDE44D8C52D7E995153B5B3C16BC893
93F1248BE4B0CCC815EF8E93D4A5209A6418615B3E503DE6FFB3CCC29C91DAF3D8129C328960
441E898B9240ABAD0D9EC97E1BCA7DE65E21C9AFA135B69560225C367C61F34ECC7A2EE23386
E5B663AC5E9CC500F6FA3FC5A53FD4899A0F0FA0191A56403CBCD2DAC72D9025F483CDF602D2
09D344E13E38DD528A22C4BF4446D14172B3B27751B999EB16565EEE05EF5307814897C9EC24
AF999C38C831ADB5EF8E343E8AF4D287C2F3B135A4DE50A3451341E57AF656769513716D8ED9
87114FD03C58AD4A3FAF657A9721638A87F5E91DC450F3DAE6C7A4A9CF7CDCBDC41F26DB34D4
9F4D29CB2779F26FEE939D26348C5F2F360DDFB20C99F3BB847E4E040EC808228A1E458FC299
227244EBF4A8ED6C5612E18DCE5C8C6DC1BD853623B00E8F869C4E7FF367F6B4CE31589B9061
8E0BA847484E51B36A8BFC2D055011C9D1570BE190F01158E3CAC0601B155E553096C1884D56
72BE8B73A411E946DF455453606C83C956CF358AA41B3054CD39C42D24B6AD032592A20500E1
98E0A47711CB560FDC6451E2CC9F7238C6392F3918920B25736A8F8403902052AD716002A1DE
C108AF86701017C574EF6F41FB6AF4CE2C6F80AE27D35B42F6BB450A891E6B9B3ED0554C8B1A
827F8DBDE20FD14CFAD4DB331DBECF74D542D5051FC0AF6956D5BD0FB279E8B88AD107614225
33503A73C9E09E7CB8752F2A25D2E311BDD4D2AF80E4C727903D2D8F3FB13926E430A895D39B
C8C35EA954D0412FEDBFAD091063C9D0369F0BCE614F0BFEC9D5FFE44F8C791CED1A6CAD2790
48D8300979B4107F67E68E18B056C13717FE376059CCDA5C7B367E8CCE48C03196042688FDB4
A0F9B26571405953487BD65917C5F436664331EFDE3D12160D5BBB66E2C72B0040D048B0C3DE
1D93EAC00282E981E43DB75FA92C48D486BB2F3729A9FF927BDAE2A2B034BF66AD7B52034D26
04A7514BA1E0A56177D39E8DAB0D3CB74D8BF15677E0AE93C80B635C0D8D90B6433289E94B64
025B8F3FC8F63C9A413680238F1899A2FBE9661AC5CBE6BDA430E979CD6A48D6D79A00D8DF4E
D6FC866F8CB1E7D790361A5CC2D8C8880A638F76E195B7BE064E4752EC1ED3751127B693047A
9C1BF5BD556AD0788A41A63EA66AB23A5F071035E323FD9AC05B2CB85397765099B88CC7D610
2030A22AD02705103AAE6BF26CEB46594A895EA6D3CD701B259023E636A44BE573575565A506
9340EA2C44D768340B81FC917D1EF7955B2C5F49BFC8A960EC62C130ED6D7BF8BDE5D7CC3F82
37A7679912E5A336413B5527C628026E4FEFCBB05C1E6D7A40B0AAA3BB4C7AB6CF5944FD4A61
662308FA3E5ACE551A48F314D90F136785214F5BEA444482D4850E5C33B9344EACCB03D1E793
4B39F9311F74AF685BC293A8A3EF356F93E331563EA5871AC02388C7F3A6F0B04CF69E9BBB88
56909EA36CD1847A6313402DA78E2075D1CB951F214A40687E0338CD09319B203E99802A609D
7FA851E12C93A74E3DEF32B35DA07E42CE6583601C595E305E8FFE6385FCFD1FFFFB290F874E
A104728C931441F09DBD61175F73468C08B134FD464B74EA9AE8F5F153FF8BA9A791F7B2BCC6
BA35DAFBF9EC68A1643A958EDF5B0EC787BC84B7EF0387960E7D6EB6EEA0CA54D518F97B6303
45FD83BA033C58B755EBCC0B7E36156C064BB4828C885B07D068B4B69E582845767FA58CC4E9
18FE3C405311FF2DED2A363BF59547184B6BAFB12F3BABFD75A59822C96C07BDB3D3AC4C7759
02F28908B626629AE2CCBF82F72A4BD074D3C78BA050E0B20F41B614C43FA69AE63FCEAF1600
683145288AEA05022A2389771070E32302E9D5FC230BD3A3D1E23E8FD860C552D2E7D25ABD1A
980C14AE7C8C51BA99081A4E99118C794D9D6EF7E18E7F6F7FC10C341C4060DC59F1BEE614A8
6A9C27CE075EF73657634DEE6F3A342C66D3F16254351E65D61F9E73C4529A9FADBABE7DA5DE
EFF27E8E687D06CED93DAE2128381EB693B17085A259A9550A067446BCCC2F93261163E4CB25
1B406A95E9BB9279C4FD349D37FDEC2229BCE6928948E262014ECC85F78DC9DFECC8C467AFD6
FA8DDB1D341D114741283BBCA084B0F1EE31D1ABD104FAD574B2F7B5F711FA4D345C2B5B3A67
47115422E285C31DA429667E10D4582942F1C42E9EAC8E5E517D59DA3AE182E68E0834FF8173
FA140B0E15052E117DA3CDC87CB6471CBE73A7318A3DD57523FE28F178D4CDF0A22D1DE30216
9837D85804E8B49650B93086D2303742FF913FC86F719BD711546E24F0D8870BD5378692AB5E
E85722CB71EE14E581E7B09B564B52691C0F23363413B7B2494249A3D8C92691A7B157A60012
A4AE44E8A110DB6C5772FFC50E1C3D17BCDE17C967AAD3B9996D21177DE6DAEE9B2308871C38
03DBBE06DEF5DD1A026DFE7BCEA73E70D0E422CD00C9DBD00520F2794E25A385D30652D75062
736D631FC5AB36C54BD66493202129D181D20810118F449FEBFA1B0EE045318AA6535DDF038F
FAA544B3BA1B7B6AC8BEA6BA277694B406CF4DC1C50A23A78CA90F512F380E087FD465CB4EEE
991A82108063C40652FD3D8A09A0F5C5D5CC189518328009F44CC3F0A6A7183A7FD43A361DDA
135F2656FD39A435D6D2C47B7C17E67787EE940EC94054D973590A7658B2D731A9668CD80933
0E2E6214A305A340961BF6BDE4BD27B74ADA09F4D482316C4B1329C8322A9C3CBC9258E52DA7
85170923B152EF5123584D5A35085B01DAD28F5435B0C62F013508913301906CDECDB1A52BF1
84C0C0BFD30DAEFD2B79D2B8DC4423C848DB87F606D458E3D9267797035182B96BC6A0A811BB
E2D24730A732E43C6681B11331127B6317B04B89DCA447AEE463FFCFB2CD938AB8AB4147550B
9D5DFE1457CAE281EE20F03069FD30EF9DA3C99B203A6F6927059C85C257182ADB69BE8586DC
7703CF2005D089B8CA42450EE1AEB5263C3ACAEA7DB12F560EA5A034F2860D6D85EFE9AC5C77
DCF79B064FC81DB1F5E4DD9225F26571940982AF785E1F2E2E47751EF8BD2C1AC7D78D4470D0
87D259101DF5A94072C7E4942CF5D42B95A7B37108A9996311D8CFB4726810252B412E496800
5D6293D3F0BFE8012CE7A5B8BE0B0FDE5D44DCBB9B1062927E36A2E4A651CA2A180AB8A5728C
E13EBCF793522620E34284254304EC85CBE4B46E8AFA5A6C13959E0306B2FE6E1B23F00B3962
868C8072ABB82802748D017815F38B51F2FD32BEF86D57D7E30DD2F3F6D8F1C720E41BA7743C
BE4DA1B0CF3E02C713EA6477982A8EC2C237E682E5F6148B19ADCFFF6CB61C7B426A0AB8B3F2
D148CE4205F3D9EF3EB712E0699931ECA2D0EF3761D05285A511734FF7E5AA0D3EEA228552C5
BDC2FC23F1D8C43FE5A076B357BA0367A2E2440A18D21A62C857A0EE8EE512C6C6BB10762A02
72CB80A555E95F4EE500040CE348592B8AEC218CD1355B1B4DAFC7B4066D94FABFFB60975F87
9336A8BB7C72E1A0BD7D386A3F0B8816018E2D8ECE7F2A33F403051BA0871BE731772A59989C
874EECA20D31BABA08F5FFA968D7A5407E0BA2636301EF1979B932364C4E3342305C58596964
BA95A4F946CFB1337571D4399D3B27F71940F0831B71E50CBE2125411CFBBDE7D19CC437A553
07652C1A2667B5E9BF5A0CF1DC3DD3F7A39E61EF3D0F3A89A47B9D30F67E9B7B74C175F2AE3F
ED0FB242FABA87F2EECCF4D037D21F02E8DF7D5912C6276891153059D67892F86A1CF7CE59E7
53036E71B92B8B0D3CB30640EAB8AA41A865D5F4CC56FAAE41A44A73EE0F6DEBBFDE303DD98F
8FC7D71051EA78D056749D9BCEA77EE25D5EE678FABC7DBFF4AD993FE5683B16B4195BF2C39A
97BBED78BBD056198A0148080B78E59F5BEEDE2AEA17A24A2A42D0601CC0095E54824784BC22
D308E888192D533DB3AFE739CDDFECF34928414641114547F1BD11C6D4E691AA899C3E7C991A
3001707E5C1BD986116E09B4DD37EEECC0EB4024B753AE22BE6D12CB8F812F10575E0CBC15EB
D6456587C363700D6231B547DCA52F5E930CC4F6CC530465530BEF7D2EC2B8EDBE85F3827EC5
28AF1ED8AE63AEDCD429F4891BFD31D51BD423A030254B37C0A9A32161715AF612015AE8BCB3
FB4133E1571EEA460F38F151C606A1B1836D224CC73300D58F4FB20CBF091E0A56B7B96ED963
80EB667168F77009D1AAB2509E71125F90338F67F5551508DBC688EDD57B67A59E4B4B21EAFD
619CBBA3BFD9B529778756D217A4A068AB0C8F2E42D4D0358B380B093988A3B470466818BF94
8E3AB10B968B1502883D5628DB62A267ED41AEFF4DE13DF442128BBB1CD4CCCEA80523945E1C
88E47120A2E9E271C70144979B7F014F8CB7C27A647D083FCF03F93AB01F129BB4170A8A5080
0FA1223E3D55E3B4E368E5615AB37DEA93C8F8E48498E69BF2BA2308E866592ECA62E0813705
1C89CE5E84FC994070DFCB829952B960F075C675ADB0D4CDE1BF2C11980761C176D6A3758825
C350EAA67CFE39F5B21D5DDE79DD16287E11F91714E215C376DE09C8A2569C0EE2FDBC8EF2D0
EADCD1BFBCA33B9E3DC34E386E9ED805CDA22B585BB0C1AD51459CD66734E5411F1C0F4C4C38
E39AB6EB21FA6D5B0DCAF657C12A4969674E725E8DD1D6A3A42ACF21183B2772B71B51038EE7
3DF13D94171BE3B1C17CB3E120DF06CE2E1A641C038E39EC4A1761046677A22AB8A39B5F8D26
A0D2ABD016A1888A4228AC8A0228BEEB46CE23DE9B246DB2C8BAFEA0EB1B051B18A030500025
A25DFAFEB86B374C596DEF53EC31B011268DA2EFBE99DB59ECB35DCF185601739B779D4B7BB8
D6A0F53AB50D1A3872EC0454D7EFA82C42BF10079992721C69580E659D91E6FC2FA85BFFCA63
79D4869585CE478C4BB91D3CCFCA08F0D041B514AACA8CFD1BF58DC85454631A2B5B9C0A9403
7C226706A5FCC418F3C7419368DB25F11528E31552EA40D09FE274FA9DFC049377E6F2098A39
28E2AFAFAA4E1AED08B423C4FE6342DAC7FF8A4BC9AB1FC4A18CE39AB54F1798B694CB23A6A2
51EE4046D8A9D44D0E18B9CDD8D2AB7F9EAE4638FDD96CF2F0E214D9ACA40DFF5EE2FB0B6EAE
BE2EA45BC8F9B34C9BE2F6BBB7BBF053C9186CDD08C684E4F122889CA45A8B7E8CDCAC2A8184
4405C2630CC98A605CC946A2667805EDDE40BA86DEBB04A7AACD275A38CA4048D4ADB9C80E5F
D2267405678EFD8B616E4F0312EFEB5B2444B7432A17AC57642D14D825417038E8A39DCA1CA4
AA797C51BE758A0D382B6A0DE4FDE9C6659B69F59971849F587E3935D660ADDA36B3A724EB77
A193EF9EFC7012FED3B2995069F332D99975FAAACCF7D41B9EDAB47F71095A27F7BFC19E6E49
BB58136EC2B18A073A211E789BF5436E7627EE8A22972FCFE4918F6501865D25BB485C925141
698460E6827574926301E0F4762180B56047408D22F12913C2B45DCD99117AA37032A6D53D63
BE626127AFD0DD01B69B9A12CF1C1AD63C329CE4A3518013CE7E05679D06277B4DF1755E5C27
018E6E48C90124C9467B1B1BCC28B044F2474A292CDCE9E713666DEAAC0B9B8267E8774ED52A
04F74FE343E045AF87078E27F26CA64199D2B763835B477D8883A6D2EE139A3305ACB15247E4
FA108B11956386241FDC326A6B5887348AFC82B2E7F1F435298625279F415873739394BD7B98
676F3AA8FC0028FAA13E5EC6D783258148F6C5377BC5E389E5FCD84D3DF10CD0847AA4B2537A
8033D269E5D16CA63158A13B98D758B169FBA66B7DE4C728071AC7FF5D9DFFEFD056EA488964
D28A9A691E7C981E2F6625639F37CB960A9A716850DC260E1DF987746D30A4939DE1F3710262
355B0CA6F8A2AF96C8399271F99F7FBDAF8C9F5C5C57AA607AE16098EB263494B7A85EF1AC54
D8BBDA154BFC93480484F1BF43777F1348C6D921477695E159C0AAEA0AD4635E1AAD06BB272B
3B8767317AFE95AA0AA195611CC8921A5CE530ABD8B1B53D2E10B74E7F33E04FDD69DA2CC9DB
E6EF3BA44439E83782F2EBD852704BF97328167AC76317C0553573B1D17025167491F3FF6095
501B97E075A9F3B1CC7FC62E1E512C8A328DD76552386049D59AE3854870B4BEDEF1FB464F19
5F00B2DBC7D0CB61BEEA8451DBC5C6FE4A059EC61922AEC97D7E585B3242C1EE46D3F65661EF
B26A7C3F3348E951AA863E5C61F3D82472C22A450CDC86B22B9FCB09C06A22394E80AD5BD8DF
F13309FA31F7EADC88961A88873D10A1986A78D9120E68BCA69D9C6A6D35DE20C085C05A6626
64B485F50D7EE47345BAD6F0F4B2B0461645CBAD7C17E71BC4B8AA5D357B8C74CA882E990867
2A938D82C5E3AFA5B6DBA3BFAFDC1BA209D3926C85375086A10FE9D642CDD430B49B21B4478C
D84BC1B555E35A55BCC6E6E6972B1CD3B674E185C82D1E9F929C323C1872FCF72042C9A7BA39
50D20D12B25E170634346628FBC2D1208837869F5D94B910963081951FBE182527703ACCF514
5031F0943DA951A83870BB2DA9FB163BB0DAE01582718239A3F6A9FF30B7B1E76939BE8592E5
F1FB873CC51449049A89F2EBC14529AEA63909998D574F7FFEB9923BA7E9A18C932C8AE2F8B9
CABA0258E52DA78506547AEF083906742D7FB56041DFCB3FDA2E5377CFE1BD8D1724FA4963C8
2CBEA5961C817236813A5FE5605AB3B75F3681A317C43A630B71FAE2484DA877215BE151479E
9D24CDA4505C1925847AFDFD662A1AB11BDB48A46CF5FB89501DE76FFF4C89BB22B0E7C68DDC
B1D6FCDE3448D892D2581AA24A3AC7A43ECA00BAE557193C7467140A3850D1936AD765A5797A
CB9175D2CE8D8CBB86072181BEFA0350174D755E372EE1629EE6B65CFB15D1847933B9DFFEA7
83E1512A2E5728742388ACEE27502660FFB46F6B53B8A69B4BA68436F3EDDE71C8055AC6B313
1CD3D20C01356CD1A40023DB3279643FC62143343F4C9F202CB9EC3CB58EEB05F0CE410F6C8B
E1BADDC42562AD049D47EBE52AC33893AF572FFC946C5C6F017743E09A7FB115395372977790
A3F4304117A167D8FFCE5C9B0658E7B551282FA492AB2F753AB33C40792D30CC6C1B8417048F
6DEBFF5C68B88A49F16CBC0AEF7DCFAC234034E4B71E9F78F2EB293082B723F1EE706755FCDC
93166AC6A23F6C5A8AAE156F5EBA8C1F0ECC61D0A90556101BE74E026EF625575DAE36197FC5
2ECB3B3C89100730329120A790E89344518159F632D72EE739027F346CA61B867546F0A8B5EA
D3D97B9924777FB001A73AA2C4C07F733B2A040F3B2AC49BB59723883779644A3C942BADFB2F
B71F60FCAB54F5596A4BFFAA27B771AE809865E9D1DC5550AC05FA8BC59576DFF84CF0F310BA
A6FCAC4383418448F6BF19B3873C94E784CCA4321FC71281743A1EA63A47ED2B9A1A27B82674
820FD6FD5493C859186921E8CC4C00B7343409F3C6F9CC72A7FC8EDF054C528F57759AB0FD58
9DE405A8F821C278873F1C046A9ECCB11BD42D9C9545D4D487CE4C5B335EE1E3B02CE5B9BC7C
89C303FEF6C86279A80385731F1941F23843FC865DBF8FA021469B0D49DC78C27A7CAC181B6B
B570DE9A86B9EDD48F2034705E3B5D8766F56EF047E224308218CDB5F2FFB6838FBD5E10FD0B
0724663E5EE38F52732B7F721A8E3B5959BF649AAE64AFCE64012DABC8D794F2EF73092C62F5
3626C6DCD8E03C448BDE5243C5A738E274E939EBF8A57EA79FA226FB08CFB993E425A809E277
813A874C25F3B1F7841AB54550DCDA2F35533B6AAF9D768EA7A10702B3C371CEF8FE1969F71E
17E2BB4D4D784F8D4B3D8E49347BF6223A067CBF416CA0BBDC962FB84BDE2491D4CD85D95ADC
7B92F667884604859872D7BA89BBD2B82BDC8DD7681084CEB6284B89384CA96C8FD3C32C6F83
E940932713909E8108BA29CDE8F2D9D755CE03754D13D4EC26FD2055DB486820C95D1ED42AB7
04C71E30672FB061F3753D1A84D57CACAEC4DF1578AEECA4F23B03AF5F74E961E88E852017B5
FBF812B399FD1D18D0AEF24E2A4BE3E16B4BBAE7F672D1478336D6CAC2E1F238F4AF0EB545C9
2E29365AA60C94111100A80FD653E5D8518FD131B18AD43F8F8603B40E5749BCA1A576CC0D0F
786E6B675BD6607E44ADDDF499F756C28067FE4AC9929667947ECE892C219F6B2B7D5A4DB09E
883A7C41866170FABF321805C434769343636E6FE3CC6D0D924570E441DA8C1D891425D42B80
EA2E9CDEAADF3916CBCE16DDC6AB3A47255AC380F17E71730D07DDFD0040E3E2E167F1F9A348
B402910DDE6812AFBC8C4E033BD46071C95ECAC480F89EF138B6A15B209B9103423ED2199CD3
ED0DDA420E0F378F8B7332C27A19C3D04FDE4BA754230E7893CEBC7D8FA0C5E4B0654E702E17
6B892ED3BC18169CBEA48C41CC1027A4EE86BB5107D806A215A9D60D9AF7D4EA32A58F6BF5EE
F367435F4F6D5510C14C6266B31D6F0846A08F3B20A9C6BD001D1C20B658CF24A4DD27437D4E
80606D29A48B3FD0A6AC2EF1E51E586D2FF599115814D754A43F88E99585FE2DEDA9D595888B
E2399051C39F1447A88D4FD3507B31BD94FDB35F4C04445DAB00D2B7B6CBD824235ADF6CDC22
01669999E5639D1AB3CC7120C907CE685997DF2107013A635B5B053210587C1618C0C37498E2
089D283450176EC9AA82FC0BED8E97296C282ADCEAED15B069D5FBCBEE39D1269CF59507A1CA
24ED06CEEAB0633A460BBA7E0CA59FDFB82AEF681457C0166B5018388B4A74F5DEFFF139E1AC
22BFD25DF48B14A53EDC5D31DEFB563E0DDBEB39DCE9342A2F6AD073E3D0042A1B1EA6041EAF
28FA6B1C6DC9A42195AACC33EE0A873DE810A57DE8D51F58BC20A3DCF1EDAEA09A12B066B708
A636B5F7369D4EA61426DCF87AC9C3424697F373A1E359D92E5185EA3AE681062638106E684B
1FDE40A3172D1898273D6E417B5739D79508A906DBE387F10543838C9319D321F634BC5E4AA8
D0C63A407432F751854700D871354596B499F4335742195B4B787DFB824204A6041EBF0CF2AB
F563ECB5AF94AE255D9A7C14B9EBED37F77D495AD9A19F70897F1B304A40DB82D811BD936044
8AC61FC6A1885FB7232C14FAF5107CE2C02492AC28ECE3AC111552B0CFA073ED197D24732501
0A38AA71D2CC9C4A3897A8CC6B9DDFECF89046923D90113205AB5870030F84EF3A2C0D17C269
E39B3A58815F5CCE8BB2286E713007871200E53E586A6E04F8837165314C88BF3805C5AF30F4
D3C38717E95B7597AD7C2C0E922E1802B66A097A9EFB00CD059B5ED451A790AECDB79408428F
6F09E3C7F57AD0816E448A533EDD7382F366998B379B066DCF40AD46B82844DF654C7A004579
4CF61FD06FE0C8B656BE23A19A4483E589C1BEBBF417EC617C1C9C0E972B75FF316CE5CF9656
BDAFFEF696F87CC1457FA135EAA58384DA4A0FBF934A9FEA1D9C99065E6ACE0AD3031755BB48
ACBFA28426F9AAC6DC7F5F5D7E0827A019313B28810E11F1E782B2328A63F109871FE74F40D9
35F048D1B33FCD3EA112E5B2CD312E726DD4D0823ABCDA433730D8447B926452AFF6F074F05B
C457036F564F261B044C3285687865E4A5E7BADE35414A1EB30912B44FB07118BE1F30F9959D
54DC2E4895950D9EED99A5A9F724005BB709521C3494FA4D43DFB6A2D7B08460EFCF3733FF6C
77CE97F920A489FB91EBC708DFC25C84DEE40BED06642358EBA80472D3FF98894779D1D0CDF3
CE1127A434C5D976C606D82C6FE48BE669B7E600E3ED8720636F013D45C14DF11F059DFD0D9C
2CBB5E70B8101E1B4BF6B61B6CAE33C6EB4556A11C89215C042EDC3CEDDA32C5324311B7D293
031E41CEF912DEEB71AEB2ED99E5A567D60000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /bracketleftbig put
dup 3 /bracketrightbig put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F20DF0D776F1361D25A06237063DD6B88E16DF
7BF2D7AA555ECE15F21A2610055B5D7714B14542D0D2BE8077C432BA54E943F1
E40CDC5956D3E29E566D0BDAE2B6EC8603B6D867457B500BA935348713F35294
2AE044456D8D5CD8D064BA2777BAB17D0BF33F52D98563C3BEF44C2916DADC1C
5323245433A4F37A0EC540DC5FC6B351385135B3545BE036DD02236DF72F195B
02CD6E03E287CF5E2930F3FF60643D123A4839CA8D82CFA89905DAF5494D53BD
FE0C6D8BF619A03D28410100B8B543662E89A3B9D5895EEFFC5926999C6D0F26
4F7A7406D48F65190DE7C86D12C9F01E6B96160483604DFAD23BA6A661868086
08AF5060CDF9180BCBCCE64D14A685D3A81DC0B8A50FA61CD96525C2CBDCBD39
DAD67D00B1B91EBBCF7125D0772DE8EDCDB863664A15EBE1DD8FDD53859244E7
A09365CCB138DC8926ACDF0AB5B2274A1C77B53DAB0D4A4FD27F6C972B99ECB2
BB2A05521ED4727C0E18C6671906A908EE0961C150885202DEF42B11AF975BF1
BD2288C3095B3F9B6827257D877F32DB025CC9841F4DBABE3CC5C8209C8A41CA
DAE907591D36D58B6D6FA54A131064E62BC6BB556BA9143E4EC111EF73BF79E5
C6EF279F054FCFB22DE1C88E3FACE2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 24 /cedilla put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 70 /F put
dup 73 /I put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 126 /tilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08A430B643B6ED36DCAA09B41
FEFDB90E10C8A8B74EB358437D0CEBB9E03109C593BAC09CA996278246E7CA38
4F311F23DC5A7F7DB374E0E3D066C874EEE28CFA47054DC41A389203BFB3D601
BC9A4817F8DAC250A102E7404CA135B33DD66F8FF40D106F52081FBA3E79CE29
FCA5C502B38C86D8D507AEF30436472D2381DEA09B8B3BCB109BCD72332A9483
E61ECF0F89A85BC37B8C10FF3F7C0A84FB8D0F4A7898D3F8B06202FF8DCD698B
56544751347E9AA35209B18D3D416E5E034E36D9C5FC0B33B7AA0D46F3A3F925
7FCAD9D6B9E25671F9AC599A40C37B2439C06FDFDFB3E78DCE515BE82B5BE1AD
2F205E8249407179559DF39CF29120C4B92C5283B609D0445B30F3AC71A1A678
8F43D8B12D7FD722606252CF4902733EA4B25246B0DEE1C09E31A554EF5D223F
C0337690481E60B3153B25A695D4FDA30485C8416E81D6363227497134771933
CA091BB003D8E7CD7E2F4126D2DBA06CB803B05939E4C2D8156FEFF8489CECC1
0D9081D4F817262CEEB2D0C4EF3A579C83C38527B10C76955BF9731E7E7B5CA4
5506461CF33DAD4CDB52681BA84499AAAAD63073599A31E352B0992FF25AD80F
2B45672A969B43E8835F30E5DD696524D5D9B0707EA12E5ED7AB77C3AF347C23
DEE1E46DE19B52C401654D902AF87687115A95878B712F6CB132007340A4C6CC
1394C064A4B1824BB3F5742EC408E02294DAE4B3E1E3372C60258F39E132AC7D
3590D30759021420222AA888BECF774B0E33FE45306E81CD677B02083D509856
680EE0362DAC32671FB50F7C389492008B1C8ACF3E731A2258146BB624DEB38C
BF5F47171D29C22B1B0C346ADDA21E69A1380E06F1AE3A6DDF2E64387F6AE7F3
3B7EE58C960FE6C0814EAE72A0884309815D3D51111FC07B4552214541A361F8
B7DCF4BBF5BC49F6D1F7ADAC3E463DB8EE91AF8176417A0266DD817E3AA41FAE
A11362F157D25EFA70C951966E29AF071CE295E0F45EF740B608327A2F11BCB9
0A1B50060C2B212A195B1E4E1AF9A329C70D9363510170763040EE4A0B417581
45E4D4C14A380CA6879FF07E6137447A817FA3FCA8DAD970690EEAD79CD1914C
EF93DBAB29D0074466AD4ECF2B5D8BE8AB10B9BF4B30651650B5F70A60035011
7F65E7D6CD77FFCB414D74D40066D3189B12928CE775D3141F593F016C14F871
A67A8974EA811F08BF1E3EDB00358380A4DC3CC4E1E19F6058CF0ABAB5E80E5B
1A299B47EEECE1E876DB7BD633B37FC276E1FD9A3260F948656B06B6E8E983E2
BCDBEF702F1CE7BA39E3025B9D946B861B2DAB969055852245AFF2F477162FE7
8F7B820B502F3A568445801B066E87F7B927C6E156F42065E6BB05077D220E5F
AA6BB56609AF2D820FB74D73F9DCE2B5F6E4554313309C053B54698A0810B380
D73234B97482FC58643508A2DE1692437B9E4F49F0F8FDFEEF457E944B20C4B2
F5BFD89F44A872878D8600465B7DEF10816C632FAA14637F8B1A6DC3B27ECC20
18FDC13A7DE7ABF00692939628CC9215979C48C7E52C4FFE0360B3A89D6F0B9D
59369E9182AF20CB6A4D60DB451D27F35B846FB515F50E9676895605984F9B98
AAB462958C5F484CFB5CCEF73135AEF0D9421F006C14E457DA9630060C73F3C0
F7003A34F6CB2580C9A695341660C556FAD304065BC685CC1B50A1C04350C2CB
1AC6472BE9BEB2E4F591FB31A6D2060D7801CC2FEFBD75018CCFF198AB72F18B
B351DD128F76359171C6C859A3846D8F55EC52E01F9B6BE633D2F911A078C4E6
565123D3E81A06CEF90954AA9F9B59F82B67EA8584402EE879651BD80DFBD6F8
89EB15183A6D2B3D9E0762DE4385DEF5CAC88E9B5A9272E280DD09FDF34A5518
59BF6FC7E92739F879424D95108E4D19A72FE3926E2488EBD830CCB01975898B
2C767CA87C975F47073DBA9F85B5FF09B803FDAD6144F63553BAFF6DB7BD6264
DC8A6291E07FF4D334A953A813C6B36272B40D83556145F589E3BBB161572C89
D27E1B730FA927296E348D8186B8D26EE70B710AE58EC5DADE33029EE05A58E2
8CC14E32EE9D12E6112DB146EC992654690536F4C0F8091547B4998667F0E9C0
93E288F987A5F01CBBB108B18C16E340864F2D181B837D981742C685F03FFE5B
3286B142364B7B6525E1628789D8D5CDE6AD3DF1C8AD7D8973B18E2F844A24E6
3192FAC0BF0F9CE9A2BC373B60E11407371687C92F645B798E95EC7F6BF8C245
289B9E431EFA22E5E49B59B283AF405775B5BCEECC04835401D2C5533E8DE7E2
3704855143EB414EDA622FA1F1E23E89AB3C365128999A17D3A24AACDF41B8EB
9EB0A5BDBB95D122C1255EC01A6D90C5C20DE5BD549F0EB87765B7FF9547BC17
000BB3843B99A70CE4316AB789EF23000908F8BF098B4BA6E0686AAE99124A2C
5F17E1F2F7F81FF5BE01630ED829777EF687B19804D13112F42FC4D561587E02
F27DA5D356031DD04E5BD23E3B9FD2E78F4647D2420E2B7C630EF5C2CA9A3102
D7DCB9B2975FB521D5A9BEE8BEE09EB3D9E330E056159A942727425905C5B4E8
FAA2B914DFC3223D3DFE28AC43FD186BCE68A113730A43D16396D7EC1C277C45
8647310DC8E4002BD43DBB9BF3303F7A6D6E041CCF1C514835C59F578245E49B
D76D9C32CEC9B6C1B42D9A0ECBD94C3F7D3AB3DC62B18BA33FE5CA20D0473C10
5316CF997762D323590E7F09BF6EA2FD9024F146BDF03F0F0A7F68BB62DC02E3
6CA85E1AFD3FC748B49810DFA148A12D91B5BD379B921472ECF61D7A7A429B9B
88CC0A32E9D13CBF710A036A660FFF3A20E872BE2D34B4E6F39ADD9B57B0D647
4CC22625BF74E83A67C0DA9B7F07080F6130A1C5DEE8652B2514A263230396BB
184A54FE30F00EA59C0BD869C8ACB1CC87BB20249F3556480873F96023C62BF4
C945F56F59C333E3150C61AA9238DDCAD69AAFCE41A5180B35ACD3CBFE8B51B3
41D89701F64919580C371B877F45F41B39962175ABE0E8B2AFF1473A2E723D10
D2BDBB1D134F5C4D0F5C81A3C5E220C2D015A57A4247B6E2784D91BB083429DF
B7615E6BF07B53643706B21079B593AF6440F627A340C181BB2B63FAA86E32D5
9002628103A61D5D07B066B62974B5D6D07F49CB1F966BA599BD0091D62A6A0B
C586908C33C6886B34777CD3B07F91EDACF483CDC67C2D51E471B3C364043757
2A11D4367A7A035497B945CB24373A51482EEC693EF34121EBF930FB309E14FD
8F45252D748B6CFE807E3AF41CD9C03BB43BC7FB06B3BC316B57664F35B22963
545EAC6EB4DF1BA4626D74DEB198C41C826E1DE4D1F06CA4EC3EB270A029FB22
AFF0AE38A32C63AD5785125CA8EA13326E7B86633B9D1051C94D2CE98D9B9793
DC31A956AB845CCF06D7EA00F32474B9FE2762DF690D3EE2A7E7ADC6101EA98A
65B44D557357B8C61C481A80F37CDD75041F0B476A9255D9D23F8277B647B82D
3847182907323D8A644415DC111F73E3E7A79F61B6560EC567835727BD6C7CC5
C6DFF9BC23B27593D2CCB16CDC3E36E06C4CAA6E9DD5411F73EFACBDD14EC74F
AF9F213978796A843EED359BE892CF63D1622A7AF2B3AA773976C9DA75B1407F
56D3ECE27D205937FCAD0C9A33ED6DED9F70A0AED664B430262BBC51DFB1172C
A9AFAF5D5E0DED41B460893A6F6789C2E4D2BA0CA7BA73B92F0520F8C27BCD69
6E77BA052B475D09EB09F860A0ED53DA275FE6D975F54FCEE1CD857CFADF63B7
D2CB4D867C4C25A9B05EAC722441E0E74C7E22F4D782BF097FBA1E8DB288E493
B60FCCB8BEE252F749B6FA0621E971ADC80E104BF9B6506DC1CF0E60FB6B5C4F
A580A653E5A9DF9E59A8688256A783A9F3BA30AFC922872251A4B91F961BE2A0
47FAD225CF0F368D25328BC085D7B7CE0A466D7952559DB309129C3BE5984BD7
1B1FA9BC298B1F7FA240A903095B7364C053856987B083F199263285261DA18F
F673A48B7F5A88EEB81A08A8D1EDD59244B0B39801B557E9ACAE8D4066DB5909
914B8633062349261409EB95BF0DFD4C6F876C86D45949F23780F8C1F1FDE889
B1CAAA6AFAA8128BD3408EC0B713FF9A00C2FEAA09B857E7D43937A4FEBA2A3F
691D60B533FCDB593DC7D9F2E8A3E50DB9DBD7EF64714BF6C2868D0528A9FFE6
2EC3A586E9C5DEE2EC3027E50814639D96C4032E9EBF7F5B4A66D61D75C7D72D
49EBFF511D6A7B203F83A680A5D3DC1B09F7D54D6E0F46D0180CB621426F0DDF
C49F05C599B180D05BCD677E8164EB3964C8B8C76548BA5369D05E52C91006E0
846A29C3D549D0DD79E1BA9DD3964B1D50964A17F9130CCE7148F9ADB68A8D6A
4143CAE94D34ECF0FA2CF41DBDA0920EA4615097B31239D0E6FF0A80B3B69C02
38E28B9B1EE1DE2CADAEE76E15E12838A9A2254AD41F31765D3B2D556BEE8A51
96760D5322EC9378A949D62C8DDF0119CF6792FDDC507DB0FEE17EB1F2AC9F84
B45F683DF64F3465DD0917B46AF2E679B783A50A11B211DD831206A3EBCECE1D
19F0B4B134A23F601B28ADB398B8628BDA3A436C0BD3EB2271021B0B700A7856
D540B61473D504AE8FB6FA18F98D6B7CCFC6E0878618C570763CFCFEB5319578
E3AE513EB899847F8EA5CEF9A3E9B8FD158B5CFFAFAF3A9675FA9DF393A232C9
45DD4923A1D7726EC96D6423A50236A0C4DDE5A7FB749527C6CE50C89F86F9DC
CC9BC5AD34353361F0F181B7DBBC84D9ADD0F8B1EFE37115FFFC6C2B264521A0
4EE53BCE804763CEE16E7102A3AE6165FB98E96FE72719E82913BC627F4690D9
EE1BC270B5D85A1247D1C98859C9481B0C1ED6C4E152F6AA36784A177BC7BE76
117209A57F07E13365CAF2D371FAC8109C78A8E52580EB2B8A2CA01B980EE396
0A9FEAAB073F091E80BA36FAFC78C867F5D20AF750B655237A00E7652E27820F
11A233F06CD7EFAB676D137640F89ACB487374FCD29DD6D1B68926F5FE471C04
ED5B8CD1D69911F38E1E18EBA1DD4AB5772E36602F0AC4EBE61155872F983C30
4C872A1C7F34484CD2FAD54DB2F0EEB2B1458EA858BD41D72E3395BC5273CBA1
7E52B6E1E2738D824B18DB21BCA5A174F25F1E1F946C7A7A8FEA9B29D95FE7C6
DCF52D85694D6BEB6723E6074184B825CEC75237B381AA18D34854180EDE785C
22ECEDF3A1B5272CBA60CE778E8408414E8EDF07C25E5B8F5548D41C0205137E
B6CDE45D3BC2D9D7D335E27EC3B2E41E7898972F9C23DDBE9A6757F9E67DBBE1
72CB33D153AB72551E76A4B90794715BE154908D04714A5224E7DCA220862203
D9EF98BF7D41FC1253AA87F2B173F7261093F8A8E52B01BD5CC9B7AD22504B36
4F7DC5B728965A95D079D2A1F5F2D7A501AA8ED5EA95D46F3274D31AF875EB5F
5642CC03BCE91C1846C573FA7ABDCE0833427567DEC35222FC85FD6E481123CC
37B0EF8CC6EDFDEDBAD84F0391CD30B217DB30F8DAE7E913B6705FBC3A56694D
0CF0E7ECB714F28E22498B08E7D3DC0543E2E90279D80CCEDDBC2121BF734F18
2A77957C62551D659733849DC4C5E75239FC137B485000257BCD629DA7D96438
95EB87C93F1FFC517D515EF271E74A5738B13FAEF1FCAD23FC64D4FD0A400A42
5548E62B95341CD8FBFFB4B151957EC4F6CE747D03E6C88D74CC8D6C895C9D94
B496870F4ADCF6382A848A502329A3358C808ED9D75E630904376652C6665DDA
2B991B30537D44564F31FCB6C8399B591E70CDD5B8918725BFD3A72742445F18
ED7D8C95085033ECD70287A19F52BBCECB490E9FD66B545408DDBD92AA4486C0
55FE7E8C084027EF7095C0786724A87096662237C3ADE8819AB32661803DC6C8
3E168CC8D6C24344864DC3D514E34952AE20BFFF8625948305B4DD447832B4E1
DBA711DC60C29EDEEE2F8F7960BDB77ED4C5B04774E6F248C2EDF69CAA0C3DB5
8A4E90992710FFE1BADA759B72FE77DC6DA679CF5B595033CED23A3C4A3A30A6
13C9A31CE285FFE8C74A0615D1C5133DBDA620BCFD0344B2B101B00287D0CD52
65CF5F1FF35388631A9946068AF6AAB9E7EA2ED24CCA803632B22DC605332649
39B4F8BE5D0DB80CEF1707FF089988C60260157D3FE13272EFFF271505A63C67
04AEA169831939AC58CF9795179848D4C8A7D3507BD7AE07F7F9744D6AC09B6B
B4AE0059BE692F7D0C4E4EF8AA8E7237BC85619AA81B3417B47BC87584B72FF1
FBEF0B9D35614713FDD4783CFFB57CF161D550A500754250DE2F832945EAA591
3897264AD9DAF076FBF31185CA1F68D5305CFF18EEEE8F65D58DA3506D0F1739
6831AE4E0BF543ED0128DBEBE68BA48A087BEA2DFFB769514D1184438F7C1FEE
9B3896520E4AD264E193A1C53FB3CE21D00890AEB3D36FBB7D9B222AC0177E51
ED27F386047225AA9BC34EBEBF7535D91170A049A1D93B0FCF6DB1353D57C539
0A11EF43C6ADC293488B7197878D04C22541F17CD0FAE72C8817A7F86877F87B
62CD0B9ED92A7F26118F887A740FA533137DD32AAB4FBB7082610BBCF0EF4491
B0E36AA716E0CF772BD32A02F99F03CD41DA3B96A51DC8CB1F59A9DBCF722C5D
E8F5F5F024F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D78874558397C923C330CCAC7180CE00525B342BB015
E59A1DB2C85CBBE849DC5E9A1E035F4F81843522148C0B0286B281E1CAB803DB
56AA72F379E098B55246D2DECC5A3F186E3B8B32621FB10E7AAB28BE4D673CF3
76230ECB7C6BFB808A1BA421A17DA6ED7EEC042B3522294A7AF140F4D6B48895
8C858454A427A661603136FB4838F3D6DA238DCE958DF8C6E008DC8615647607
C3196F3C4A5FA658EA3E0FA46FF50A880933B2FE621B3E32870B5DE9A1D48E2B
F9452CF6D043D2AF01D609C4AEAE00D64586CFABF000AA6FCC6773015975DF8B
D150E30874ABF6CC106B4510079DD1C09247A6AD308598E7F421AEF13B2B2F2A
02AB93D42D66591C190156585A2264856BE3DAF0044B7BB8387612E6C66A6619
10364C80E2968A1508A3B1183A76C850A03AE894C4B1B35490BAD29BA8E74140
7F76410D5FDAD273F5F78157632276BC39BD69D7047E9DAD1E8BE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 13 /gamma put
dup 25 /pi put
dup 61 /slash put
dup 75 /K put
dup 76 /L put
dup 84 /T put
dup 100 /d put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7F09D3A6C93191E20C47C7
832A25DFE46206D78D05B29615AF8A32B09006939A989F7EDEF37BB9B883334F
528A5AFA99164500A4FF96495E5E23083A673A976328E1F0D052AA49B80FE035
9DDB6B5C01E4EDF10ADA000A7D6D9CAAC7970690C002203AD8FEB9231F5A2D0D
2AB4D8007503F64797942F9227920CAAD43D1B48EC23887DF500A243A7967826
FD4095095317784AB2F2B4BC81933CFCDDCC723A92C5D81B3B8D5E7BD3C814E1
7E6430C149498B186503DCA07F57B5F1164FAB22AA70670EAA5A4BF65B0FA7D0
ED1C46C17E7F99CFAC861C96C8B4512A7FDEB9F5B7007D4DF17CA85FF1A474CA
7FE270F111A14865B5E118D34026FEE6A97289E11909EEB6A58D6C30785B0391
78CDF986A2A3EBCF0BB8A6B2EC270333CF357866E58B9BFFCE2457D0F320E3C9
774645608776632508D429C6258577FE077B6819BBC9B3C725C48899B3005191
F188AAB1E0E69C93A7B98B58BADAEBB6034C68E7AAC5F171C4A18C9153F0A6CC
6D494F0F0154D22D6ECACF4C000004A3320AC292CBDE3CE59C98A6AE14AC3FBC
9452C26A19C8CF04EBD1988381477FD05927F6204DDF19011E6255EC2451CDCB
08FEC1EA2060B1A985C358B357E54CB8D86D68BD0C340A691C875C4C811EE8EA
5AE2FB38D35AA38819C807D4064F298755BB556A9BFF09481E87A134146AA3C0
704B7B7A064F653B81CAE3EC23B80E2E543629311F175ED1DF3172F995F59721
4A8BD416EC387453461200BEC41896F197756A4A9FF87299E4FC84E04612910F
A24D66F5A63877F8F26DC9A8EA61F58D5D67F11D0211AB9CA9AA54FBE54205C8
437CB242EA2262E8CBDD15297DF822094114AA6E982288BD40C91CD16B768D32
61B6B3F1E370C0AA047D8B06A03478327BD359755374D9078DA7D2C74827A3EF
D2C0A81A0CCA72FD380673EBE108E0720E64AC22916F4E27866D9970F2BB4830
885DC5F1A7C0104F6BA2A63F2D25ECA4F818F42B9393B521E44AE0CBF8288EFC
C12241563FE47D425FCD70F5B03C4B01C32FD48476139AD6C06CB4DCB7CC9739
D0A59598F86EB49621EB1CE54A79F011E7345413D6B645EB550B6AE324CB095C
24D9A6F8256EAECC795800C2C87C93A250AD2398C5EBA330CEDB0194F038F501
6B53B66A7E26C0B45C585AD3C784B79B0D3043F95899E468E9E7F55E1B1FD2A7
55D060AA441EAD88F35AD5134105063023E0007B1A71343DACC41C71F775B2E6
CEF1E139BF21B9D51EB6592550BD2F3333FF90B166E7691491D4464460A681A9
6BB70EE7CF4693944810CF6340A8E38473FAA7E341B32E5DF90635A2E25D8E8D
0ED017C1A2BF6C00286C69375E9E0BAC8D027C8F04BF0967BAFAF7AFF2C98D19
E537157585DFCE20B5F3F606AB1B1366756C003A95AFEC97CC212176D3B3BB18
D20E79ACA70D861A7FD6A1D68276892D42C14C902F8B6DBE6339140CB6C2EBD4
FFCB9878D8D641F4DAC9D4DF87FDAE6F1C4CBF83F2325FF77402F51D1AFBAA64
A1EE867638C12924D3344B6AF6F1FB66E1DAD1E784AA429B8B1DE34D6455F3BD
6EEDDCB6A19FC32C99B67876E538F3C4AD4EF97612B59BA9C0B6E010B18CC8F7
C151162712927593DB7C3707895015C03C6059847A08122BF8B88D33E716550D
A577AF02C3205D95ACF031FE3CD74A8508A45523EBC3409D601E6E0C9518071F
8C302F646C2D06B152616972B127088EB045C5985F37C083F6D200E503E7FFC4
1084300EE44A971F9486758A45AD499057F44C7E6A79374CE7AA6387AC067F57
BEF0AEF05457D340833C170D4D08053805F2225DACA613BB99FF692670C0AB4F
C16D3AC9A3A8A50D9E40406AF56D9C5231B3A5A29AECF244032CDEAE74857530
F29A280F361D68295EE16BCD982DDD7637F617ABB00B0AF876AEFBCCBDCB2ECC
C898987DED0D165EE8424F69552780D6E02086887FA2252854138D336C85D7BF
062D3042DEE1DD0A88AD6E491AB8B469404E83EE6613CDF78A5CA4FA527CFD0C
CD424EE34891D9C4004358A3C5E7B1C1404FDC134D63C3778BE71854A70142C8
7C246D0358841EEB8FCBF90F9B0BD14ED17ED6CB11424C296C9E483BDCEAECF1
C408D62A3BC59D219237B485F235C1C5566EFDFF85A06E0846A868AFD7F73C4B
F259FF14F8E1089846024C148A3E2BD97924A87EA24C95415F22D3408B747C9D
E205B0897609374BB25A2F122FE43C624FFABB30788A2B75FDD7F0930441A446
24B0F9E92BA34489402C180E3A2C94C3059346A72027AC5F55FC7A0F87E59A1E
F49B70A8909DD15F06A90ED1865ACA3DC85251D2D785EEE7F2A57DA31A388D88
33A0497A4667EF163E2BDFDE654AF159F95C0E59F9EEA56C7D3704098FF61103
DCF36D894D9F0FFBD9A5A6533E9507A73B0AC91339C9112F57884A8A5F78E233
CC3D0F53B16CDCB1B321015924D9B6CC045B7F0CEEEFAF11D62A47CF8E7D649F
E5679CEEB6525C15A55D18EC1941E277EDFA0681EA0DE344795EF9D252A12DC7
49278BC53290AD09DAE78D7F3D2A3C5EF3125BCEF6F944E2C691A1C29A602CAD
3582E279F1262FBD89C0BA2CE585CDE63CE4D22D1104A6C312B349C6EFA5B871
E6A1E52363C2A64EB623256C4E53B2DA264DF7A88FC29D64C7541FD264A40C90
224ADB0618E140FC002EC226898B284C7AD76452E9E3D165F8E950AC7013E315
83886E32CAE67DDF087FD384F2E4A92AEA8A4A308D1231357DB4267DA8ECD7CA
63301024A241A43886E0154DE38E34B330068DBD8051F61EE67A9772E2C74A47
7CFB975776F2D89FC3987D66CBED83BA929AF4BA2F8902742424DABCC7BAC84C
F2A0EB13D790FC8B94819CB21BAE6C37DB3EEA87E2492A726D81ECE57FAA5F09
1A936800F3D255A554A8B0F6E364F6C774D6D538E2A1A86C40D7E38332518684
A1A90FDAA3F2920F0A00A3598D6324C442A69A162C90D6FD1577F4F9C292772E
085DD5659A9C73CE64A42963176DE20812B315744A5D67ECDC67A6E3D8836F8E
1FC4205BCF9666C519E4F67E2451BE7DF9DBD187DBF3CBA8D442AFF29504E40E
66F627AD05FBCE114C0598B0B97E2391890975AA0B20F49635460CA3496B85B4
A7AD2028D2A141B815960D93AC701B8FC006F9C058CCF0CED63EEAA7C12890DD
73C950684673FABD8315099A7C33ED75CF956C45926672A9B15D75DA69F0BA21
281189148BE0F05C812E6B4A3771849D21A7005E212CD610087C3ADCB2CE1F3D
485556608B31857FF8178BBC773F11EBFEEB3D48AC6A261BA35315EA646662F9
B8FE23C9E216D1211CBF56FF02DF1D44BBC2C99FA4DBAFF117333C7D0104B66F
3500FF41103683106625D45361F45B4312D37E3E0148B406CA769F03456C6731
EE764CB8DE718077D02C29C43E6F37E8971084E67FA144DE20D6E6259E40B4BC
3E6B2BEAB32E261F8BAE466534213D4B4B44A7A7836BA4E75686F43CA4A459B9
F88630BF64513FB4F5BDC0AE0E4042931A61F6960810412DA9052B649E3C2C2F
A9925C1BAD9C65613E20280FCEC045185CB84CF50D8D62C1E6FC038329C17D86
283B0DE8B6CC5E2C626B787756BE65D199B5FEE5121784752EF610C40878331E
5AF33AE33856B1FF9FCCCEA0620BC1793FF85D5E79F170C24308B130CE2B6931
3BCC2DD243136142AA898FA0342157ECCF57574331F5C3D1AD9AB3DDB4A564C0
D162228B842F6BC45DFEC05F46C5DEFA7E54A66D732F40916237CFC54A64863E
6DFE44C1F2778FE161C80506005DD1B50FC305377B1174838FAAE44C2257B451
2325624D7B332E904266FCB2D661453C528493A1A68775EF25C1ED9625F4BA0C
CAED62559633395AB6896F4FC8E54761590E0C2DF4241351C9DD62AD40B9C782
D7517DD23812AA605323BCC7E7410543A509842AFD0E86C32292679FE1F754F4
D56095F21D42CFADDEA4294BC14B51061D762169878D8476EB0DD4A273BC0359
1149817BFE3AAB11A999AE5EA19037E376C28838886DDA3ABC807B24D24EA09C
7D75945AC72A2111A20CD849D8C6ED82394E65A3A44FD336CFC0FA8EF86CD4D3
82F20B3E58973492CB4814C207731508775085903E4FDCD0B4DD400DE9B2CEDF
779A5FB9F29810FA39B43316CA2F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF1BE5F191BAEAEC7FE400C9980E103D8776EC196E741AFE11D249E0C277263
80FBD329524C55943E25631F113FBD8331C0044A7A2138637206A7941CF02590
577043EB0F205392C34E18B1ADA47CE63CB8F01365A044CE570FA20446102210
F03C0647CD0CC29E28B149F84C2F39256EE1457CDC3862C4082A95B44A61E8E1
B4ABAD32DA3E2FB8D849B1C5CEE60F205007464DF38712737776BB6BB3223941
95169B5BE578BA13DAE40B19AC184CB6F260A1EFE13CC8438ECB56EEBD30ACDD
8E24F52934
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DCCCB7FAE00B34A69A2915283A20419A6E43312838AD38DD6699244418
176A2720844B186AB30298E743AD42856C37940820B5D24D002C0043D7F96773
D2F86DAF0F449E56711EE20F5E3C0EC074BCF2C5A20AE91AEB1C875685B97944
E6E60CDFD46767F07ED18333428F8F993E3442DF2B62349492ED6DE9BD673EF8
065144333E4DB4C521508E79AC7FA228B1AB16DA101C285776BBEBDC688B3FA5
1E7A7AC6F06715644D78BC33A9CB69777F77C050CDBAB5673118F12D7665C5E1
A3FD7AC817D3052A2C05090EBCDEA4D09C022CE8B23D8DF5C5B9BCFBBC4D134A
332B28D504ADC7ED209A912FD37389151B533BDE2F2570F3F53BA6EC7C3D6B4D
3CDA5846C38170110AE8E5ACA411C516E2E64FF5598B9971D32C4D202CBCA2E0
A46EE8AC649CBF5B647EF2009203D57E5D08186740C9412068039DAB595836B8
B73211117CE813163C772F9C10CA61DBCB86B45E0A7D21C4479288A4571DDB93
788251CC4C80A248A77DF85A47C0535DF355928559968387294FE2DE78E7E8E0
54B29F6FC6D9BFEBDCFB71A0286256E0BEBC0D3D90871E8FEA3B6139EA3DCD52
3582A49732CAC8D867BB197121FAEE06B56974DBB46E659ACAF036EDEB4C8011
C98C534C680AC70E53E9FFB8C501DCF03FCECC967F570799CB65C62C0C6E91BA
673463E37132B231E7D072CA1537496B05B04450E4677795DB30A302069BACC4
3C26FD868DF8D52E009CB1A7DFE701EF1745C177337C80EA5C979A94DC417EDA
CC421A16343C75A9D1B7133DDA0F09D68B2A4932EC51EF691A7C33837CD0C842
67792B16720DAEAC44EC29298A499EFCC9055BE79459715414744E8EE2AA398E
E1874B0DD368376AF74180A7E26C95333803ABC491E5C9560FD682057DCAA654
0B74A52A2BD64518C8EA3D2F67770986BCB76D965D6E7FD5FDA60B7EEF1FCD14
8ED1CE614B3D7518CA0781EA4A9360A1FE2589C5A189F755B942DCA656ECDCBF
882E5A1EFE1794A19FCD8E550632F2A7A204DAEDA6E0E5B8C3B118B825F3603C
3609056058C887FB6C71C66308EDB3C1835F19949208B992F7541720D04EFB78
5CCADEE6B99D33AFC72A21A2E2E230FC5CD13B808B5A4AAEB4170DC5F1ABF03D
F2373C2B4C9CF2DC846A5BB19D0A5BFA574783CCA784726CDA5025E048BCE3B9
F0694E02209D6C3019892B80F316055153E2D84860220380BD53919D5081A93B
0519E271339B52C3D029B3957F3241B4F76097CF296321651B83A2BD908590BD
0715BB8AB3DEB889084C4CAFCA07869342DA32363C96429BE7030E67D743B2A8
DF57A2BACA41E57A7A97C08D407BA8B60F7391EBCDEBD911095DC5DBC80B71B0
8BF841A5016921D028B51521D244774708582BBE0207E5E59EEDFC27410DAF09
009C50273F3DBAB48B474AB4160AA861A39DE3D75C826922D50BCBF1812C6829
50843FC28C7770A0E2E2F5DE9F724F039DC0E092573197CF12377ABBC28C88D6
D7A654756358C94984A334D55FD71E6AC0BF71FA05A14AED2052C8A8E63D9066
8D2FD9A21F08FF18D5CD5E9F02E49D42A7B2556A0B0366A00A933AF727DC773A
85CFA1BAF0153F94B53BE095665B60156CB80F951AB024E2E03CEEBE39247CFB
868BFC7B584C6E4010870914815E0C01050C006FE48E94F4BD8B4D3BE7BE427B
FC85A05852368B26F61818E9D6B3230AA9F7170C940A45937A49582C1ABD41D6
DBD2FEE88D24E039A164C27F5DE29A1F1B52A4DF078378293AF384A19E9CAF23
8905E1E6274A0F028F79965242BA26C76EB9CE596C1D8E6870A8D710CC39A088
2192798EB0A203157B979B521C4EC698F2F293A803C6303E7F277A4133E38B49
705A011A786AFECA686C7781A24196CF33FD61ED1E9F7364A3D8D538AA914D20
FD8E79E65CE461EE48FD253A108DCE5F44664B7AD62DE70417031CDB9AD0798E
B40BA82B03E1AFAD1658D3F7EA35DCB8C738F4883E18A0DF31CA3B7800EAD07D
50A635DB5E3F98092511C12F493B3FEC1781E465B188285683D77144B0E3940B
C698212480FC471B9BE47331A4CF5AD6EFADAB4B48BB87A57E4AAFA11EF53204
AE2B094D20261A0113AD3AD63C13
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000 (lambda_01.dvi)
@start /Fa 234[701 701 16[553 553 2[{}4 1328.35 /CMEX10
rf /Fb 135[946 2[996 1[707 2[996 897 996 1[498 6[818
996 29[1127 19[897 897 2[498 26[897 2[498 16[{}15 1594.02
/CMBX12 rf /Fc 252[424 3[{}1 664.176 /CMSY6 rf /Fd 139[340
3[474 1[571 832 8[484 15[548 7[640 793 13[470 35[540
11[485 1[604 11[{}12 885.568 /CMMI8 rf /Fe 255[732{}1
885.568 /CMSY8 rf /Ff 202[470 470 470 470 470 470 4[732
1[366 366 40[{}9 885.568 /CMR8 rf /Fg 216[1033 5[1328
30[1033 1[1033{}4 1328.35 /CMSY10 rf /Fh 135[739 3[470
2[577 653 1[776 1138 5[623 641 1[676 1[553 9[1079 1228
4[990 1030 5[1107 4[842 8[650 1[361 361 30[739 1[738
11[675 1[827 7[903 3[{}24 1328.35 /CMMI12 rf /Fi 129[1076
7[1136 1196 837 849 879 2[1076 1196 1793 598 2[598 4[1196
956 1[1046 23[801 2[1353 19[1076 1076 7[837 837 15[956
24[{}21 1912.83 /CMBX12 rf /Fj 146[1245 415 7[830 1[830
726 47[747 747 48[{}7 1328.35 /CMBX12 rf /Fk 129[650
3[578 1[686 1[686 723 506 513 506 686 723 650 723 1084
361 686 397 361 723 650 397 578 723 578 723 650 2[650
361 1[361 4[975 3[957 1[885 1012 975 1[813 1[668 2[1021
849 885 3[975 3[1012 1[361 361 650 650 650 650 650 650
650 650 650 650 650 361 434 361 1012 1[506 506 15[578
1[650 2[650 2[361 2[723 13[{}64 1328.35 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -9449 -11024 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 -9449 -11024 a -9449
-11024 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -9449 -11024 a 0 TeXcolorgray -15577 -19944
a
SDict begin H.S end
 -15577 -19944 a -15577 -19944 a
SDict begin H.R end
 -15577 -19944 a -15577
-19944 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -15577 -19944 a Black 0 TeXcolorgray Black 0
TeXcolorgray -6017 -4714 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introdu\347\343o)
/OUT pdfmark end
 -6017 -4714 a -6017 -4714
a
SDict begin [/Count -1/Dest (section.2) cvn/Title (Formalismo \(inclusivo\))
/OUT pdfmark end
 -6017 -4714 a -6017 -4714 a
SDict begin [/Count -0/Dest (subsection.2.1) cvn/Title (Fluxo de p\355ons)
/OUT pdfmark end
 -6017 -4714 a -6017 -4714
a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -6017 -4714 a -6017 -4714 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -6017 -4714 a -6017 -4714
a
SDict begin H.S end
 -6017 -4714 a -6017 -4714 a
SDict begin 14.5 H.A end
 -6017 -4714 a -6017 -4714
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -6017 -4714 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 0 0 TeXcolorrgb 1328 x Fk(April)433
b(10,)i(2022)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1 0 0 TeXcolorrgb 49286 -3334 a Fj(lam)-42 b(b)42 b(da)499
b(01)p 0 TeXcolorgray -6017 737 a
SDict begin H.S end
 -6017 737 a -6017 737
a
SDict begin 14.5 H.A end
 -6017 737 a -6017 737 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -6017 737 a 2435 x Fi(1)2152
b(In)-60 b(tro)60 b(du\030)-956 b(c)-15 b(~)-1061 b(ao)-4066
6093 y Fk(Em)354 b(artigos)i(an)-36 b(teriores)355 b(n\023)-650
b(os)354 b(prop)36 b(omos)355 b(a)g(utiliza\030)-578
b(c~)-650 b(ao)356 b(do)f(formalismo)h(de)e(dip)36 b(olos)356
b(de)e(cor)h(para)f(descrev)-36 b(er)355 b(a)g(pro)36
b(du\030)-578 b(c~)-650 b(ao)-6017 7698 y(de)433 b(part)-145
b(\023)-506 b(\020culas)435 b(dominan)-36 b(tes)433 b(em)g(espalhamen)
-36 b(to)434 b(f\023)-650 b(oton-pr\023)g(oton,)433 b(em)g(pro)36
b(cessos)434 b(inclusiv)-36 b(o)435 b(e)f(exclusiv)-36
b(o.)-4066 9303 y(Em)338 b(um)f(primeiro)h(momen)-36
b(to,)357 b(motiv)-72 b(ados)339 b(p)36 b(or)338 b(dados)g(exp)36
b(erimen)-36 b(tais)338 b(daquela)303 b(\023)-614 b(ep)36
b(o)g(ca)338 b(\(2015\),)359 b(fo)36 b(camos)339 b(na)f(pro)36
b(du\030)-578 b(c~)-650 b(ao)-6017 10908 y(de)433 b(n)-36
b(^)-614 b(eutron)432 b(dominan)-36 b(te)433 b(em)h(colis~)-650
b(oes)435 b(el)-36 b(\023)-614 b(etron-pr\023)-650 b(oton.)-4066
12513 y(Em)408 b(um)g(segundo)g(momen)-36 b(to,)414 b(aplicamos)c(o)f
(mesmo)g(formalismo)h(para)e(descrev)-36 b(er)409 b(a)g(pro)36
b(du\030)-578 b(c~)-650 b(ao)408 b(de)g(delta)h(dominan)-36
b(te,)-6017 14118 y(que)412 b(p)36 b(or)412 b(sua)g(v)-36
b(ez)413 b(p)36 b(o)g(de)412 b(decair)h(em)f(n)-36 b(^)-614
b(eutron)411 b(e)h(dessa)g(forma)h(p)36 b(opular)412
b(o)h(esp)36 b(ectro)412 b(de)g(n)-36 b(^)-614 b(eutron)411
b(dominan)-36 b(te.)571 b(Al)-36 b(\023)-614 b(em)412
b(disso,)-6017 15724 y(n\023)-650 b(os)530 b(tam)-36
b(b)g(\023)-614 b(em)531 b(estendemos)f(o)h(formalismo)h(para)f
(descrev)-36 b(er)531 b(colis~)-650 b(oes)532 b(h\023)-650
b(adron-h\023)g(adron)529 b(ultrap)36 b(erif)-36 b(\023)-614
b(ericas,)556 b(nas)531 b(quais)g(um)-6017 17329 y(dos)433
b(h\023)-650 b(adrons)433 b(atua)h(como)g(fon)-36 b(te)434
b(de)f(f\023)-650 b(otons.)-4066 18934 y(No)512 b(presen)-36
b(te)511 b(trabalho)g(ob)72 b(jetiv)-72 b(amos)514 b(\(inicialmen)-36
b(te\))512 b(aplicar)g(o)g(mesmo)g(formalismo)i(para)d(descrev)-36
b(er)512 b(a)g(pro)36 b(du\030)-578 b(c~)-650 b(ao)-6017
20539 y(de)398 b(lam)-36 b(b)36 b(da)398 b(dominan)-36
b(te.)566 b(Neste)398 b(caso)h(o)f(pr\023)-650 b(oton)398
b(inicial)h(decai)g(no)f(par)g(k\023)-650 b(aon)399 b(+)f(lam)-36
b(b)36 b(da)398 b(\()p Fh(p)368 b Fg(!)i Fh(K)43367 20057
y Ff(+)44377 20539 y Fk(+)222 b Fh(\003)46514 20057 y
Ff(0)47040 20539 y Fk(\),)405 b(com)399 b(p)36 b(osterior)-6017
22144 y(in)-36 b(tera\030)-578 b(c~)-650 b(ao)434 b(en)-36
b(tre)433 b(o)h(k\023)-650 b(aon)434 b(e)f(o)h(dip)36
b(olo)434 b(de)g(cor)f(\(\015utua\030)-578 b(c~)-650
b(ao)433 b(do)h(f\023)-650 b(oton)434 b(emitido)g(p)36
b(elo)434 b(el)-36 b(\023)-614 b(etron/h\023)-650 b(adron)433
b(inicial\).)-4066 23749 y(A)558 b(motiv)-72 b(a\030)-578
b(c~)-650 b(ao)561 b(para)d(tal)h(an\023)-650 b(alise)524
b(\023)-614 b(e)559 b(a)g(p)36 b(ossibilidade)559 b(de)f(medida)g(da)h
(pro)36 b(du\030)-578 b(c~)-650 b(ao)558 b(de)h(lam)-36
b(b)36 b(da)558 b(dominan)-36 b(te)558 b(no)h(JLab.)-6017
25354 y(Al)-36 b(\023)-614 b(em)391 b(disso,)400 b(uma)390
b(v)-36 b(ez)392 b(que)e(os)i(canais)f(de)f(decaimen)-36
b(to)391 b(do)g Fh(\003)24880 24872 y Ff(0)25796 25354
y Fk(s~)-650 b(ao)392 b Fh(\003)368 b Fg(!)i Fh(p)208
b Fk(+)g Fh(\031)33837 24872 y Fe(\000)35013 25354 y
Fk(e)391 b Fh(\003)36885 24872 y Ff(0)37779 25354 y Fg(!)370
b Fh(n)208 b Fk(+)g Fh(\031)42467 24872 y Ff(0)42992
25354 y Fk(,)399 b(esse)391 b(pro)36 b(cesso)391 b(tam)-36
b(b)g(\023)-614 b(em)-6017 26959 y(p)36 b(o)g(de)433
b(con)-36 b(tribuir)433 b(no)g(esp)36 b(ectro)434 b(de)f(n)-36
b(^)-614 b(eutron)432 b(dominan)-36 b(te)433 b(que)h(n\023)-650
b(os)433 b(temos)h(estudado)f(nos)470 b(\023)-686 b(ultimos)433
b(anos.)-4066 28564 y(Nota)h(1:)579 b(in)-36 b(v)g(estigar)434
b(se)g(essa)470 b(\023)-686 b(ultima)433 b(parte)h(faz)g(sen)-36
b(tido.)-4066 30169 y(Nota)608 b(2:)926 b(se)608 b(o)g(pico)f(do)h(esp)
36 b(ectro)607 b(de)g(lam)-36 b(b)36 b(da)608 b(for)g(m)-36
b(uito)607 b(abaixo)i(de)e Fh(x)34131 30368 y Fd(L)35491
30169 y Fk(=)665 b(0)p Fh(:)p Fk(8,)616 b(\023)-614 b(e)608
b(p)36 b(oss)-145 b(\023)-506 b(\020v)-36 b(el)609 b(que)f(a)g
(fatoriza\030)-578 b(c~)-650 b(ao)-6017 31774 y Fh(\033)48
b Fk(\()p Fh(\015)72 b(p)p Fk(\))368 b(=)h Fh(f)-428
31981 y Fd(K)10 b(=p)1670 31774 y Fg(\002)296 b Fh(\033)48
b Fk(\()p Fh(\015)72 b(K)95 b Fk(\))432 b(n~)-650 b(ao)434
b(seja)h(mais)f(v\023)-650 b(alida.)p 0 TeXcolorgray
24692 83037 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray -9449 -11024 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -9449
-11024 a 0 TeXcolorgray -15577 -19944 a
SDict begin H.S end
 -15577 -19944
a -15577 -19944 a
SDict begin H.R end
 -15577 -19944 a -15577 -19944 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -15577
-19944 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-6017 -4714 a
SDict begin H.S end
 -6017 -4714 a -6017 -4714 a
SDict begin 14.5 H.A end
 -6017 -4714
a -6017 -4714 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -6017 -4714 a 1435 x Fi(2)2152 b(F)-179
b(ormalismo)716 b(\(inclusiv)-60 b(o\))p 0 TeXcolorgray
-4594 16097 a @beginspecial 101 @llx 499 @lly 494 @urx
721 @ury 2554 @rwi @setspecial
%%BeginDocument: ../figures/diagrams/ln_inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: /home/diego/Jaxo_tmp.dvi
%%CreationDate: Sun Dec 23 23:06:45 2018
%%BoundingBox: 101 499 494 721
%%DocumentFonts: CMSY10 CMMI12 CMR17 CMR12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o /home/diego/sullivan_color.eps
%+ /home/diego/Jaxo_tmp.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.12.23:2106
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pi 3.141592 def /ed{exch def}def /gs{gsave dup scale}def /gsw{ gs
/width ed width setlinewidth }def /p1{/y1 ed /x1 ed}def /p2{/y2 ed
/x2 ed}def /p3{/y3 ed /x3 ed}def /p4{/y4 ed /x4 ed}def /garrow{/arrowpos
ed /arrowspec ed}def /setabs{ dup load abs def }def /normalizearc {
translate exch dup rotate sub 3 2 roll { neg 1 -1 scale } if dup abs
360 ge { pop 360 } { dup dup 0 lt { 360 sub } if 360 div truncate 360
mul sub dup 0.1 lt { pop 360 } if }ifelse } def /normalizeline { 3
index 3 index translate 2 index sub exch 3 index sub 2 copy atan rotate
dup mul exch dup mul add sqrt 3 1 roll pop pop } def /abox{ newpath
x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto closepath }def
/atriangle{ newpath x1 y1 moveto x2 y2 lineto x3 y3 lineto closepath
}def /abezier{ newpath x1 y1 moveto x2 y2 x3 y3 x4 y4 curveto }def
/distance{ dup 3 index sub dup mul 2 index 5 index sub dup mul add
sqrt } def

 /arrowVTriangle { /arrowinset ed /arrowlength ed /arrowwidth ed /arrowstroke
ed newpath 0 arrowlength -0.5 mul moveto arrowwidth arrowlength rlineto
arrowwidth -1 mul arrowlength arrowinset mul -1 mul rlineto arrowwidth
-1 mul arrowlength arrowinset mul rlineto closepath arrowstroke 0 ne
{ gsave arrowstroke setlinewidth stroke grestore } if fill } def /arrow1
{ gsave rotate exec grestore } def

 /fixdash{ 2 copy gt 1 index 0 ne and { 2 copy 2 mul div 0.5 sub round
dup 0 le { pop 0 } if 2 mul 1 add exch pop div dup 2 array astore 0
setdash } { pop pop [] 0 setdash } ifelse } def

 /dashline{ gsave distance dsize fixdash newpath moveto lineto stroke
grestore } def

 /dasharc{ gsave 3 copy sub abs pi mul 180 div mul 3 index angdsize
mul fixdash newpath arc stroke grestore } def

 /doublegluon{ gsw /linesep ed /num ed /ampi ed normalizeline /dr ed
linesep 0 eq { 0 0 dr 0 ampi num gluon1 } { 0 linesep 2 div dup dr
exch ampi num gluon1 0 linesep -2 div dup dr exch ampi num gluon1 }
ifelse grestore } def

 /gluon1{ gsave /num ed /ampi ed normalizeline /dr ed /num num 0.5
sub round def /inc dr num 2 mul 2 add div def /amp8 ampi 0.9 mul def
amp8 0 lt {/amp8 amp8 neg def} if /x1 inc 2 mul def newpath 0 0 moveto
inc 0.1 mul ampi 0.5 mul inc 0.5 mul ampi inc 1.4 mul ampi curveto
x1 amp8 add dup ampi exch ampi neg dup x1 exch curveto 2 1 num { pop
x1 amp8 sub dup ampi neg exch ampi dup x1 inc add exch curveto /x1
x1 inc dup add add def x1 amp8 add dup ampi exch ampi neg dup x1 exch
curveto } for x1 amp8 sub dup ampi neg exch ampi dup x1 inc 0.6 mul
add exch curveto x1 inc 1.5 mul add ampi dr inc 0.1 mul sub ampi 0.5
mul dr 0 curveto stroke grestore } def

 /doublephoton{ gsw /linesep ed /num ed /ampi ed normalizeline /dr
ed linesep 0 eq { 0 0 dr 0 ampi num photon1 } { 0 linesep 2 div dup
dr exch ampi num photon1 0 linesep -2 div dup dr exch ampi num photon1
} ifelse grestore } def

 /photon1{ gsave /num1 ed /ampi1 ed normalizeline /dr ed /num1 num1
2 mul 0.5 sub round def /x2 dr num1 div def /sign 1 def 1 1 num1 {
pop newpath 0 0 moveto 4 3 div x2 mul pi div dup neg x2 add 4 3 div
ampi1 sign mul mul dup 3 1 roll x2 0 curveto stroke /sign sign neg
def x2 0 translate } for grestore } def

 /zigzag{ gsw /num ed /ampi ed normalizeline /dr ed /num num 2 mul
0.5 sub round def /x2 dr num div def /sign 1 def 1 1 num { pop newpath
0 0 moveto x2 2 div ampi sign mul lineto x2 0 lineto stroke /sign sign
neg def x2 0 translate } for grestore } def

 /doublephotonarc{ gsw normalizearc /darc ed /radius ed /linesep ed
/num ed /ampli ed /num num 2 mul round def /darc1 darc num div def
/cp darc1 cos def /sp darc1 sin def darc1 2 div dup /cp2 exch cos def
/sp2 exch sin def linesep 0 eq { radius photonarc1 } { linesep 2 div
radius add photonarc1 linesep -2 div radius add photonarc1 } ifelse
grestore } def

 /photonarc1{ gsave /radius1 ed /ampli1 ampli def newpath 1 1 num {
pop radius1 0 moveto /beta radius1 darc1 mul 180 ampli1 mul div def
/tt sp cp beta mul sub cp sp beta mul add div def /amp1 radius1 ampli1
add 8 mul beta cp2 mul sp2 sub mul beta 4 cp add mul tt cp mul 3 mul
sp 4 mul sub add radius1 mul sub beta tt sub 3 mul div def radius1
ampli1 add 8 mul cp2 mul 1 cp add radius1 mul sub 3 div amp1 sub dup
radius1 sub beta mul amp1 dup radius1 cp mul sub tt mul radius1 sp
mul add radius1 cp mul radius1 sp mul curveto /ampli1 ampli1 neg def
darc1 rotate } for stroke grestore } def

 /doublegluearc{ gsw normalizearc /darc ed /radius ed /linesep ed /num
ed /ampi ed /num num 0.5 sub round def linesep 0 eq { radius gluearc1
} { linesep 2 div radius add gluearc1 linesep -2 div radius add gluearc1
} ifelse grestore } def

 /gluearc1{ gsave /radius1 ed /dr radius1 darc mul pi mul 180 div def
/const darc dr div def darc 360 lt { /inc dr num 2 mul 2 add div def
} { /inc dr num 2 mul div def } ifelse /amp8 ampi 0.9 mul def /amp1
radius1 ampi add def /amp2 radius1 ampi sub def /amp3 radius1 ampi
2 div add def /amp4 amp1 inc amp8 add const mul cos div def /amp5 amp2
amp8 const mul cos div def /amp6 amp1 inc 0.6 mul amp8 add const mul
cos div def /amp7 amp1 inc 0.9 mul const mul cos div def amp8 0 lt
{/amp8 amp8 neg def} if newpath darc 360 lt { /x1 inc 2 mul def radius1
0 moveto inc 0.1 mul const mul dup cos amp3 mul exch sin amp3 mul inc
0.5 mul const mul dup cos amp7 mul exch sin amp7 mul inc 1.4 mul const
mul dup cos amp1 mul exch sin amp1 mul curveto x1 amp8 add const mul
dup cos amp6 mul exch sin amp6 mul x1 amp8 add const mul dup cos amp5
mul exch sin amp5 mul x1 const mul dup cos amp2 mul exch sin amp2 mul
curveto 2 1 num } { /x1 0 def amp2 0 moveto 1 1 num } ifelse { pop
x1 amp8 sub const mul dup cos amp5 mul exch sin amp5 mul x1 amp8 sub
const mul dup cos amp4 mul exch sin amp4 mul x1 inc add const mul dup
cos amp1 mul exch sin amp1 mul curveto /x1 x1 inc dup add add def x1
amp8 add const mul dup cos amp4 mul exch sin amp4 mul x1 amp8 add const
mul dup cos amp5 mul exch sin amp5 mul x1 const mul dup cos amp2 mul
exch sin amp2 mul curveto } for darc 360 lt { x1 amp8 sub const mul
dup cos amp5 mul exch sin amp5 mul x1 amp8 sub const mul dup cos amp6
mul exch sin amp6 mul x1 inc 0.6 mul add const mul dup cos amp1 mul
exch sin amp1 mul curveto x1 inc 1.5 mul add const mul dup cos amp7
mul exch sin amp7 mul dr inc 0.1 mul sub const mul dup cos amp3 mul
exch sin amp3 mul dr const mul dup cos radius1 mul exch sin radius1
mul curveto } if stroke grestore } def

 /dasharrowdoubleline{ gsw normalizeline /dr ed /dsize ed /linesep
ed /flip ed garrow /linesep setabs /linewidth width def /y11 linesep
0.5 mul def /y22 linesep -0.5 mul def 0 y11 dr arrowpos mul y11 dashline
linesep 0 ne { 0 y22 dr arrowpos mul y22 dashline } if dr arrowpos
mul 0 translate /arrowspec load flip { -90 }{ 90 } ifelse arrow1 0
y11 dr 1 arrowpos sub mul y11 dashline linesep 0 ne { 0 y22 dr 1 arrowpos
sub mul y22 dashline } if grestore } def

 /arc2{ gsw normalizearc /darc ed /radius ed /dsize ed /linesep ed
/angdsize dsize radius div def /flip ed garrow /arcmid darc arrowpos
mul def dsize 0 eq { linesep 0 eq { 0 0 radius 0 darc dasharc } { 0
0 radius linesep 2 div add 0 darc dasharc 0 0 radius linesep -2 div
add 0 darc dasharc } ifelse } { linesep 0 eq { 0 0 radius 0 arcmid
dasharc 0 0 radius arcmid darc dasharc } { 0 0 radius linesep 2 div
add 0 arcmid dasharc 0 0 radius linesep -2 div add 0 arcmid dasharc
0 0 radius linesep 2 div add arcmid darc dasharc 0 0 radius linesep
-2 div add arcmid darc dasharc } ifelse } ifelse arcmid rotate radius
0 translate /arrowspec load flip { 0 } { 180 } ifelse arrow1 grestore
} def

 /vertex{ gs /dotsize ed translate newpath 0 0 dotsize 0 360 arc fill
stroke grestore } def

 /bcirc{ gsw /radius ed translate gsave 1 setgray newpath 0 0 radius
0 360 arc fill grestore newpath 0 0 radius 0 360 arc stroke grestore
} def

 /gcirc{ gsw /gcolor ed /radius ed translate 1 setgray newpath 0 0
radius 0 360 arc fill gcolor setgray newpath 0 0 radius 0 360 arc fill
0 setgray newpath 0 0 radius 0 360 arc stroke grestore } def

 /ccirc1{ gsw /radius ed translate newpath 0 0 radius 0 360 arc fill
grestore } def

 /ccirc2{ gsw /radius ed translate newpath 0 0 radius 0 360 arc stroke
grestore } def

 /box{ gsw p2 p1 abox stroke grestore } def

 /bbox{ gsw p2 p1 gsave 1 setgray abox fill grestore abox stroke grestore
} def

 /gbox{ gsw /gcolor ed p2 p1 1 setgray abox fill gcolor setgray abox
fill 0 setgray abox stroke grestore } def

 /cbox1{ gsw p2 p1 abox fill grestore } def

 /cbox2{ gsw p2 p1 abox stroke grestore } def

 /triangle{ gsw p3 p2 p1 atriangle stroke grestore } def

 /btriangle{ gsw p3 p2 p1 gsave 1 setgray atriangle fill grestore atriangle
stroke grestore } def

 /gtriangle{ gsw /gcolor ed p3 p2 p1 1 setgray atriangle fill gcolor
setgray atriangle fill 0 setgray atriangle stroke grestore } def

 /ctriangle1{ gsw p3 p2 p1 atriangle fill grestore } def

 /ctriangle2{ gsw p3 p2 p1 atriangle stroke grestore } def

 /btext{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def gsave 1 setgray abox fill grestore
abox stroke hsize 2 div neg fsize 3 div neg moveto thetext show grestore
} def

 /b2text{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def gsave 1 setgray abox fill grestore abox stroke hsize1 2
div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /gtext{ gsw /fsize ed /thetext ed /graysc ed translate /hsize thetext
stringwidth pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul
3 div neg def /x2 x1 neg def /y2 y1 neg def graysc setgray abox fill
0 setgray abox stroke hsize 2 div neg fsize 3 div neg moveto thetext
show grestore } def

 /ctext1{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox fill grestore } def

 /ctext2{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox stroke hsize 2 div neg fsize
3 div neg moveto thetext show grestore } def

 /g2text{ gsw /fsize ed /text2 ed /text1 ed /graysc ed translate /hsize1
text1 stringwidth pop def /hsize2 text2 stringwidth pop def hsize1
hsize2 lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize
fsize add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def
/y2 y1 neg def graysc setgray abox fill 0 setgray abox stroke hsize1
2 div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /c2text1{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox fill grestore } def

 /c2text2{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox stroke hsize1 2 div neg fsize 6 div moveto text1 show
hsize2 2 div neg fsize 5 mul 6 div neg moveto text2 show grestore }
def

 /ptext{ gs /text ed /fsize ed /mode ed 3 1 roll translate rotate mode
3 lt { 0 fsize neg translate } { mode 6 lt { /mode mode 3 sub def 0
fsize 2 div neg translate } { /mode mode 6 sub def } ifelse } ifelse
/fsize text stringwidth pop def mode 1 eq { fsize 2 div neg 0 translate
} { mode 2 eq { fsize neg 0 translate } if } ifelse 0 0 moveto text
show grestore } def

 /goval{ gsw /gcolor ed /x1 ed /x2 ed /radius ed translate x1 rotate
x2 radius div 1.0 scale 1 setgray newpath 0 0 radius 0 360 arc fill
gcolor setgray newpath 0 0 radius 0 360 arc fill 0 setgray newpath
0 0 radius 0 360 arc stroke grestore } def

 /coval1{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc fill grestore } def

 /coval2{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def

 /oval{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def

 /docurve{ x1 2 mul x2 add 3 div y1 y0 sub x1 x0 sub div x2 x0 sub
mul y2 y0 sub x2 x0 sub div x1 x0 sub mul add y1 add y0 2 mul add 3
div x1 x2 2 mul add 3 div y2 y3 sub x2 x3 sub div x1 x3 sub mul y1
y3 sub x1 x3 sub div x2 x3 sub mul add y2 add y3 2 mul add 3 div x2
y2 curveto } def

 /makecurve{ gsw /points ed /ss points length 2 idiv 2 mul def newpath
ss 4 gt { /x1 points 0 get def /y1 points 1 get def /x2 points 2 get
def /y2 points 3 get def /x3 points 4 get def /y3 points 5 get def
/x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div y2 y1 sub x2 x1
sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul y1 2 mul add
y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed /x0 points ii
get def /y0 points ii 1 add get def /x1 points ii 2 add get def /y1
points ii 3 add get def /x2 points ii 4 add get def /y2 points ii 5
add get def /x3 points ii 6 add get def /y3 points ii 7 add get def
docurve } for /x0 points ss 6 sub get def /y0 points ss 5 sub get def
/x1 points ss 4 sub get def /y1 points ss 3 sub get def /x2 points
ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul x1 sub def
/y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub 2 mul x2 x1
sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve } { ss
4 eq { points 0 get points 1 get moveto points 2 get points 3 get lineto
} if } ifelse stroke grestore } def

 /makedashcurve{ gsw /dsize ed /points ed /ss points length 2 idiv
2 mul def newpath ss 4 gt { /x1 points 0 get def /y1 points 1 get def
/x2 points 2 get def /y2 points 3 get def /x3 points 4 get def /y3
points 5 get def /x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div
y2 y1 sub x2 x1 sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul
y1 2 mul add y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed
/x0 points ii get def /y0 points ii 1 add get def /x1 points ii 2 add
get def /y1 points ii 3 add get def /x2 points ii 4 add get def /y2
points ii 5 add get def /x3 points ii 6 add get def /y3 points ii 7
add get def docurve } for /x0 points ss 6 sub get def /y0 points ss
5 sub get def /x1 points ss 4 sub get def /y1 points ss 3 sub get def
/x2 points ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul
x1 sub def /y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub
2 mul x2 x1 sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve
} { ss 4 eq { points 0 get points 1 get moveto points 2 get points
3 get lineto } if } ifelse centerdash stroke grestore } def

 /pathlength{ flattenpath /dist 0 def { /yfirst ed /xfirst ed /ymoveto
yfirst def /xmoveto xfirst def } { /ynext ed /xnext ed /dist dist ynext
yfirst sub dup mul xnext xfirst sub dup mul add sqrt add def /yfirst
ynext def /xfirst xnext def } {} {/ynext ymoveto def /xnext xmoveto
def /dist ynext yfirst sub dup mul xnext xfirst sub dup mul add sqrt
add def /yfirst ynext def /xfirst xnext def } pathforall dist } def

 /centerdash{ /pathlen pathlength def /jj pathlen dsize div 2.0 div
cvi def /ddsize pathlen jj 2.0 mul div def [ddsize] ddsize 2 div setdash
} def

 /logaxis{ gsw /offset ed /hashsize ed /nlogs ed normalizeline /rr
ed offset 0 ne { /offset offset ln 10 ln div def } if /offset offset
dup cvi sub def newpath 0 0 moveto rr 0 lineto /lsize rr nlogs div
def 0 1 nlogs { /x2 ed x2 offset ge { /y2 x2 offset sub lsize mul def
y2 rr le { y2 0 moveto y2 hashsize 1.2 mul lineto } if } if } for stroke
width 0.6 mul setlinewidth newpath 0 1 nlogs { /x2 ed 2 1 9 { ln 10
ln div x2 add /xx2 ed xx2 offset ge { /y2 xx2 offset sub lsize mul
def y2 rr le { y2 0 moveto y2 hashsize 0.8 mul lineto } if } if } for
} for stroke grestore } def

 /linaxis{ gsw /offset ed /hashsize ed /perdec ed /numdec ed normalizeline
/rr ed newpath 0 0 moveto rr 0 lineto /x1 rr numdec perdec mul div
def /y1 rr numdec div def /offset offset x1 mul def 0 1 numdec { y1
mul offset sub dup 0 ge { dup rr le { dup 0 moveto hashsize 1.2 mul
lineto } if } if } for stroke width 0.6 mul setlinewidth newpath offset
cvi 1 numdec perdec mul offset add { x1 mul offset sub dup 0 ge { dup
rr le { dup 0 moveto hashsize 0.8 mul lineto } if } if } for stroke
grestore } def

 /dashbezier{ gsw /dsize ed p4 p3 p2 p1 dsize 0 ne { [dsize dsize]
0 setdash } if abezier stroke grestore } def
 
@fedspecial end
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7553D790FA71F25D11EAB33FF45E1B21F7333E36B945FBF1C7796E9D08D
7E6119989A5840C7CBB8AB46892A1DBB8C726D4FC625BC7DF11D303554BA0619
A03BA787077027CD78A8D5B462AF949CEA622545F27AA85CB17A31EF4DE6220D
2ACBA3F62B13EC3FC7D3BE92C6BFECCDA58B45AAF06EBD411D33763AD88B2F4F
64AC0D26831B8BFECF1CAEB9040A2CD851E32747B67B849FE470BE165E630267
9FF51EEBB6AD8DD4B694B9C15EF4F47949304B227E72F97D2BF0D971F17328EE
5B5FD0E3324A6386FE092ADD67408F4EB05B5826C737D5DDD2424819722BD654
8366A9BECC92DF1193356A9BD6EF3C537E31B13C79D48C268E4F0F874BAFA1DA
0BC55AB5E3BD00E8D87447B4999BC72F7ECC8C1AF78C09352BB810ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /gamma put
dup 25 /pi put
dup 76 /L put
dup 81 /Q put
dup 87 /W put
dup 88 /X put
dup 101 /e put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270852EFD360446B9175F889
B9CE9D4F03EBF7079B848946ECEA40D1A541801B10327970A078A29D8B892063
5C90D1A5ABC729BE68EE0050EE17A4B7150E75328A677A7DCEF88C800841BA8E
EF27FDA8ECB027ABD010C521445E35317195939B8FF2FD682FC5F4572E7CECE7
E548847AC429F81D085FF73B3F4E335518768A1266D174F870F139B04229B103
5580C6E8273A0A358EF12B2D5FA77789F403D80BC3FAA47E033D6EF4DDACE356
9FAE662D19514D98A46612C4823D47156B6B2D1ADFE1C36DF0A81A5D74D6856C
A2222BCA351A5EC76586E79FC0C6082E6A965DCFB1AD32ECD0C8247738575EBB
A55EC346B021513CD600F05283EAE190202AFC82F97127D8C19246487A44B034
4247E6C405F21B66B050B8BDB935CE9F0ECFCD11C81AB178587B7C3A9BCCBF37
D44713F3C1D3A2C9472B2EA38F173D2C7D259B56DFFC008CCA4106A9AF77D72A
0D2ED22E36A19E15A7E232176C51FAE6DF02EEACF5E0C9F80EC41334E4878F91
5CF508B9C1DF08AEB3B2888C65AE222B02C65E737066229312A018E607AFD73E
C28FFBF6B6BD806A94BE6EFB28733CE39CF390D8ABDE4AB156FA89227A85D648
0DA41A9D0603EB0FEB09921F1BB83FDDDB17F52681C14DE689A8C6F2576DB779
DA5061BCE943D5A4A38A97F0BE22AFEF4406654946B67B19BCEDD5C13502BF3F
A332F028FDA591442B82FBABDF6B7B9FD2367E45AA87B3E7D151AF48008CB0A1
F8215A59F0CEFD84E9F655600B8893EE2C65BB593B873A749540C46BDA6AAC09
689487F5E0EB021CADA860FED7940D54DDFCF2DB627140ED8AD5DBF7D86C88CF
E8F92970B318B68EB2062D13EE9D94501A974B8C3032967122C49507C2B4F3FA
7769DB73CD3BAFF39711346B6B8F4B86C231B10100D1BAA6B29F192CEAAA9951
CC7A5A6B94BD126B9CEEF17FD79BC48A778BB8A47C821B61D9AF69A47DF33A78
9FF79255ECF2AF644EDBA9C3B1F0D7F17F9CB1AECA3ADEEE18BF378D181BBDEE
22A540F581EC9293DBB7A4F493722E61DB62F5D3C0CE255799769EED04E800D4
68F47B080716ED92AB40645DD6E78973BF5EB3A43922976B876293A1ADE89EDD
49D77B928F1470EA702423E369484A4945CE484A02576EEEDA01ED6232B5D7E4
959A8CBEA43EF356A82DDBB3D49F4CE26294BF924C69B6CA2CFECE06B8A0B572
BBED5F359EC5BC402442BBA33B2663D56444B0951BF1781785213D442C049956
A04CB4C3DD6BB2BE7E6B7B0934D43B9A24F5A9BDEA3D6D9690B071F9E098AEE2
76B5FF364A289222E6D4251DF41E0518AC2618411D22FD178993C5D8D6AB34A1
89FA44CFEE3FDA892F09546C3577E87ADE93E0B7CC52370CA9E3EBA7D77E39BA
1E77028A6C65E6416EAE175987CC0DE539CCF09D64659C31F4F6F7DECBD45B79
48E7D221F611AED2FEAA7C65D451E4B89C2244E53F6CD271A2A3248917A643D0
2A0F7E8B26AD4E3BA9123096C11FBB17BFA9D1E606C6E80A8E023ABE8E51484E
95C3AAB6AAD4F613E6AA4AD8CACA5F0DCD4EDFBA41B63A6B0186ACD058EBAA9F
975C32929239C3AD6487B679963AD904B0C56DDEDC992B0AC10573323A11ED49
F9FEC29F72A4E318B69FDF602026FA7E06CD69FEE69A44770BC42CBC99EED6F7
87523E3E10E70B9371BC1029C621504600198478DAA7EC501E5F9FFB2699CE6F
DF8819769A7B9111902D811A2014E0D2AF054FA9A68E5104C844D6CAF74489F4
DF12B968B75A1E9B07574194ED758640D12B67680F2C969038C6E1135068F1CB
46DB6D61151B435104C087434725BC97B786A1C5B2FC7D3786D42C019B92A247
08315A970C03FB8A15E675A095A2BCD2A3E11A3892E7B31D45F210DAF1A9A090
1A64E2857083E767228F455A30A63D7B5D0EAC533515B21AE7D160C9DD24F93B
9F38F2AE877B07A22FD0EF9FAD1BCF9AD5704BC70D5E2F2BB253E36C07C93A01
E7FC0ED7E70D7DC7DD1F29E61B1D2DEBF3627ED405FE3D9B8B8C53E4315635A1
1C4ACB60093A699B1F5DD8DD56B9CF984128A52251DB3EBD48C62B9DEE487A20
46325C8CBE1F50B06A0E83BF157B7811090206E9A289C6D85936F12AFC7001AE
466B20D86F8E219BF4F0EB952672F2BC7596600630B45B77F455B4DDB86BDDAC
776CE0219249A0963A80A5C0B364144DEE894AC502FDE626B42227100E4B9F15
26F8B6B7042CA92FBD1295E169028D8EE82C0D599F227A94B5CDED396A27203D
4124C4D38167B046AED1B0D431F83719E88DEED376C0F9F6A280DAA3902C72C0
350248A9FF8BD840CF65DBF864B84F4D085798E459B549E548D998C54666AAC0
454C7641649F145EE92566123ED6B56D9D8D96AFCDFAA45163E8F6D1867A4518
D3A79956D53C8FD17A1C51267DD9353C75BF122484D7AD3F1A5B7981CBD3D8D4
C4E94D691DAE700635D1976755C1CACC3692E2D1FB7B99DAF968ACAB0C611D15
1414B87764136C488C7B60116AED63DF4502AD16A80EDB14E23FE74FFF68C716
FC18DCC51D72AD6B7ABF36BCF2E96FE99AC5B566FB2E04AA19ACC357193FED49
60F7C86C19E34F404CA3F2CEAAA648070A31420C0AFC76A26F289B5FDE64091E
5CAB987CBBF209A4B0720D6ACFBD58534055374369C9E962C634DD95F0729660
EB1FCFA76FEA448AABD00138FB1E3E3DAFC93230D1FFB6EE37567D2D5FEAE499
5A5DA95A5133BD12AE97440850D94D3D645533DC38A6CFFB1FE4AF8D1D3B5654
338A963CEDAF50735A0EFFBABA43181792CDE28234360EB320BDE6ECCCFE01FB
053A98F92D823231A3F6E0B0E2E2665D7FDD121E6B446DD11686AB8D06AEE8A7
598B17453B0B3155D069D7E8571471F1CF3D25241E787AE436A2102737826589
96794C2E6E043835D71958EAEAC495541CD1E1598E4C8FDFF01565EC0DFCDC73
8EB05149C68CCB84FBB2112E649639C6CACED4D15D26B4C28F1D35F2934A77F9
D0E4D266EB43CD76BF6B6F71350567B2BCE3E031DF0BF8EC8F5FB3C4879D5086
98BE1955AB61C1D30C51EF2FE454F53BD4F3D81A9AD60C534EC07BD38465667B
A061F7F95B4DEECAFD1116148921087E2C04368217C52CD0A8143F61F5DDC23C
CFE5BF84E9953BA2638CC19D9A9507D109507A62C37711ABA0B52E99BA0DE67C
E46157849865ADB53A8A1F164F83F315E575C67C6520B469F2403EF95ADA3864
6042BD9751D2CEDCA161E12680D76FFE4B8DEFCBBC4E0092F2945F2E44C9A23E
4B48FEFAA4F721E121EBDABD4062FC39D3FAEB2BCA368A9B68C9D1521FEEEB7C
9B8DEF60C50C0A16A037FEC9B58592EAD20D668C4AC5E7A81A8C76CB9584AA4B
03A813242DD7F7E6FD43D679C8EA4AC73E2A3DB1A31524566A686DE5E33171EA
896EF452477650CDB4AE4D032CD4477B009F51A4394CA7F471B4A0A9249A30D5
63BE6F253EAC3BCE9806A8F19FA69113CCCA68DFCC8342F17277E9CDF9119EE3
EFD14CAACBDAF0915A4CE79BDF421F92C6469CF4BAFF76BD691112977E47F1C6
29BED56477027855FC7B0C6D390723865324327454ABAAFB969D90E72C26DF3F
E1EA01ADA1F306EE9A445556EFF2DDF38660E23180A34C96F912945A2268F0CE
476B10535C94E5CD3A6B3E81CCB8AC0F2CF0CA6B8F16049DFEC27B796976DAE6
CF24AE534EC14D3AD6B5C9AF13BFE96E5A9F8FF24DD0B7E0C4DEF95CD624EA17
DA0BD20F1EB2A176AF699305686785050619E0DBD66CF2C8389579F2150BBF78
C0B85A91A258476FA16D348D3A5744DFDBEC9E431AE7939D210E8EDF47621D07
2EDD16CF8637C68A2152B23CA73EC53E92D108DEB5D0EEE852169D20F8AA2D0A
5C853FC4A7835413F4ECC19C8EDFE18609F95B3077A1E83AD22F5BD69D20DF2F
73EE8258DF9CB77B5F62BED759C1205C7D6B3AE420692A51CB110CB929F24AE5
C6D6F40A2C9657A0166DF145CF1526FB3F6EB676A71F88F4EEA8D3687DACAD4F
15A8C0885DE8962B05D1C91AF8DAD8EFB52D6A126A3E02077D329B197BD7569B
B12A2C0F3F73C9F397BFF8B0D53C268ACAB5C7D0D9AF69A8F8774D2126F2F038
4DC17229DD3CC57E1D7EA0689EC369A03C1695D865AEA61BFC444D124F2C1CB1
490F8288DCFD96C6A15EE16E448C4D855E105D79CD10135C3613607F1EEB7174
ED0B668B61906F9D49E0B0B812A5E28EFF0948426E2E9A47B11A2FCF6FE23923
BF650A01C1A19EF49F858A72ACEDD0E9DAEAF82A3F084B4C4C5D6BB6B749B37B
2DD48A9654B992E0DDB426A50418D8F27C61410C6D26E7E3EC2B4B26DC4271BD
546E9D171BB4B3A255A045443AC953E984DC9BDF06210381F850FDFF20EE2518
3CCC68478508A589778AC0D8DDAA7DC6CCBDC2CBD716428B8423CA7D2A6B00CC
A2FFC65716436E0E931243495990C1583351B987CA0DFC8961EDC88B77B6C20A
80E90DF8F438C6C278A4FF9F1261D0DC2DDF0D42A60B9FE5C636BE014F2C7BE4
FD7203898685A5D3F3CB52FC92F87A16BF6154FA2F98B39194E6C63261DEAE5A
CAF474C1405D2AF11A40D18E2AA5F4EA16928EA1FCC029703EACEC38A9E390CF
9A89291A3317A5A1882AC825DFE90D60C353297E1E4DA040D71F219538D81850
42520B2015546665172A4E0C3268014DCD647DB02881BA3E8307BED74ED0E5A2
25A39D146366B306858998CFA02F6022DF64154C908E35857D80315D647FC66F
55CEAC00415E9E8C112975A18312E1882FB13D17EF9E2161EB78A5DC9CF04AEE
AC987B7971104BBBFD0CBF0921412F276CE0F8F63E70D362B5479475A9FBED51
B880D290B17A78BB079C4C06C1FF41267B5279689409A9886DAD4EC3D83D0B5D
CE721DFD22307EC0AECE3AC236CB2B3408E238E381D34442585EDE3F119E5F52
049076B7D285C3526D7E28EAFD9BA56300AFD3D11A0EF85B00874B4D2C0BD4BE
460DD374CC8DF54668C0D5EDE6B6DC7E2D265B99E90AECCCA4D2301D22441AE0
ECA1CDEF7EB34B2CDAF65CD2269A6CE1D4724A5E4757A6A71C305FC6F42CE38F
0DD12581882C9FB4353FE77FAB94C78B5DE50EDD7B90CE7A53B6280855849F3D
A51D06F70B1E9B90E46C58BABACB34EE5E90C8C18D2AD066BCD42B50004EE2AE
23FE38CACA7005AEE6D5E24FA3B215F0B77AEBEF56990ADF6770516705F9D42E
AC9AB1F515E0582F6B2730526DED1D8619F8E291E8AD75578B4C591E72886641
58F7A16AACF15094F812ABF8C5F5320CF64EBED74FEFCFE9B7FFDDB6D653752F
FAC267AA6C29EEBD4ADE66DBAE1AE97963B809
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AF3863EE8A24A003F07FBF0DFBC12CF2625CE95B5F1C575C28144E1D3C8CF5D7
6D071DB7562414E228147876D452804B3142DCDCAB22773DE75726823F1BB198
1C1CA8D89B59FF008B054F0322A543DBCCABA518AB9945020DF8C049A6E112C5
3F67BB74E95B7EB282BEF7146855B689F676652C9042B94436F30E4486D38A40
28052A1592261CDBB8AD7699C5D87F4BCA5095872E836503BF07FC878BDC2D8C
EFFB9A71936242A40A37FBD40595248E56E87C1800A5AE1F039A84F5FF2AC5BE
73D941B2BD23023EE2ED9C1DE973CB1FB183C588277EB6C05B79FEC163531F35
BAF0EB5A87B7EB508203073155BB2D57ECEBAC7883D7681B7E51E023161F3119
39657894467CE353814D5B800E068D61FD2AB5BB2FC2D4C6434268C8A52927F9
78B8ADBF8D551C6BE3172F16B49EF0DAA65ED747373FA8ED286B756F61311374
BF03DE4D50484B8AC29A44573B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B01A190FD830741285B001D05FA4E85693A5DC3207DBCBD7BED7D230C72945A2
D7CBD8E7A0C607F80A4C94CACE846F19B5B15D74CB090F8360C05DBC6BAA5BAA
1CDC394C23B0F46FBA30A15F33344F44E47C17A79B98AAD61952AC0AD2D2B38A
E272F20B3F66F8B1E65BC0C4729108DE73387F7626BFAA1883534E6966E13B41
C5423FA0FFD728E87146717D6BFC8B867BC2D0703A94DD0AEBCA58A7F3AD6353
A2CD596FF217690D3CD3F5AD26F1AD54B45F78756E6D176231363D315DD51A52
BF0D97B34C72DF403BE58343E972C14363811F7AFF422F396D767CE0F1E98A89
F3B2FAB782789C2EA87ECE1A663263F8BF917D16DB37F71CD482921E7D35487C
B899C88243C9D58622E6ED52F44EC2F58353BDAE3E8E48E8803D3687D1FE3B5C
341FFF8F4C737C26CD222AA98A718AC21942EC1870E8C23794EA649E50B55704
5B2EB8CF74125E1C806BA13DB6DDD53D432CA98090C1F051B9F8640E6690A160
07D29DD7392D733FFA0AAC14A1508330940DEBF938ADEA12A4D02BCFC71D6FBC
2633156CFEAB17D53148586CDF6403FB55FA71575CC728B67C930EEA6DB801A5
CD5A5437504E72BD5CE0D305293BFF840128026F26C51D0AD9C7EDF42C1625A9
1BA528E4708F38C1E8768184C9D522757C260665FA6B67795256948407509A8C
306EFE21FC4CA55D34D17CFD931673EF99F7A0E49D4AA21CBD636C91793C5FB4
5CF6DF83961E8BC1FDC1AC100CC848DF319E23ABA2852320E7DEBACF409BA453
AB92E4B425C4EF51BF0B46326707034805BB2AB0FCA9EE758AE9A8930265A0FB
6FC4620228383BFD0C3EF3D1E268AA69C461E96848CF3FCAB1CE088162856883
CB75860B067B85617C599B7EE75A30D1F56F9A9C74F4CD6B01D9EF285A4055A3
B0E246B17076BB595AEDAAAFDE35B2E5AF121D2B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (/home/diego/Jaxo_tmp.dvi)
@start /Fa 205[59 50[{}1 119.552 /CMR12 rf /Fb 174[134
81[{}1 172.188 /CMMI12 rf /Fc 255[112{}1 143.462 /CMSY10
rf /Fd 179[66 76[{}1 99.6264 /CMMI12 rf /Fe 135[80 120[{}1
143.462 /CMMI12 rf /Ff 206[66 7[51 51 40[{}3 143.462
/CMR17 rf /Fg 139[73 95 2[102 1[121 8[94 12[168 191 61[115
11[105 13[{}9 206.559 /CMMI12 rf /Fh 143[172 112[{}1
206.559 /CMSY10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop  0 TeXcolorgray  Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
254 1830 3252 1827 v 1 TeXcolorgray 0 TeXcolorgray -1395
842 a @beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.96   false 0 0 true 59.5
-151.928 -208.072 472.5 0 add -19 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.04   true 0 0 true 59.5
-151.928 -208.072 472.5 0 add -19 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 false 64.033
-136.818 -66.719 412.691 0 add -16.181 0 add 1.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 true 71.451
128.302 72.308 378.286 0 add -15.071 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 false 64.033
-136.818 -66.719 412.691 0 add -16.181 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 false
74.125 141.642 218.358 314.125 0 add -10 0 add 1.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 false 74.125
141.642 218.358 314.125 0 add -10 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.62   false 0 0 484 0 add
-11 0 add 547 0 add -11 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 240 0 add
38 0 add 368 0 add 38 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial
@beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 368 0 add
38 0 add 496 0 add 86 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 240 0 add
-58 0 add 400 0 add -58 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 400 0 add
-58 0 add 528 0 add -106 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial
Green 298 834 a Fh(p)p 470 834 96 9 v 146 x Fg(s)p 0
TeXcolorgray Black 489 1348 a(p)p 0 TeXcolorgray Black
493 571 a(e)p 0 TeXcolorgray Black 3028 1766 a(n)p 0
TeXcolorgray Black 2363 1343 a(\031)p 0 TeXcolorgray
Black 3171 1004 a(X)p 0 TeXcolorgray Black 2092 601 a(\015)p
0 TeXcolorgray RedViolet 3159 1758 a Ff(\()p Fe(x)43
b Ff(\))p 0 TeXcolorgray RedViolet 3279 1789 a Fd(L)p
0 TeXcolorgray RedViolet 2482 1334 a Ff(\(1)31 b Fc(\000)h
Fe(x)43 b Ff(\))p 0 TeXcolorgray RedViolet 2831 1366
a Fd(L)p 0 TeXcolorgray Blue 1873 1669 a Fg(t)p 0 TeXcolorgray
-1395 842 a @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.54   false 0 10  400 0 add
-58 0 add 478 0 add -29 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Black 481 0 add 0 0 add 368 0 add 38 0 add 7.5 6.5 0 2.0 1.0 doublephoton
 
@endspecial Black 2759 156 a(e)p 0 TeXcolorgray
-1395 842 a @beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 true 71.451
128.302 72.308 378.286 0 add -15.071 0 add 1.0 1.0 arc2
 
@endspecial Blue
1544 336 a Fb(Q)p 0 TeXcolorgray Blue 1673 258 a Fa(2)p
0 TeXcolorgray Green 1808 1078 a Fg(W)p 0 TeXcolorgray
-1395 842 a @beginspecial @setspecial
Green   { } 0  false 0 0 390 0 add -9 0 add 397 0 add -6 0 add 1.0
 1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Green   { } 0  false 0 0 397 0 add -6 0 add 404 0 add -9 0 add 1.0
 1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 true 68.548
-147.084 -214.424 441.543 0 add -17.751 0 add 1.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 true 68.548
-147.084 -214.424 441.543 0 add -17.751 0 add 1.0 1.0 arc2
 
@endspecial Green 1468 1054
a(W)p 0 TeXcolorgray -1395 842 a @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.62   false 0 0 484 0 add
-3 0 add 547 0 add 5 0 add 2.0  1.0  dasharrowdoubleline


@endspecial @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.62   false 0 0 484 0 add
-19 0 add 547 0 add -27 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.62   false 0 0 484 0 add
5 0 add 547 0 add 21 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.62   false 0 0 484 0 add
-27 0 add 547 0 add -43 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial
@beginspecial @setspecial
484 0 add -11 0 add 30 12 0 0.882 2.0 1.0 goval
 
@endspecial 1 TeXcolorgray
1 TeXcolorgray 251 3 3259 4 v 251 1831 4 1830 v 3506
1831 V 251 1833 3259 4 v 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 28817 w @beginspecial 87 @llx 499 @lly 508
@urx 721 @ury 2736 @rwi @setspecial
%%BeginDocument: ../figures/diagrams/ln_inc_dip_tese.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: /home/diego/Jaxo_tmp.dvi
%%CreationDate: Wed Jan 16 23:06:31 2019
%%BoundingBox: 87 499 508 721
%%DocumentFonts: CMSY10 CMMI12 CMR17 CMR12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o
%+ "/home/diego/ln_exc_dip_tese (cópia 1).eps" /home/diego/Jaxo_tmp.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2019.01.16:2106
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pi 3.141592 def /ed{exch def}def /gs{gsave dup scale}def /gsw{ gs
/width ed width setlinewidth }def /p1{/y1 ed /x1 ed}def /p2{/y2 ed
/x2 ed}def /p3{/y3 ed /x3 ed}def /p4{/y4 ed /x4 ed}def /garrow{/arrowpos
ed /arrowspec ed}def /setabs{ dup load abs def }def /normalizearc {
translate exch dup rotate sub 3 2 roll { neg 1 -1 scale } if dup abs
360 ge { pop 360 } { dup dup 0 lt { 360 sub } if 360 div truncate 360
mul sub dup 0.1 lt { pop 360 } if }ifelse } def /normalizeline { 3
index 3 index translate 2 index sub exch 3 index sub 2 copy atan rotate
dup mul exch dup mul add sqrt 3 1 roll pop pop } def /abox{ newpath
x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto closepath }def
/atriangle{ newpath x1 y1 moveto x2 y2 lineto x3 y3 lineto closepath
}def /abezier{ newpath x1 y1 moveto x2 y2 x3 y3 x4 y4 curveto }def
/distance{ dup 3 index sub dup mul 2 index 5 index sub dup mul add
sqrt } def

 /arrowVTriangle { /arrowinset ed /arrowlength ed /arrowwidth ed /arrowstroke
ed newpath 0 arrowlength -0.5 mul moveto arrowwidth arrowlength rlineto
arrowwidth -1 mul arrowlength arrowinset mul -1 mul rlineto arrowwidth
-1 mul arrowlength arrowinset mul rlineto closepath arrowstroke 0 ne
{ gsave arrowstroke setlinewidth stroke grestore } if fill } def /arrow1
{ gsave rotate exec grestore } def

 /fixdash{ 2 copy gt 1 index 0 ne and { 2 copy 2 mul div 0.5 sub round
dup 0 le { pop 0 } if 2 mul 1 add exch pop div dup 2 array astore 0
setdash } { pop pop [] 0 setdash } ifelse } def

 /dashline{ gsave distance dsize fixdash newpath moveto lineto stroke
grestore } def

 /dasharc{ gsave 3 copy sub abs pi mul 180 div mul 3 index angdsize
mul fixdash newpath arc stroke grestore } def

 /doublegluon{ gsw /linesep ed /num ed /ampi ed normalizeline /dr ed
linesep 0 eq { 0 0 dr 0 ampi num gluon1 } { 0 linesep 2 div dup dr
exch ampi num gluon1 0 linesep -2 div dup dr exch ampi num gluon1 }
ifelse grestore } def

 /gluon1{ gsave /num ed /ampi ed normalizeline /dr ed /num num 0.5
sub round def /inc dr num 2 mul 2 add div def /amp8 ampi 0.9 mul def
amp8 0 lt {/amp8 amp8 neg def} if /x1 inc 2 mul def newpath 0 0 moveto
inc 0.1 mul ampi 0.5 mul inc 0.5 mul ampi inc 1.4 mul ampi curveto
x1 amp8 add dup ampi exch ampi neg dup x1 exch curveto 2 1 num { pop
x1 amp8 sub dup ampi neg exch ampi dup x1 inc add exch curveto /x1
x1 inc dup add add def x1 amp8 add dup ampi exch ampi neg dup x1 exch
curveto } for x1 amp8 sub dup ampi neg exch ampi dup x1 inc 0.6 mul
add exch curveto x1 inc 1.5 mul add ampi dr inc 0.1 mul sub ampi 0.5
mul dr 0 curveto stroke grestore } def

 /doublephoton{ gsw /linesep ed /num ed /ampi ed normalizeline /dr
ed linesep 0 eq { 0 0 dr 0 ampi num photon1 } { 0 linesep 2 div dup
dr exch ampi num photon1 0 linesep -2 div dup dr exch ampi num photon1
} ifelse grestore } def

 /photon1{ gsave /num1 ed /ampi1 ed normalizeline /dr ed /num1 num1
2 mul 0.5 sub round def /x2 dr num1 div def /sign 1 def 1 1 num1 {
pop newpath 0 0 moveto 4 3 div x2 mul pi div dup neg x2 add 4 3 div
ampi1 sign mul mul dup 3 1 roll x2 0 curveto stroke /sign sign neg
def x2 0 translate } for grestore } def

 /zigzag{ gsw /num ed /ampi ed normalizeline /dr ed /num num 2 mul
0.5 sub round def /x2 dr num div def /sign 1 def 1 1 num { pop newpath
0 0 moveto x2 2 div ampi sign mul lineto x2 0 lineto stroke /sign sign
neg def x2 0 translate } for grestore } def

 /doublephotonarc{ gsw normalizearc /darc ed /radius ed /linesep ed
/num ed /ampli ed /num num 2 mul round def /darc1 darc num div def
/cp darc1 cos def /sp darc1 sin def darc1 2 div dup /cp2 exch cos def
/sp2 exch sin def linesep 0 eq { radius photonarc1 } { linesep 2 div
radius add photonarc1 linesep -2 div radius add photonarc1 } ifelse
grestore } def

 /photonarc1{ gsave /radius1 ed /ampli1 ampli def newpath 1 1 num {
pop radius1 0 moveto /beta radius1 darc1 mul 180 ampli1 mul div def
/tt sp cp beta mul sub cp sp beta mul add div def /amp1 radius1 ampli1
add 8 mul beta cp2 mul sp2 sub mul beta 4 cp add mul tt cp mul 3 mul
sp 4 mul sub add radius1 mul sub beta tt sub 3 mul div def radius1
ampli1 add 8 mul cp2 mul 1 cp add radius1 mul sub 3 div amp1 sub dup
radius1 sub beta mul amp1 dup radius1 cp mul sub tt mul radius1 sp
mul add radius1 cp mul radius1 sp mul curveto /ampli1 ampli1 neg def
darc1 rotate } for stroke grestore } def

 /doublegluearc{ gsw normalizearc /darc ed /radius ed /linesep ed /num
ed /ampi ed /num num 0.5 sub round def linesep 0 eq { radius gluearc1
} { linesep 2 div radius add gluearc1 linesep -2 div radius add gluearc1
} ifelse grestore } def

 /gluearc1{ gsave /radius1 ed /dr radius1 darc mul pi mul 180 div def
/const darc dr div def darc 360 lt { /inc dr num 2 mul 2 add div def
} { /inc dr num 2 mul div def } ifelse /amp8 ampi 0.9 mul def /amp1
radius1 ampi add def /amp2 radius1 ampi sub def /amp3 radius1 ampi
2 div add def /amp4 amp1 inc amp8 add const mul cos div def /amp5 amp2
amp8 const mul cos div def /amp6 amp1 inc 0.6 mul amp8 add const mul
cos div def /amp7 amp1 inc 0.9 mul const mul cos div def amp8 0 lt
{/amp8 amp8 neg def} if newpath darc 360 lt { /x1 inc 2 mul def radius1
0 moveto inc 0.1 mul const mul dup cos amp3 mul exch sin amp3 mul inc
0.5 mul const mul dup cos amp7 mul exch sin amp7 mul inc 1.4 mul const
mul dup cos amp1 mul exch sin amp1 mul curveto x1 amp8 add const mul
dup cos amp6 mul exch sin amp6 mul x1 amp8 add const mul dup cos amp5
mul exch sin amp5 mul x1 const mul dup cos amp2 mul exch sin amp2 mul
curveto 2 1 num } { /x1 0 def amp2 0 moveto 1 1 num } ifelse { pop
x1 amp8 sub const mul dup cos amp5 mul exch sin amp5 mul x1 amp8 sub
const mul dup cos amp4 mul exch sin amp4 mul x1 inc add const mul dup
cos amp1 mul exch sin amp1 mul curveto /x1 x1 inc dup add add def x1
amp8 add const mul dup cos amp4 mul exch sin amp4 mul x1 amp8 add const
mul dup cos amp5 mul exch sin amp5 mul x1 const mul dup cos amp2 mul
exch sin amp2 mul curveto } for darc 360 lt { x1 amp8 sub const mul
dup cos amp5 mul exch sin amp5 mul x1 amp8 sub const mul dup cos amp6
mul exch sin amp6 mul x1 inc 0.6 mul add const mul dup cos amp1 mul
exch sin amp1 mul curveto x1 inc 1.5 mul add const mul dup cos amp7
mul exch sin amp7 mul dr inc 0.1 mul sub const mul dup cos amp3 mul
exch sin amp3 mul dr const mul dup cos radius1 mul exch sin radius1
mul curveto } if stroke grestore } def

 /dasharrowdoubleline{ gsw normalizeline /dr ed /dsize ed /linesep
ed /flip ed garrow /linesep setabs /linewidth width def /y11 linesep
0.5 mul def /y22 linesep -0.5 mul def 0 y11 dr arrowpos mul y11 dashline
linesep 0 ne { 0 y22 dr arrowpos mul y22 dashline } if dr arrowpos
mul 0 translate /arrowspec load flip { -90 }{ 90 } ifelse arrow1 0
y11 dr 1 arrowpos sub mul y11 dashline linesep 0 ne { 0 y22 dr 1 arrowpos
sub mul y22 dashline } if grestore } def

 /arc2{ gsw normalizearc /darc ed /radius ed /dsize ed /linesep ed
/angdsize dsize radius div def /flip ed garrow /arcmid darc arrowpos
mul def dsize 0 eq { linesep 0 eq { 0 0 radius 0 darc dasharc } { 0
0 radius linesep 2 div add 0 darc dasharc 0 0 radius linesep -2 div
add 0 darc dasharc } ifelse } { linesep 0 eq { 0 0 radius 0 arcmid
dasharc 0 0 radius arcmid darc dasharc } { 0 0 radius linesep 2 div
add 0 arcmid dasharc 0 0 radius linesep -2 div add 0 arcmid dasharc
0 0 radius linesep 2 div add arcmid darc dasharc 0 0 radius linesep
-2 div add arcmid darc dasharc } ifelse } ifelse arcmid rotate radius
0 translate /arrowspec load flip { 0 } { 180 } ifelse arrow1 grestore
} def

 /vertex{ gs /dotsize ed translate newpath 0 0 dotsize 0 360 arc fill
stroke grestore } def

 /bcirc{ gsw /radius ed translate gsave 1 setgray newpath 0 0 radius
0 360 arc fill grestore newpath 0 0 radius 0 360 arc stroke grestore
} def

 /gcirc{ gsw /gcolor ed /radius ed translate 1 setgray newpath 0 0
radius 0 360 arc fill gcolor setgray newpath 0 0 radius 0 360 arc fill
0 setgray newpath 0 0 radius 0 360 arc stroke grestore } def

 /ccirc1{ gsw /radius ed translate newpath 0 0 radius 0 360 arc fill
grestore } def

 /ccirc2{ gsw /radius ed translate newpath 0 0 radius 0 360 arc stroke
grestore } def

 /box{ gsw p2 p1 abox stroke grestore } def

 /bbox{ gsw p2 p1 gsave 1 setgray abox fill grestore abox stroke grestore
} def

 /gbox{ gsw /gcolor ed p2 p1 1 setgray abox fill gcolor setgray abox
fill 0 setgray abox stroke grestore } def

 /cbox1{ gsw p2 p1 abox fill grestore } def

 /cbox2{ gsw p2 p1 abox stroke grestore } def

 /triangle{ gsw p3 p2 p1 atriangle stroke grestore } def

 /btriangle{ gsw p3 p2 p1 gsave 1 setgray atriangle fill grestore atriangle
stroke grestore } def

 /gtriangle{ gsw /gcolor ed p3 p2 p1 1 setgray atriangle fill gcolor
setgray atriangle fill 0 setgray atriangle stroke grestore } def

 /ctriangle1{ gsw p3 p2 p1 atriangle fill grestore } def

 /ctriangle2{ gsw p3 p2 p1 atriangle stroke grestore } def

 /btext{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def gsave 1 setgray abox fill grestore
abox stroke hsize 2 div neg fsize 3 div neg moveto thetext show grestore
} def

 /b2text{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def gsave 1 setgray abox fill grestore abox stroke hsize1 2
div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /gtext{ gsw /fsize ed /thetext ed /graysc ed translate /hsize thetext
stringwidth pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul
3 div neg def /x2 x1 neg def /y2 y1 neg def graysc setgray abox fill
0 setgray abox stroke hsize 2 div neg fsize 3 div neg moveto thetext
show grestore } def

 /ctext1{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox fill grestore } def

 /ctext2{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox stroke hsize 2 div neg fsize
3 div neg moveto thetext show grestore } def

 /g2text{ gsw /fsize ed /text2 ed /text1 ed /graysc ed translate /hsize1
text1 stringwidth pop def /hsize2 text2 stringwidth pop def hsize1
hsize2 lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize
fsize add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def
/y2 y1 neg def graysc setgray abox fill 0 setgray abox stroke hsize1
2 div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /c2text1{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox fill grestore } def

 /c2text2{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox stroke hsize1 2 div neg fsize 6 div moveto text1 show
hsize2 2 div neg fsize 5 mul 6 div neg moveto text2 show grestore }
def

 /ptext{ gs /text ed /fsize ed /mode ed 3 1 roll translate rotate mode
3 lt { 0 fsize neg translate } { mode 6 lt { /mode mode 3 sub def 0
fsize 2 div neg translate } { /mode mode 6 sub def } ifelse } ifelse
/fsize text stringwidth pop def mode 1 eq { fsize 2 div neg 0 translate
} { mode 2 eq { fsize neg 0 translate } if } ifelse 0 0 moveto text
show grestore } def

 /goval{ gsw /gcolor ed /x1 ed /x2 ed /radius ed translate x1 rotate
x2 radius div 1.0 scale 1 setgray newpath 0 0 radius 0 360 arc fill
gcolor setgray newpath 0 0 radius 0 360 arc fill 0 setgray newpath
0 0 radius 0 360 arc stroke grestore } def

 /coval1{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc fill grestore } def

 /coval2{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def

 /oval{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def

 /docurve{ x1 2 mul x2 add 3 div y1 y0 sub x1 x0 sub div x2 x0 sub
mul y2 y0 sub x2 x0 sub div x1 x0 sub mul add y1 add y0 2 mul add 3
div x1 x2 2 mul add 3 div y2 y3 sub x2 x3 sub div x1 x3 sub mul y1
y3 sub x1 x3 sub div x2 x3 sub mul add y2 add y3 2 mul add 3 div x2
y2 curveto } def

 /makecurve{ gsw /points ed /ss points length 2 idiv 2 mul def newpath
ss 4 gt { /x1 points 0 get def /y1 points 1 get def /x2 points 2 get
def /y2 points 3 get def /x3 points 4 get def /y3 points 5 get def
/x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div y2 y1 sub x2 x1
sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul y1 2 mul add
y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed /x0 points ii
get def /y0 points ii 1 add get def /x1 points ii 2 add get def /y1
points ii 3 add get def /x2 points ii 4 add get def /y2 points ii 5
add get def /x3 points ii 6 add get def /y3 points ii 7 add get def
docurve } for /x0 points ss 6 sub get def /y0 points ss 5 sub get def
/x1 points ss 4 sub get def /y1 points ss 3 sub get def /x2 points
ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul x1 sub def
/y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub 2 mul x2 x1
sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve } { ss
4 eq { points 0 get points 1 get moveto points 2 get points 3 get lineto
} if } ifelse stroke grestore } def

 /makedashcurve{ gsw /dsize ed /points ed /ss points length 2 idiv
2 mul def newpath ss 4 gt { /x1 points 0 get def /y1 points 1 get def
/x2 points 2 get def /y2 points 3 get def /x3 points 4 get def /y3
points 5 get def /x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div
y2 y1 sub x2 x1 sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul
y1 2 mul add y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed
/x0 points ii get def /y0 points ii 1 add get def /x1 points ii 2 add
get def /y1 points ii 3 add get def /x2 points ii 4 add get def /y2
points ii 5 add get def /x3 points ii 6 add get def /y3 points ii 7
add get def docurve } for /x0 points ss 6 sub get def /y0 points ss
5 sub get def /x1 points ss 4 sub get def /y1 points ss 3 sub get def
/x2 points ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul
x1 sub def /y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub
2 mul x2 x1 sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve
} { ss 4 eq { points 0 get points 1 get moveto points 2 get points
3 get lineto } if } ifelse centerdash stroke grestore } def

 /pathlength{ flattenpath /dist 0 def { /yfirst ed /xfirst ed /ymoveto
yfirst def /xmoveto xfirst def } { /ynext ed /xnext ed /dist dist ynext
yfirst sub dup mul xnext xfirst sub dup mul add sqrt add def /yfirst
ynext def /xfirst xnext def } {} {/ynext ymoveto def /xnext xmoveto
def /dist ynext yfirst sub dup mul xnext xfirst sub dup mul add sqrt
add def /yfirst ynext def /xfirst xnext def } pathforall dist } def

 /centerdash{ /pathlen pathlength def /jj pathlen dsize div 2.0 div
cvi def /ddsize pathlen jj 2.0 mul div def [ddsize] ddsize 2 div setdash
} def

 /logaxis{ gsw /offset ed /hashsize ed /nlogs ed normalizeline /rr
ed offset 0 ne { /offset offset ln 10 ln div def } if /offset offset
dup cvi sub def newpath 0 0 moveto rr 0 lineto /lsize rr nlogs div
def 0 1 nlogs { /x2 ed x2 offset ge { /y2 x2 offset sub lsize mul def
y2 rr le { y2 0 moveto y2 hashsize 1.2 mul lineto } if } if } for stroke
width 0.6 mul setlinewidth newpath 0 1 nlogs { /x2 ed 2 1 9 { ln 10
ln div x2 add /xx2 ed xx2 offset ge { /y2 xx2 offset sub lsize mul
def y2 rr le { y2 0 moveto y2 hashsize 0.8 mul lineto } if } if } for
} for stroke grestore } def

 /linaxis{ gsw /offset ed /hashsize ed /perdec ed /numdec ed normalizeline
/rr ed newpath 0 0 moveto rr 0 lineto /x1 rr numdec perdec mul div
def /y1 rr numdec div def /offset offset x1 mul def 0 1 numdec { y1
mul offset sub dup 0 ge { dup rr le { dup 0 moveto hashsize 1.2 mul
lineto } if } if } for stroke width 0.6 mul setlinewidth newpath offset
cvi 1 numdec perdec mul offset add { x1 mul offset sub dup 0 ge { dup
rr le { dup 0 moveto hashsize 0.8 mul lineto } if } if } for stroke
grestore } def

 /dashbezier{ gsw /dsize ed p4 p3 p2 p1 dsize 0 ne { [dsize dsize]
0 setdash } if abezier stroke grestore } def
 
@fedspecial end
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7553D790FA71F25D11EAB33FF45E1B21F7333E36B945FBF1C7796E9D08D
7E6119989A5840C7CBB8AB46892A1DBB8C726D4FC625BC7DF11D303554BA0619
A03BA787077027CD78A8D5B462AF949CEA622545F27AA85CB17A31EF4DE6220D
2ACBA3F62B13EC3FC7D3BE92C6BFECCDA58B45AAF06EBD411D33763AD88B2F4F
64AC0D26831B8BFECF1CAEB9040A2CD851E32747B67B849FE470BE165E630267
9FF51EEBB6AD8DD4B694B9C15EF4F47949304B227E72F97D2BF0D971F17328EE
5B5FD0E3324A6386FE092ADD67408F4EB05B5826C737D5DDD2424819722BD654
8366A9BECC92DF1193356A9BD6EF3C537E31B13C79D48C268E4F0F874BAFA1DA
0BC55AB5E3BD00E8D87447B4999BC72F7ECC8C1AF78C09352BB810ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /gamma put
dup 25 /pi put
dup 76 /L put
dup 81 /Q put
dup 87 /W put
dup 88 /X put
dup 101 /e put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270852EFD360446B9175F889
B9CE9D4F03EBF7079B848946ECEA40D1A541801B10327970A078A29D8B892063
5C90D1A5ABC729BE68EE0050EE17A4B7150E75328A677A7DCEF88C800841BA8E
EF27FDA8ECB027ABD010C521445E35317195939B8FF2FD682FC5F4572E7CECE7
E548847AC429F81D085FF73B3F4E335518768A1266D174F870F139B04229B103
5580C6E8273A0A358EF12B2D5FA77789F403D80BC3FAA47E033D6EF4DDACE356
9FAE662D19514D98A46612C4823D47156B6B2D1ADFE1C36DF0A81A5D74D6856C
A2222BCA351A5EC76586E79FC0C6082E6A965DCFB1AD32ECD0C8247738575EBB
A55EC346B021513CD600F05283EAE190202AFC82F97127D8C19246487A44B034
4247E6C405F21B66B050B8BDB935CE9F0ECFCD11C81AB178587B7C3A9BCCBF37
D44713F3C1D3A2C9472B2EA38F173D2C7D259B56DFFC008CCA4106A9AF77D72A
0D2ED22E36A19E15A7E232176C51FAE6DF02EEACF5E0C9F80EC41334E4878F91
5CF508B9C1DF08AEB3B2888C65AE222B02C65E737066229312A018E607AFD73E
C28FFBF6B6BD806A94BE6EFB28733CE39CF390D8ABDE4AB156FA89227A85D648
0DA41A9D0603EB0FEB09921F1BB83FDDDB17F52681C14DE689A8C6F2576DB779
DA5061BCE943D5A4A38A97F0BE22AFEF4406654946B67B19BCEDD5C13502BF3F
A332F028FDA591442B82FBABDF6B7B9FD2367E45AA87B3E7D151AF48008CB0A1
F8215A59F0CEFD84E9F655600B8893EE2C65BB593B873A749540C46BDA6AAC09
689487F5E0EB021CADA860FED7940D54DDFCF2DB627140ED8AD5DBF7D86C88CF
E8F92970B318B68EB2062D13EE9D94501A974B8C3032967122C49507C2B4F3FA
7769DB73CD3BAFF39711346B6B8F4B86C231B10100D1BAA6B29F192CEAAA9951
CC7A5A6B94BD126B9CEEF17FD79BC48A778BB8A47C821B61D9AF69A47DF33A78
9FF79255ECF2AF644EDBA9C3B1F0D7F17F9CB1AECA3ADEEE18BF378D181BBDEE
22A540F581EC9293DBB7A4F493722E61DB62F5D3C0CE255799769EED04E800D4
68F47B080716ED92AB40645DD6E78973BF5EB3A43922976B876293A1ADE89EDD
49D77B928F1470EA702423E369484A4945CE484A02576EEEDA01ED6232B5D7E4
959A8CBEA43EF356A82DDBB3D49F4CE26294BF924C69B6CA2CFECE06B8A0B572
BBED5F359EC5BC402442BBA33B2663D56444B0951BF1781785213D442C049956
A04CB4C3DD6BB2BE7E6B7B0934D43B9A24F5A9BDEA3D6D9690B071F9E098AEE2
76B5FF364A289222E6D4251DF41E0518AC2618411D22FD178993C5D8D6AB34A1
89FA44CFEE3FDA892F09546C3577E87ADE93E0B7CC52370CA9E3EBA7D77E39BA
1E77028A6C65E6416EAE175987CC0DE539CCF09D64659C31F4F6F7DECBD45B79
48E7D221F611AED2FEAA7C65D451E4B89C2244E53F6CD271A2A3248917A643D0
2A0F7E8B26AD4E3BA9123096C11FBB17BFA9D1E606C6E80A8E023ABE8E51484E
95C3AAB6AAD4F613E6AA4AD8CACA5F0DCD4EDFBA41B63A6B0186ACD058EBAA9F
975C32929239C3AD6487B679963AD904B0C56DDEDC992B0AC10573323A11ED49
F9FEC29F72A4E318B69FDF602026FA7E06CD69FEE69A44770BC42CBC99EED6F7
87523E3E10E70B9371BC1029C621504600198478DAA7EC501E5F9FFB2699CE6F
DF8819769A7B9111902D811A2014E0D2AF054FA9A68E5104C844D6CAF74489F4
DF12B968B75A1E9B07574194ED758640D12B67680F2C969038C6E1135068F1CB
46DB6D61151B435104C087434725BC97B786A1C5B2FC7D3786D42C019B92A247
08315A970C03FB8A15E675A095A2BCD2A3E11A3892E7B31D45F210DAF1A9A090
1A64E2857083E767228F455A30A63D7B5D0EAC533515B21AE7D160C9DD24F93B
9F38F2AE877B07A22FD0EF9FAD1BCF9AD5704BC70D5E2F2BB253E36C07C93A01
E7FC0ED7E70D7DC7DD1F29E61B1D2DEBF3627ED405FE3D9B8B8C53E4315635A1
1C4ACB60093A699B1F5DD8DD56B9CF984128A52251DB3EBD48C62B9DEE487A20
46325C8CBE1F50B06A0E83BF157B7811090206E9A289C6D85936F12AFC7001AE
466B20D86F8E219BF4F0EB952672F2BC7596600630B45B77F455B4DDB86BDDAC
776CE0219249A0963A80A5C0B364144DEE894AC502FDE626B42227100E4B9F15
26F8B6B7042CA92FBD1295E169028D8EE82C0D599F227A94B5CDED396A27203D
4124C4D38167B046AED1B0D431F83719E88DEED376C0F9F6A280DAA3902C72C0
350248A9FF8BD840CF65DBF864B84F4D085798E459B549E548D998C54666AAC0
454C7641649F145EE92566123ED6B56D9D8D96AFCDFAA45163E8F6D1867A4518
D3A79956D53C8FD17A1C51267DD9353C75BF122484D7AD3F1A5B7981CBD3D8D4
C4E94D691DAE700635D1976755C1CACC3692E2D1FB7B99DAF968ACAB0C611D15
1414B87764136C488C7B60116AED63DF4502AD16A80EDB14E23FE74FFF68C716
FC18DCC51D72AD6B7ABF36BCF2E96FE99AC5B566FB2E04AA19ACC357193FED49
60F7C86C19E34F404CA3F2CEAAA648070A31420C0AFC76A26F289B5FDE64091E
5CAB987CBBF209A4B0720D6ACFBD58534055374369C9E962C634DD95F0729660
EB1FCFA76FEA448AABD00138FB1E3E3DAFC93230D1FFB6EE37567D2D5FEAE499
5A5DA95A5133BD12AE97440850D94D3D645533DC38A6CFFB1FE4AF8D1D3B5654
338A963CEDAF50735A0EFFBABA43181792CDE28234360EB320BDE6ECCCFE01FB
053A98F92D823231A3F6E0B0E2E2665D7FDD121E6B446DD11686AB8D06AEE8A7
598B17453B0B3155D069D7E8571471F1CF3D25241E787AE436A2102737826589
96794C2E6E043835D71958EAEAC495541CD1E1598E4C8FDFF01565EC0DFCDC73
8EB05149C68CCB84FBB2112E649639C6CACED4D15D26B4C28F1D35F2934A77F9
D0E4D266EB43CD76BF6B6F71350567B2BCE3E031DF0BF8EC8F5FB3C4879D5086
98BE1955AB61C1D30C51EF2FE454F53BD4F3D81A9AD60C534EC07BD38465667B
A061F7F95B4DEECAFD1116148921087E2C04368217C52CD0A8143F61F5DDC23C
CFE5BF84E9953BA2638CC19D9A9507D109507A62C37711ABA0B52E99BA0DE67C
E46157849865ADB53A8A1F164F83F315E575C67C6520B469F2403EF95ADA3864
6042BD9751D2CEDCA161E12680D76FFE4B8DEFCBBC4E0092F2945F2E44C9A23E
4B48FEFAA4F721E121EBDABD4062FC39D3FAEB2BCA368A9B68C9D1521FEEEB7C
9B8DEF60C50C0A16A037FEC9B58592EAD20D668C4AC5E7A81A8C76CB9584AA4B
03A813242DD7F7E6FD43D679C8EA4AC73E2A3DB1A31524566A686DE5E33171EA
896EF452477650CDB4AE4D032CD4477B009F51A4394CA7F471B4A0A9249A30D5
63BE6F253EAC3BCE9806A8F19FA69113CCCA68DFCC8342F17277E9CDF9119EE3
EFD14CAACBDAF0915A4CE79BDF421F92C6469CF4BAFF76BD691112977E47F1C6
29BED56477027855FC7B0C6D390723865324327454ABAAFB969D90E72C26DF3F
E1EA01ADA1F306EE9A445556EFF2DDF38660E23180A34C96F912945A2268F0CE
476B10535C94E5CD3A6B3E81CCB8AC0F2CF0CA6B8F16049DFEC27B796976DAE6
CF24AE534EC14D3AD6B5C9AF13BFE96E5A9F8FF24DD0B7E0C4DEF95CD624EA17
DA0BD20F1EB2A176AF699305686785050619E0DBD66CF2C8389579F2150BBF78
C0B85A91A258476FA16D348D3A5744DFDBEC9E431AE7939D210E8EDF47621D07
2EDD16CF8637C68A2152B23CA73EC53E92D108DEB5D0EEE852169D20F8AA2D0A
5C853FC4A7835413F4ECC19C8EDFE18609F95B3077A1E83AD22F5BD69D20DF2F
73EE8258DF9CB77B5F62BED759C1205C7D6B3AE420692A51CB110CB929F24AE5
C6D6F40A2C9657A0166DF145CF1526FB3F6EB676A71F88F4EEA8D3687DACAD4F
15A8C0885DE8962B05D1C91AF8DAD8EFB52D6A126A3E02077D329B197BD7569B
B12A2C0F3F73C9F397BFF8B0D53C268ACAB5C7D0D9AF69A8F8774D2126F2F038
4DC17229DD3CC57E1D7EA0689EC369A03C1695D865AEA61BFC444D124F2C1CB1
490F8288DCFD96C6A15EE16E448C4D855E105D79CD10135C3613607F1EEB7174
ED0B668B61906F9D49E0B0B812A5E28EFF0948426E2E9A47B11A2FCF6FE23923
BF650A01C1A19EF49F858A72ACEDD0E9DAEAF82A3F084B4C4C5D6BB6B749B37B
2DD48A9654B992E0DDB426A50418D8F27C61410C6D26E7E3EC2B4B26DC4271BD
546E9D171BB4B3A255A045443AC953E984DC9BDF06210381F850FDFF20EE2518
3CCC68478508A589778AC0D8DDAA7DC6CCBDC2CBD716428B8423CA7D2A6B00CC
A2FFC65716436E0E931243495990C1583351B987CA0DFC8961EDC88B77B6C20A
80E90DF8F438C6C278A4FF9F1261D0DC2DDF0D42A60B9FE5C636BE014F2C7BE4
FD7203898685A5D3F3CB52FC92F87A16BF6154FA2F98B39194E6C63261DEAE5A
CAF474C1405D2AF11A40D18E2AA5F4EA16928EA1FCC029703EACEC38A9E390CF
9A89291A3317A5A1882AC825DFE90D60C353297E1E4DA040D71F219538D81850
42520B2015546665172A4E0C3268014DCD647DB02881BA3E8307BED74ED0E5A2
25A39D146366B306858998CFA02F6022DF64154C908E35857D80315D647FC66F
55CEAC00415E9E8C112975A18312E1882FB13D17EF9E2161EB78A5DC9CF04AEE
AC987B7971104BBBFD0CBF0921412F276CE0F8F63E70D362B5479475A9FBED51
B880D290B17A78BB079C4C06C1FF41267B5279689409A9886DAD4EC3D83D0B5D
CE721DFD22307EC0AECE3AC236CB2B3408E238E381D34442585EDE3F119E5F52
049076B7D285C3526D7E28EAFD9BA56300AFD3D11A0EF85B00874B4D2C0BD4BE
460DD374CC8DF54668C0D5EDE6B6DC7E2D265B99E90AECCCA4D2301D22441AE0
ECA1CDEF7EB34B2CDAF65CD2269A6CE1D4724A5E4757A6A71C305FC6F42CE38F
0DD12581882C9FB4353FE77FAB94C78B5DE50EDD7B90CE7A53B6280855849F3D
A51D06F70B1E9B90E46C58BABACB34EE5E90C8C18D2AD066BCD42B50004EE2AE
23FE38CACA7005AEE6D5E24FA3B215F0B77AEBEF56990ADF6770516705F9D42E
AC9AB1F515E0582F6B2730526DED1D8619F8E291E8AD75578B4C591E72886641
58F7A16AACF15094F812ABF8C5F5320CF64EBED74FEFCFE9B7FFDDB6D653752F
FAC267AA6C29EEBD4ADE66DBAE1AE97963B809
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AF3863EE8A24A003F07FBF0DFBC12CF2625CE95B5F1C575C28144E1D3C8CF5D7
6D071DB7562414E228147876D452804B3142DCDCAB22773DE75726823F1BB198
1C1CA8D89B59FF008B054F0322A543DBCCABA518AB9945020DF8C049A6E112C5
3F67BB74E95B7EB282BEF7146855B689F676652C9042B94436F30E4486D38A40
28052A1592261CDBB8AD7699C5D87F4BCA5095872E836503BF07FC878BDC2D8C
EFFB9A71936242A40A37FBD40595248E56E87C1800A5AE1F039A84F5FF2AC5BE
73D941B2BD23023EE2ED9C1DE973CB1FB183C588277EB6C05B79FEC163531F35
BAF0EB5A87B7EB508203073155BB2D57ECEBAC7883D7681B7E51E023161F3119
39657894467CE353814D5B800E068D61FD2AB5BB2FC2D4C6434268C8A52927F9
78B8ADBF8D551C6BE3172F16B49EF0DAA65ED747373FA8ED286B756F61311374
BF03DE4D50484B8AC29A44573B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B01A190FD830741285B001D05FA4E85693A5DC3207DBCBD7BED7D230C72945A2
D7CBD8E7A0C607F80A4C94CACE846F19B5B15D74CB090F8360C05DBC6BAA5BAA
1CDC394C23B0F46FBA30A15F33344F44E47C17A79B98AAD61952AC0AD2D2B38A
E272F20B3F66F8B1E65BC0C4729108DE73387F7626BFAA1883534E6966E13B41
C5423FA0FFD728E87146717D6BFC8B867BC2D0703A94DD0AEBCA58A7F3AD6353
A2CD596FF217690D3CD3F5AD26F1AD54B45F78756E6D176231363D315DD51A52
BF0D97B34C72DF403BE58343E972C14363811F7AFF422F396D767CE0F1E98A89
F3B2FAB782789C2EA87ECE1A663263F8BF917D16DB37F71CD482921E7D35487C
B899C88243C9D58622E6ED52F44EC2F58353BDAE3E8E48E8803D3687D1FE3B5C
341FFF8F4C737C26CD222AA98A718AC21942EC1870E8C23794EA649E50B55704
5B2EB8CF74125E1C806BA13DB6DDD53D432CA98090C1F051B9F8640E6690A160
07D29DD7392D733FFA0AAC14A1508330940DEBF938ADEA12A4D02BCFC71D6FBC
2633156CFEAB17D53148586CDF6403FB55FA71575CC728B67C930EEA6DB801A5
CD5A5437504E72BD5CE0D305293BFF840128026F26C51D0AD9C7EDF42C1625A9
1BA528E4708F38C1E8768184C9D522757C260665FA6B67795256948407509A8C
306EFE21FC4CA55D34D17CFD931673EF99F7A0E49D4AA21CBD636C91793C5FB4
5CF6DF83961E8BC1FDC1AC100CC848DF319E23ABA2852320E7DEBACF409BA453
AB92E4B425C4EF51BF0B46326707034805BB2AB0FCA9EE758AE9A8930265A0FB
6FC4620228383BFD0C3EF3D1E268AA69C461E96848CF3FCAB1CE088162856883
CB75860B067B85617C599B7EE75A30D1F56F9A9C74F4CD6B01D9EF285A4055A3
B0E246B17076BB595AEDAAAFDE35B2E5AF121D2B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (/home/diego/Jaxo_tmp.dvi)
@start /Fa 205[59 50[{}1 119.552 /CMR12 rf /Fb 174[134
81[{}1 172.188 /CMMI12 rf /Fc 255[112{}1 143.462 /CMSY10
rf /Fd 179[66 76[{}1 99.6264 /CMMI12 rf /Fe 135[80 120[{}1
143.462 /CMMI12 rf /Ff 206[66 7[51 51 40[{}3 143.462
/CMR17 rf /Fg 139[73 95 2[102 1[121 8[94 12[168 191 61[115
11[105 13[{}9 206.559 /CMMI12 rf /Fh 143[172 112[{}1
206.559 /CMSY10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop  0 TeXcolorgray  Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
142 1830 3476 1827 v 1 TeXcolorgray 0 TeXcolorgray -1507
842 a @beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.04   true 0 0 true 59.333
-154.011 -205.989 472.333 0 add -23 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.96   false 0 0 true 59.333
-154.011 -205.989 472.333 0 add -23 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 false 64.033
-136.818 -66.719 412.691 0 add -16.181 0 add 1.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 true 75.33
-148.641 -212.792 442.326 0 add -17.798 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 false
77.031 142.4 217.6 317.031 0 add -10 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial @setspecial
Black  { } 0  false 0 0 false 185 -108.925 -71.075 501 0 add 179 0
add 2.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Black  { } 0  false 0 0 true 188.001 108.772 71.228 500.5 0 add -174
0 add 2.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Black  {  1 4 10 0.2  arrowVTriangle  } 0.29   true 0 0 false 185 -108.925
-71.075 501 0 add 179 0 add 2.0 1.0 arc2
 
@endspecial @beginspecial @setspecial
Black  {  1 4 10 0.2  arrowVTriangle  } 0.3   false 0 0 true 185 108.925
71.075 501 0 add -171 0 add 2.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 false 64.033
-136.818 -66.719 412.691 0 add -16.181 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 true 75.33
-148.641 -212.792 442.326 0 add -17.798 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial @setspecial
Green  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 false 77.031
142.4 217.6 317.031 0 add -10 0 add 1.0 1.0 arc2
 
@endspecial
@beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 240 0 add
38 0 add 368 0 add 38 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 368 0 add
38 0 add 496 0 add 86 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 240 0 add
-58 0 add 400 0 add -58 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial
@beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.5   false 0 0 400 0 add
-58 0 add 528 0 add -106 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial Green 186 834
a Fh(p)p 358 834 96 9 v 146 x Fg(s)p 0 TeXcolorgray Green
1306 1062 a(W)p 0 TeXcolorgray Black 377 1348 a(p)p 0
TeXcolorgray Black 381 546 a(e)p 0 TeXcolorgray Black
2647 156 a(e)p 0 TeXcolorgray Black 2916 1766 a(n)p 0
TeXcolorgray Black 2251 1343 a(\031)p 0 TeXcolorgray
Black 3332 987 a(X)p 0 TeXcolorgray Black 1963 567 a(\015)p
0 TeXcolorgray RedViolet 3046 1758 a Ff(\()p Fe(x)43
b Ff(\))p 0 TeXcolorgray RedViolet 3167 1789 a Fd(L)p
0 TeXcolorgray RedViolet 2370 1334 a Ff(\(1)31 b Fc(\000)h
Fe(x)43 b Ff(\))p 0 TeXcolorgray RedViolet 2719 1366
a Fd(L)p 0 TeXcolorgray Blue 1761 1669 a Fg(t)p 0 TeXcolorgray
Green 1696 1078 a(W)p 0 TeXcolorgray -1507 842 a @beginspecial
@setspecial
Green   { } 0  false 0 0 390 0 add -9 0 add 397 0 add -6 0 add 1.0
 1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Green   { } 0  false 0 0 397 0 add -6 0 add 404 0 add -9 0 add 1.0
 1.0  dasharrowdoubleline
 
@endspecial
@beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.48   false 0 10  400 0 add
-58 0 add 501 0 add -30 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
501 0 add -9 0 add 30 12 0 0.882 2.0 1.0 goval
 
@endspecial @beginspecial @setspecial
Black 441 0 add 4 0 add 368 0 add 38 0 add 7.5 4.5 0 2.0 1.0 doublephoton
 
@endspecial
@beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.97   false 0 0 true 71.451
128.302 72.308 378.286 0 add -15.071 0 add 1.0 1.0 arc2
 
@endspecial Blue 1432 336
a Fb(Q)p 0 TeXcolorgray Blue 1560 258 a Fa(2)p 0 TeXcolorgray
-1507 842 a @beginspecial @setspecial
Blue  {  1 1.5 3.75 0.2  arrowVTriangle  } 0.03   true 0 0 true 71.451
128.302 72.308 378.286 0 add -15.071 0 add 1.0 1.0 arc2
 
@endspecial @beginspecial
@setspecial
White 500 0 add -11 0 add 566 0 add 26 0 add 1.0 1.0 cbox1
 
@endspecial @beginspecial @setspecial
White 500 0 add -11 0 add 566 0 add 26 0 add 1.0 1.0 cbox2
 
@endspecial
@beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.6   false 0 0 501 0 add
-9 0 add 580 0 add -9 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.6   false 0 0 501 0 add
-1 0 add 580 0 add 7 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.6   false 0 0 501 0 add
-17 0 add 580 0 add -25 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial
@beginspecial @setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.6   false 0 0 501 0 add
7 0 add 580 0 add 23 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial
@setspecial
Black   {  1 4 10 0.2  arrowVTriangle  } 0.6   false 0 0 501 0 add
-25 0 add 580 0 add -41 0 add 2.0  1.0  dasharrowdoubleline
 
@endspecial @beginspecial @setspecial
501 0 add -9 0 add 30 12 0 0.882 2.0 1.0 goval
 
@endspecial
1 TeXcolorgray 1 TeXcolorgray 139 3 3483 4 v 139 1831
4 1830 v 3618 1831 V 139 1833 3483 4 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray -1997 18809 a Fk(Figure)434
b(1:)p 0 TeXcolorgray 3694 18809 a
SDict begin H.S end
 3694 18809 a 3694
18809 a
SDict begin H.R end
 3694 18809 a 3694 18809 a
SDict begin [/View [/XYZ H.V]/Dest (figure.1) cvn /DEST pdfmark end
 3694 18809 a 0 TeXcolorgray
Fk(Pro)36 b(du\030)-578 b(c~)-650 b(ao)433 b(de)h(n)-36
b(^)-614 b(eutron)432 b(dominan)-36 b(te)433 b(\(esquerda\))g(no)g
(formalismo)j(de)d(dip)36 b(olo)434 b(de)f(cor)h(\(direita\).)p
0 TeXcolorgray 0 TeXcolorgray -4066 21818 a(Em)563 b(altas)i(energias)f
(a)g(pro)36 b(du\030)-578 b(c~)-650 b(ao)564 b(de)g(n)-36
b(^)-614 b(eutron)562 b(dominan)-36 b(te)563 b(em)h(um)f(espalhamen)-36
b(to)564 b(f\023)-650 b(oton-pr\023)g(oton)563 b(\(Fig.)p
0.5 0 0 TeXcolorrgb 50483 21818 a
SDict begin H.S end
 50483 21818 a 0.5 0 0
TeXcolorrgb Fk(1)p 0.5 0 0 TeXcolorrgb 51134 20962 a
SDict begin H.R end

51134 20962 a 51134 21818 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 51134 21818 a 0 TeXcolorgray
564 w Fk(,)597 b(painel)-6017 23423 y(esquerdo\))397
b(\023)-614 b(e)434 b(descrita)f(p)36 b(ela)434 b(seguin)-36
b(te)434 b(se\030)-578 b(c~)-650 b(ao)434 b(de)f(c)-36
b(ho)36 b(que)434 b(diferencial:)11381 27146 y
SDict begin H.S end
 11381
27146 a 11381 27146 a
SDict begin 14.5 H.A end
 11381 27146 a 11381 27146 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.1) cvn /DEST pdfmark
end
 11381
27146 a 11514 26247 a Fh(d)12190 25765 y Ff(2)12715 26247
y Fh(\033)48 b Fk(\()p Fh(W)-36 b(;)221 b(Q)16812 25765
y Ff(2)17338 26247 y Fh(;)g(x)18659 26446 y Fd(L)19355
26247 y Fh(;)g(t)p Fk(\))p 11514 26840 9401 54 v 14586
28057 a Fh(dx)16001 28256 y Fd(L)16696 28057 y Fh(dt)21415
27146 y Fk(=)369 b Fh(f)23437 27352 y Fd(\031)32 b(=p)25009
27146 y Fk(\()p Fh(x)26254 27345 y Fd(L)26949 27146 y
Fh(;)221 b(t)p Fk(\))295 b Fg(\002)h Fh(\033)30870 27345
y Fd(\015)31407 27093 y Fc(\003)31886 27345 y Fd(\031)32458
27093 y Fc(\003)32994 27146 y Fk(\()33879 26810 y(^)33500
27146 y Fh(W)34909 26597 y Ff(2)35434 27146 y Fh(;)221
b(Q)37046 26597 y Ff(2)37572 27146 y Fk(\))p 0 TeXcolorgray
16312 w(\(1\))p 0 TeXcolorgray -6017 30953 a(tal)466
b(que)f Fh(f)-941 31160 y Fd(\031)32 b(=p)631 30953 y
Fk(\()p Fh(x)1876 31152 y Fd(L)2571 30953 y Fh(;)221
b(t)p Fk(\))430 b(\023)-614 b(e)466 b(o)g(\015uxo)f(de)g(p)-145
b(\023)-506 b(\020ons)467 b(emitido)f(p)36 b(elo)466
b(pr\023)-650 b(oton)465 b(e)g Fh(\033)28752 31152 y
Fd(\015)29289 30900 y Fc(\003)29769 31152 y Fd(\031)30396
30953 y Fk(\()31281 30618 y(^)30902 30953 y Fh(W)32311
30471 y Ff(2)32837 30953 y Fh(;)221 b(Q)34449 30471 y
Ff(2)34975 30953 y Fk(\))430 b(\023)-614 b(e)465 b(a)h(se\030)-578
b(c~)-650 b(ao)467 b(de)e(c)-36 b(ho)36 b(que)466 b(f\023)-650
b(oton-p)-145 b(\023)-506 b(\020on.)675 b(As)-6017 32558
y(quan)-36 b(tidades)434 b(en)-36 b(v)g(olvidas)437 b(p)36
b(o)g(dem)434 b(ser)h(visualizadas)i(na)e(Fig.)p 0.5 0 0
TeXcolorrgb 25044 32558 a
SDict begin H.S end
 25044 32558 a 0.5 0 0 TeXcolorrgb
Fk(1)p 0.5 0 0 TeXcolorrgb 25695 31702 a
SDict begin H.R end
 25695 31702
a 25695 32558 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 25695 32558 a 0 TeXcolorgray Fk(.)583
b(A)435 b(energia)g(de)g(cen)-36 b(tro)434 b(de)h(massa)h(do)e(sistema)
i(f\023)-650 b(oton-p)-145 b(\023)-506 b(\020on)-6017
34164 y(\()-5132 33828 y(^)-5511 34164 y Fh(W)180 b Fk(\))281
b(\023)-614 b(e)317 b(descrita)h(em)f(termos)g(da)g(energia)g(de)g(cen)
-36 b(tro)317 b(de)g(massa)h(do)f(sistema)g(f\023)-650
b(oton-pr\023)g(oton)317 b(\()p Fh(W)181 b Fk(\))316
b(e)i(da)f(fra\030)-578 b(c~)-650 b(ao)318 b(de)f(momen)-36
b(tum)-6017 35769 y(do)433 b(pr\023)-650 b(oton)433 b(p)36
b(ortada)434 b(p)36 b(elo)434 b(n)-36 b(^)-614 b(eutron)432
b(\()p Fh(x)13726 35968 y Fd(L)14421 35769 y Fk(\):)19269
38702 y
SDict begin H.S end
 19269 38702 a 19269 38702 a
SDict begin 14.5 H.A end
 19269 38702 a 19269
38702 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.2) cvn /DEST pdfmark
end
 19269 38702 a 19648 38366 a Fk(^)19269 38702
y Fh(W)20678 38154 y Ff(2)21572 38702 y Fk(=)369 b(\(1)295
b Fg(\000)h Fh(x)26472 38901 y Fd(L)27167 38702 y Fk(\))p
Fh(W)29082 38154 y Ff(2)29829 38702 y Fh(:)p 0 TeXcolorgray
24200 w Fk(\(2\))p 0 TeXcolorgray -6017 41636 a(Em)433
b(termos)h(de)f(quan)-36 b(tidades)433 b(mensur\023)-650
b(av)-36 b(eis,)434 b(a)g(virtualidade)g(do)f(p)-145
b(\023)-506 b(\020on)435 b(\()p Fh(t)p Fk(\))396 b(\023)-614
b(e)434 b(dado)g(p)36 b(or)15077 45478 y
SDict begin H.S end
 15077 45478
a 15077 45478 a
SDict begin 14.5 H.A end
 15077 45478 a 15077 45478 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.3) cvn /DEST pdfmark
end
 15077 45478
a Fh(t)369 b Fg(')g(\000)18508 44579 y Fh(p)19161 44097
y Ff(2)19161 44915 y Fd(T)p 18484 45173 1435 54 v 18484
46389 a Fh(x)19223 46588 y Fd(L)20346 45478 y Fg(\000)21808
44459 y Fk(\(1)295 b Fg(\000)g Fh(x)25326 44658 y Fd(L)26022
44459 y Fk(\)\()p Fh(m)28172 43977 y Ff(2)28172 44788
y Fd(n)29092 44459 y Fg(\000)h Fh(m)31559 43977 y Ff(2)31559
44788 y Fd(p)32087 44459 y Fh(x)32826 44658 y Fd(L)33522
44459 y Fk(\))p 21808 45173 12221 54 v 27200 46389 a
Fh(x)27939 46588 y Fd(L)p 0 TeXcolorgray 54390 45478
a Fk(\(3\))p 0 TeXcolorgray -6017 48950 a(onde)433 b
Fh(p)-2257 49149 y Fd(T)-1126 48950 y Fk(\023)-614 b(e)434
b(o)g(momen)-36 b(tum)432 b(transv)-36 b(erso)434 b(do)f(n)-36
b(^)-614 b(eutron.)-4066 50555 y(No)448 b(formalismo)i(de)d(dip)36
b(olo)449 b(de)e(cor)i(o)f(pro)36 b(cesso)448 b(descrito)g(acima)h(p)36
b(o)g(de)448 b(ser)g(descrito)g(em)g(termos)f(dos)h(seguin)-36
b(tes)448 b(sub-)-6017 52160 y(pro)36 b(cessos)434 b(\(Fig.)p
0.5 0 0 TeXcolorrgb 2982 52160 a
SDict begin H.S end
 2982 52160 a 0.5 0 0
TeXcolorrgb Fk(1)p 0.5 0 0 TeXcolorrgb 3633 51304 a
SDict begin H.R end
 3633
51304 a 3633 52160 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 3633 52160 a 0 TeXcolorgray Fk(,)g(painel)f
(direito\):)-2434 53765 y([1]:)579 b(O)433 b(f\023)-650
b(oton)434 b(\(emitido)g(p)36 b(elo)434 b(el)-36 b(\023)-614
b(etron\))433 b(\015utua)g(em)g(um)g(par)h(quark-an)-36
b(tiquark)434 b(\(dip)36 b(olo)434 b(de)f(cor,)h Fh(q)143
b Fk(\026)-745 b Fh(q)47 b Fk(\);)-2434 55370 y([2]:)579
b(O)433 b(pr\023)-650 b(oton)433 b(decai)h(p)36 b(elo)434
b(canal)g Fh(p)369 b Fg(!)h Fh(\031)18522 54888 y Ff(+)19603
55370 y Fk(+)295 b Fh(n)p Fk(,)435 b(dando)e(origem)h(ao)g(n)-36
b(^)-614 b(eutron)432 b(dominan)-36 b(te;)-2434 56975
y([3]:)579 b(O)433 b(p)-145 b(\023)-506 b(\020on)435
b(do)e(decaimen)-36 b(to)434 b(do)f(pr\023)-650 b(oton)433
b(in)-36 b(terage)434 b(com)g(o)g(dip)36 b(olo)434 b(de)f(cor)h(\()p
Fh(q)143 b Fk(\026)-745 b Fh(q)342 b Fk(+)294 b Fh(\031)417
b Fg(!)369 b Fh(X)104 b Fk(\).)-6017 60439 y
SDict begin H.S end
 -6017 60439
a -6017 60439 a
SDict begin 14.5 H.A end
 -6017 60439 a -6017 60439 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 -6017 60439
a 1993 x Fb(2.1)1792 b(Fluxo)599 b(de)f(p)-199 b(\023)-697
b(\020ons)-4066 64895 y Fk(O)433 b(\015uxo)g(de)h(p)-145
b(\023)-506 b(\020ons)434 b Fh(f)6373 65101 y Fd(\031)32
b(=p)7945 64895 y Fk(\()p Fh(x)9190 65094 y Fd(L)9885
64895 y Fh(;)221 b(t)p Fk(\))434 b(\(fun\030)-578 b(c~)-650
b(ao)433 b(de)h(desdobramen)-36 b(to\))396 b(\023)-614
b(e)434 b(descrito)f(p)36 b(or)8814 68833 y
SDict begin H.S end
 8814 68833
a 8814 68833 a
SDict begin 14.5 H.A end
 8814 68833 a 8814 68833 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.4) cvn /DEST pdfmark
end
 8814 68833 a
Fh(f)9455 69040 y Fd(\031)c(=p)11027 68833 y Fk(\()p
Fh(x)12272 69032 y Fd(L)12967 68833 y Fh(;)221 b(t)p
Fk(\))369 b(=)16800 67935 y(1)p 16408 68528 1436 54 v
16408 69744 a(4)p Fh(\031)18109 67815 y Fk(2)p Fh(g)19430
67333 y Ff(2)19382 68143 y Fd(p\031)32 b(p)p 18109 68528
2848 54 v 18815 69744 a Fk(4)p Fh(\031)23169 67935 y
Fg(\000)p Fh(t)p 21223 68528 5396 54 v 21223 69744 a
Fk(\()p Fh(t)294 b Fg(\000)i Fh(m)24960 69361 y Ff(2)24960
70073 y Fd(\031)25587 69744 y Fk(\))26093 69361 y Ff(2)26751
68833 y Fk(\(1)g Fg(\000)f Fh(x)30270 69032 y Fd(L)30965
68833 y Fk(\))31471 68285 y Ff(1)p Fe(\000)p Ff(2)p Fd(\013)p
Ff(\()p Fd(t)p Ff(\))34875 68833 y Fk([)p Fh(F)181 b
Fk(\()p Fh(x)37504 69032 y Fd(L)38199 68833 y Fh(;)221
b(t)p Fk(\)])40118 68285 y Ff(2)p 0 TeXcolorgray 54390
68833 a Fk(\(4\))p 0 TeXcolorgray 0 TeXcolorgray 24692
83037 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray -9449 -11024 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -9449
-11024 a 0 TeXcolorgray -15577 -19944 a
SDict begin H.S end
 -15577 -19944
a -15577 -19944 a
SDict begin H.R end
 -15577 -19944 a -15577 -19944 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -15577
-19944 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-6017 -3386 a Fk(sendo)402 b Fh(g)-1757 -3868 y Ff(2)-1805
-3057 y Fd(p\031)32 b(p)-230 -3386 y Fh(=)p Fk(\(4)p
Fh(\031)48 b Fk(\))368 b(=)h(14)p Fh(:)p Fk(4)404 b(a)f(constan)-36
b(te)402 b(de)g(acoplamen)-36 b(to)404 b Fh(\031)24188
-3868 y Ff(0)24713 -3386 y Fh(pp)e Fk(e)h Fh(\013)8 b
Fk(\()p Fh(t)p Fk(\))402 b(est\023)-650 b(a)403 b(relacionado)h(com)f
(a)g(tra)72 b(jet\023)-650 b(oria)404 b(de)e(Regge)i(do)-6017
-1781 y(p)-145 b(\023)-506 b(\020on)434 b Fh(\013)8 b
Fk(\()p Fh(t)p Fk(\))-810 -1582 y Fd(\031)-182 -1781
y Fk(.)578 b(P)-36 b(ara)434 b(descrev)-36 b(er)433 b(o)h(fator)g(de)g
(forma)g([)p Fh(F)181 b Fk(\()p Fh(x)21801 -1582 y Fd(L)22496
-1781 y Fh(;)221 b(t)p Fk(\)])434 b(utilizaremos)h(diferen)-36
b(tes)433 b(mo)36 b(delos:)5215 1942 y
SDict begin H.S end
 5215 1942 a 5215
1942 a
SDict begin 14.5 H.A end
 5215 1942 a 5215 1942 a
SDict begin [/View [/XYZ H.V]/Dest (equation.2.5) cvn /DEST pdfmark
end
 5215 1942 a Fh(F)6057
2141 y Ff(1)6583 1942 y Fk(\()p Fh(x)7828 2141 y Fd(L)8523
1942 y Fh(;)221 b(t)p Fk(\))288 b(=)f(exp)13877 69 y
Fa(\024)14578 1942 y Fh(R)15579 1394 y Ff(2)16238 1043
y Fk(\()p Fh(t)294 b Fg(\000)i Fh(m)19975 561 y Ff(2)19975
1372 y Fd(\031)20602 1043 y Fk(\))p 16238 1636 4870 54
v 16313 2853 a(\(1)f Fg(\000)g Fh(x)19831 3052 y Fd(L)20527
2853 y Fk(\))21240 69 y Fa(\025)22163 1942 y Fh(;)1796
b Fk(com)434 b Fh(\013)8 b Fk(\()p Fh(t)p Fk(\))369 b(=)g(0)434
b(e)f Fh(R)380 b Fk(=)369 b(0)p Fh(:)p Fk(6)434 b(GeV)40648
1385 y Fe(\000)p Ff(1)41906 1942 y Fh(:)p 0 TeXcolorgray
12123 w Fk(\(5\))p 0 TeXcolorgray 5215 4643 a Fh(F)6057
4842 y Ff(2)6583 4643 y Fk(\()p Fh(x)7828 4842 y Fd(L)8523
4643 y Fh(;)221 b(t)p Fk(\))288 b(=)f(1)p Fh(;)1797 b
Fk(com)434 b Fh(\013)8 b Fk(\()p Fh(t)p Fk(\))369 b(=)g
Fh(\013)8 b Fk(\()p Fh(t)p Fk(\))23606 4842 y Fd(\031)24602
4643 y Fg(')369 b Fh(t:)p 0 TeXcolorgray 27555 w Fk(\(6\))p
0 TeXcolorgray 5215 6580 a Fh(F)6057 6779 y Ff(3)6583
6580 y Fk(\()p Fh(x)7828 6779 y Fd(L)8523 6580 y Fh(;)221
b(t)p Fk(\))288 b(=)f(exp)13877 5504 y Fa(\002)14430
6580 y Fh(b)p Fk(\()p Fh(t)295 b Fg(\000)h Fh(m)18721
6032 y Ff(2)18721 6909 y Fd(\031)19348 6580 y Fk(\))19854
5504 y Fa(\003)20628 6580 y Fh(;)1797 b Fk(com)434 b
Fh(\013)8 b Fk(\()p Fh(t)p Fk(\))369 b(=)f Fh(\013)8
b Fk(\()p Fh(t)p Fk(\))31915 6779 y Fd(\031)32912 6580
y Fg(')369 b Fh(t)433 b Fk(e)h Fh(b)369 b Fk(=)f(0)p
Fh(:)p Fk(3)435 b(GeV)43201 6023 y Fe(\000)p Ff(2)44458
6580 y Fh(:)p 0 TeXcolorgray 9571 w Fk(\(7\))p 0 TeXcolorgray
5215 9439 a Fh(F)6057 9638 y Ff(4)6583 9439 y Fk(\()p
Fh(x)7828 9638 y Fd(L)8523 9439 y Fh(;)221 b(t)p Fk(\))288
b(=)11801 8541 y Fh(\003)12704 8059 y Ff(2)12704 8869
y Fd(m)13887 8541 y Fg(\000)295 b Fh(m)16353 8059 y Ff(2)16353
8869 y Fd(\031)p 11801 9134 5180 54 v 12449 10350 a Fh(\003)13352
9967 y Ff(2)13352 10679 y Fd(m)14535 10350 y Fg(\000)g
Fh(t)17113 9439 y(;)1797 b Fk(com)434 b Fh(\013)8 b Fk(\()p
Fh(t)p Fk(\))369 b(=)f(0)434 b(e)g Fh(\003)29082 9638
y Fd(m)30338 9439 y Fk(=)369 b(0)p Fh(:)p Fk(74)435 b(GeV)o
Fh(:)p 0 TeXcolorgray 16991 w Fk(\(8\))p 0 TeXcolorgray
5215 13293 a Fh(F)6057 13492 y Ff(5)6583 13293 y Fk(\()p
Fh(x)7828 13492 y Fd(L)8523 13293 y Fh(;)221 b(t)p Fk(\))288
b(=)11668 11420 y Fa(\024)12502 12395 y Fh(\003)13405
11913 y Ff(2)13405 12740 y Fd(d)14240 12395 y Fg(\000)295
b Fh(m)16706 11913 y Ff(2)16706 12723 y Fd(\031)p 12502
12988 4831 54 v 13150 14204 a Fh(\003)14053 13747 y Ff(2)14053
14574 y Fd(d)14888 14204 y Fg(\000)g Fh(t)17466 11420
y Fa(\025)18167 11692 y Ff(2)18914 13293 y Fh(;)1797
b Fk(com)434 b Fh(\013)8 b Fk(\()p Fh(t)p Fk(\))369 b(=)f(0)434
b(e)g Fh(\003)30883 13492 y Fd(d)31791 13293 y Fk(=)369
b(1)p Fh(:)p Fk(2)434 b(GeV)p Fh(:)p 0 TeXcolorgray 16188
w Fk(\(9\))p 0 TeXcolorgray 0 TeXcolorgray 53740 16013
a(\(10\))p 0 TeXcolorgray -6017 18947 a(.)p 0 TeXcolorgray
24692 83037 a(3)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
